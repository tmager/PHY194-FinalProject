(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    244055,       4967]
NotebookOptionsPosition[    239823,       4829]
NotebookOutlinePosition[    240361,       4848]
CellTagsIndexPosition[    240318,       4845]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Sphere Packing\n",
 StyleBox["Ben Nissan and Tom Magerlein", "Subchapter"]
}], "Title",
 CellChangeTimes->{{3.639747845072847*^9, 3.6397478810110607`*^9}}],

Cell[CellGroupData[{

Cell["Packing Algorithm", "Chapter",
 CellChangeTimes->{{3.6398603356389313`*^9, 3.6398603406721687`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Distribute particles randomly on a sphere and set initial parameters\
\>", "Section",
 CellChangeTimes->{{3.6397478867629766`*^9, 3.639747916858059*^9}, {
  3.639748551093452*^9, 3.639748555330833*^9}}],

Cell["First we declare the number of particles we plan to pack.", "Text",
 CellChangeTimes->{{3.6397483159251957`*^9, 3.6397483420043716`*^9}, {
  3.639748464125737*^9, 3.639748464381936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"numParticles", " ", "=", " ", "12"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639747967381583*^9, 3.639747997574209*^9}, {
  3.639914884958185*^9, 3.639914886452383*^9}, {3.639915915720186*^9, 
  3.63991591584601*^9}, {3.639918131994947*^9, 3.639918132283628*^9}, {
  3.6399224950247498`*^9, 3.6399224961791077`*^9}}],

Cell["\<\
Next, we generate random coordinates (ranging from -1 to 1 on x, y, and z) \
for each particle and normalize them to fit to the unit sphere on which we \
are packing.  To do so, we generate a list of random unit vectors and set \
each one\[CloseCurlyQuote]s components as the coordinates of one of our \
points.\
\>", "Text",
 CellChangeTimes->{{3.639748345436235*^9, 3.6397483527719803`*^9}, {
  3.639748389352037*^9, 3.639748462253826*^9}, {3.6397500061817408`*^9, 
  3.639750071698794*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randUnitVec", " ", ":=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", " ", "1"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639749499040696*^9, 3.639749555200026*^9}, {
   3.639749621339328*^9, 3.639749627803171*^9}, {3.639749687477652*^9, 
   3.639749713172619*^9}, 3.639749745608326*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xRand", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"randUnitVec", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numParticles"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639748122307863*^9, 3.6397481857582703`*^9}, {
   3.639748227832479*^9, 3.639748252639678*^9}, {3.639749719807519*^9, 
   3.639749723758436*^9}, 3.639749798823464*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x0", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Norm", "[", "#", "]"}]}], "&"}], ",", "xRand"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748201279285*^9, 3.639748223295259*^9}, {
  3.63974825495955*^9, 3.639748280882173*^9}}],

Cell["\<\
We set the initial radius of each particle to some relatively small value\
\[LongDash]say, 0.01.\
\>", "Text",
 CellChangeTimes->{{3.6397484753738213`*^9, 3.6397485153322783`*^9}, 
   3.639748570082457*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0.01", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numParticles"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748291424902*^9, 3.6397483097743196`*^9}, {
  3.639752435777946*^9, 3.6397524390372066`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s visualize the particles to verify their random \
distribution on the sphere.\
\>", "Text",
 CellChangeTimes->{{3.6397485774102373`*^9, 3.639748620248891*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showParticles", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "Green", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639748634738414*^9, 3.6397486975698643`*^9}, {
  3.639748841359561*^9, 3.639748849580667*^9}, {3.6397524579738283`*^9, 
  3.639752494293557*^9}, {3.639783298416368*^9, 3.6397832992996597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showParticles", "[", 
  RowBox[{"x0", ",", "r0"}], "]"}]], "Input",
 CellChangeTimes->{{3.639748851065*^9, 3.639748856379835*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    SphereBox[{0.8039241208261485, -0.4839509164138517, -0.3456841310446536}, 
     0.01], SphereBox[{
     0.28070006281416937`, -0.9495852454456133, -0.1396257009583696}, 0.01], 
    SphereBox[{0.8203916867093476, 0.3292950216461912, -0.46746365537571594`},
      0.01], SphereBox[{
     0.2320915848274906, -0.7788302936435683, -0.5827150847157957}, 0.01], 
    SphereBox[{-0.49652821071488823`, 0.11569828254192609`, 
     0.8602753299851856}, 0.01], 
    SphereBox[{0.2822659895244698, -0.8126469321157671, -0.5098341640971146}, 
     0.01], SphereBox[{
     0.8666259599195991, -0.04549857684306162, -0.49687958812844163`}, 0.01], 
    SphereBox[{-0.8805876844646116, -0.428285490403058, 0.20282225883631708`},
      0.01], SphereBox[{-0.1601566312592591, 0.568587699186558, 
     0.8068815785463329}, 0.01], 
    SphereBox[{-0.6851372854909942, -0.6994483737059681, \
-0.20336880918692668`}, 0.01], 
    SphereBox[{-0.8064758760564178, -0.18754018030027922`, 
     0.5607364283796553}, 0.01], 
    SphereBox[{
     0.42741808630747935`, -0.7746674473694077, -0.46605163392420185`}, 
     0.01]}, 
   {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
  Boxed->False,
  ImageSize->{342.09500292788067`, 329.1018737140185},
  ViewPoint->{0.8553048160315423, 3.273027017027304, 0.07581436198112312},
  ViewVertical->{0.09759704027112054, 0.5688219163843521, 
   0.8178786959466364}]], "Output",
 CellChangeTimes->{
  3.639748856727648*^9, 3.6397497589773912`*^9, {3.639752442965665*^9, 
   3.6397524965573587`*^9}, 3.639754479385903*^9, 3.639781099973453*^9, 
   3.639781266074111*^9, 3.639782747189704*^9, 3.6397830117888613`*^9, 
   3.639783136309001*^9, 3.639783218262486*^9, {3.639783301416277*^9, 
   3.639783311649726*^9}, 3.639835292843891*^9, 3.639835333317141*^9, 
   3.6398636035530987`*^9, {3.639910394348577*^9, 3.639910432113693*^9}, {
   3.6399105307253323`*^9, 3.6399105506577377`*^9}, 3.63991139110312*^9, {
   3.639912126412389*^9, 3.6399121423152733`*^9}, {3.639912759948937*^9, 
   3.639912776549138*^9}, {3.639913265959812*^9, 3.639913355510419*^9}, {
   3.639914141994755*^9, 3.639914220400876*^9}, {3.639914420607417*^9, 
   3.639914445873459*^9}, 3.639914889616703*^9, {3.639915906742467*^9, 
   3.6399159195098133`*^9}, {3.6399163336957083`*^9, 3.6399163509452267`*^9}, 
   3.639916405996502*^9}]
}, Open  ]],

Cell["\<\
The particles appear to be randomly distributed, which is ideal.\
\>", "Text",
 CellChangeTimes->{{3.6397518968164186`*^9, 3.639751923555985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moving along the sphere", "Section",
 CellChangeTimes->{{3.639749077599998*^9, 3.639749090590703*^9}, {
  3.639749174307847*^9, 3.639749180602523*^9}}],

Cell["\<\
Next, we create a function to randomly shift a particle along the surface of \
the sphere by some small amount.\
\>", "Text",
 CellChangeTimes->{{3.6397490940544777`*^9, 3.639749097006522*^9}, {
  3.6397491392212963`*^9, 3.639749165362987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shift", "[", 
   RowBox[{"x_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dx", ",", "xNew", ",", "direction"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Generates", " ", "a", " ", "random", " ", "magnitude", " ", "and", " ", 
      "direction", " ", "for", " ", "our", " ", "initial", " ", "shift"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"direction", "=", "randUnitVec"}], ";", "\[IndentingNewLine]", 
     RowBox[{"direction", "-=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"direction", ".", "x"}], ")"}], " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"x", ".", "x"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dx", " ", "=", " ", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Delta]"}], "]"}], "]"}], " ", "*", " ", 
       RowBox[{"Normalize", "[", "direction", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "dx", " ", "is", " ", "currently", " ", "in", " ", "a", " ", 
        "completely", " ", "random", " ", "direction"}], ",", " ", 
       RowBox[{
       "which", " ", "we", " ", "need", " ", "to", " ", "fix", " ", "so", " ",
         "that", " ", "our", " ", "particle", " ", "moves", " ", "along", " ",
         "the", " ", 
        RowBox[{"sphere", "'"}], "s", " ", 
        RowBox[{"surface", ".", "  ", "Because"}], " ", "the", " ", "local", 
        " ", "vector", " ", "normal", " ", "to", " ", "the", " ", "sphere", 
        " ", "at", " ", "point", " ", "x", " ", "is", " ", "parallel", " ", 
        "to", " ", "vector", " ", "x"}], ",", " ", 
       RowBox[{
       "we", " ", "can", " ", "subtract", " ", "from", " ", "dx", " ", "the", 
        " ", "component", " ", "parallel", " ", "to", " ", "vector", " ", "x",
         " ", "to", " ", "force", " ", "dx", " ", "tangent", " ", "to", " ", 
        "the", " ", "sphere"}], ",", " ", 
       RowBox[{"a", " ", "good", " ", "first", " ", 
        RowBox[{"start", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dx", "-=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dx", ".", "x"}], ")"}], " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"x", ".", "x"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Now", ",", " ", 
       RowBox[{"we", " ", "shift", " ", 
        RowBox[{"x", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xNew", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "dx"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Finally", ",", " ", 
       RowBox[{
       "we", " ", "reproject", " ", "our", " ", "new", " ", "position", " ", 
        "onto", " ", "the", " ", "surface", " ", "of", " ", "the", " ", 
        "sphere", " ", "and", " ", "return", " ", "the", " ", "corrected", 
        " ", 
        RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xNew", " ", "/=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"xNew", " ", ".", " ", "xNew"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "xNew", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/TvD0stV7rWjbNoefxAt3VwcAaJj43qjQfTymzen
g+i/P3xmg+hPW+xWg2gHoadrQTSbqOhOEJ3ycs9hEL3jrtIJEO1n+Q9MX85K
vACifW/dfQCia2ZEPgfRTo7/WN2A9LnuG7wgWsyeVwNEHwvYZwqirebyuYNo
84vHA0D0Dq3vYNqllfsOiG7bKHIXRNucCnwLoqdVRINpu2znjyC6os8LTH9i
FVdxB9IHLqqD6WWbFthMBdLsaiZ2INqh3SkYRL8tsAsH0X0t16NB9EanM4kg
ui1Y8tw0IJ2VZg+mAZqrif8=
  "]],

Cell["\<\
We can test this by running it multiple times on a point with arbitrary \
initial position and logging its movement over many iterations.  Ideally, \
this will produce a random path.\
\>", "Text",
 CellChangeTimes->{{3.63975134417318*^9, 3.6397514217868423`*^9}, {
  3.6397514526056128`*^9, 3.639751466625752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testx0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randPath", " ", ":=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"testx0", "=", 
        RowBox[{"shift", "[", 
         RowBox[{"testx0", ",", "0.03"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Gray", ",", 
     RowBox[{"Sphere", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
     "Green", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"randPath", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Boxed", "\[Rule]", " ", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639751531759243*^9, 3.639751539512549*^9}, {
  3.6397515699929943`*^9, 3.639751731278801*^9}, {3.639751854720138*^9, 
  3.639751855001371*^9}, {3.639752999431282*^9, 3.639752999843519*^9}, {
  3.6397833062296667`*^9, 3.6397833068271437`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.5], SphereBox[{0, 0, 0}, 1]}, 
   {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1:eJwUmAc01v8Xx+2sSkWlUllJWjRU5J1IZBSiFDLaUkSRkhURSeQnpOwSWdll
7733evbzmE+phJL/93+Oczrn9vUZ93Pv+77eJG3uGF3h4uDgYHFzcBA/HAvc
TK+iJTZMnqn5DFy8hwqa3czm6AfY5ioaWDzJxp/PmptvfbMovX52eVRKQBZe
a042VtSy0UVqdGlTSMAHt5bNOZZfcWTM8eavVjZ2c1YlmewIgNPLgXeHvL5g
ylJQLaqcjU71qY+TCW8geEu5LyCvBI7114P+trNR1rkuO/ZpGFJaz39pTy7C
HdrHk6+S2ahdN5Ya8TOm9NjwjLfGowqsZLzjfprCxuDN8ct5yjmlzoxrtzo2
lGKOo2PbrXQ2ssh2KeeE8kpL5CNnbnl/xYYh5xj9DDYmFobCr9kXlg7u//7B
XqMQq/wXXp4LYmMow2ghiVJSKqOw3vxpYTEU5vlqfVLZyEl3dClYVlDq6jK+
0/nzFzBExlZy1LMRWLasx1Llc6mmf8BODd88FH86xnWFOOfdh68PnvTMKd0V
9KB9JLcUjhuUbzgR59GaDVbVnc0uXZafVuaTUILxy+vXXcthY1ox9GNPW0rp
3NDCmYQNZeh4l6W6vI0NRt4j29CsT6V2sgOv403y8TBhl38QnQ2r5rOaLznS
SpXWbLGPFE9H7tvmHeELbBwe37uKWh0IIxttEXGtOIwdlEgPmGEju8KD79St
VHCr3zepHX6Few3ptkMkNkgPtrvbp+SiTHhasnx3OJalRPzd/4MNvdMHQx7Y
peEKl9Hipe4HyFpQl1nqZSNqc7lG3v18vDGuiXYrj8f1h01tvv1snPtx5649
dyY8w+4dlR7PRq9FFHc4Ee/eJj0ysDULWZWzFZ6ULPwZddj9d4KN8W792+eP
vkemKLX/895UrDlnmnaaeMdDvOsfW3NmYdnIn1Cmdxm0A52HuF6zcdxc0f2F
XBbif1soJt6uwNrUjZ9aE9nwoXQsUxDMxM1yysfjWuVoLnJutYlh4wyv/dWm
2kw0jpyv9mGXw/P+78F3Nmxs2fL07tPfqZBq1JOymqvFh50JlX/Os9HrOu0c
Z5MCD9u+XJuJOoxv+GCDp2wot/OHnstNQ7V6/GBDRhX0jzTwhfuzMeLAkRPU
+wkmx+v2q9+rQoPX8tuNRHz11tjbOj8+YSYl+MED+yr47bq2woS4193OkD2u
3jFEHbuYSO2rQOhfyfvacWxoGAderXsfB+fztN36jArEl7YvqD1jg1mfO6t2
KhW5xfci9/tWgRaXP+N+iw1VZ2+9OZUEmCVGOX3OroVlUlGohgXRX90e+fSp
z7DU0VS9bFYLpn9t9HFrNo4+TO/U68zG1Q+tP4XVahHiMXu625mNvi/+vAJT
n6DxpH6r0okaTB1verqB2Pcq40e2/UQqdvrvPiT7sAqNO9b0bq0h9mW9njK8
Go9N4vyykzNf4a68+4hfHZH/wuxLe44lIMW83UpH5iuqubyHs4i+2Hq0vvSn
RjwiDD9vCJ//gvi8Xr+uHja2X1rn47YiGtbb5yO9CwsQU5WcIUHUVXV1Lnf4
+bewSbtiq3O5AHeo35oHifrPP/2hisL5BgLFF+e/+RRB6s/M+qvEOhX0VSWL
K96Ae9ajZEdjATo+l3HfiWRj46PzKm2BiZAflJSe96vEa1iUvXzPBnlFr+Li
q3yMLB49mbCzGHrB/nJhRF0N3t2X6eWSRdSTTbiOXgUKFTi/niXWMa2yDb3/
JgtiDudTHXdX4GvwJXp+BBuR6pe2nBnJwr+hhRlJ3QrUHGs8EuDDxtTuUr5J
oTwojZw6cEK/Emf23oxQf8KGa1JzgB4zF63us2GjmpWQO+zwNv8TGzWNJYfX
bvyIOKeZEhqpDHZ1GW/sPrLBzrSs1NpbiFSV5Im4+SK8PjwkTWtkQ4Q36qvi
7s8gB8kqvvfNha6StpdGMRvbCt9dJkvnEf3/6K/O93z8CzAYjfnChuPxPK3y
iHxEh5ZyTYrlI4ceG5lQRtRtpKhJDDkfWdE2p0R/50Dq3rqmM8T7yg2N+cWW
FYA5PL8l2jcLL1YvX8wi3ldwNsnom3cRVm2ZWEyt+AhWOd9xr1BCr272qRYF
ViBH7OZHnnWfMWzww2eWuG/zMSlhWnQ5ZgtcZnfkFeHA4YeFSTvZKH1m1bE8
vgr9is92sZSr0Gf+23M/2DCQr/035FyOmcLjFkybakh00WTmiDq/0jcfqyNa
jJ4QQf6hE5W4dmvzmdlHbHSsaby9JeILFjSWlvFtr0DU1yn9DQ5s8PD+e8/9
jNDNuLtXKlTK4Vd3Sr3/FNFfMX9so5TK8aZdVjDJpwoq/p81dI+x8TpGqejZ
k3JwxruQ3FWrcTpJnPz0BBs/UpM5OPrKUFyvrJ2vV42sB4+60jaywXFtd4Ct
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
zcdO4qnl+a8ChA7Wi49QINAHN545Gs+pSZSzaRdObG7H/g/pbHv/PswGahxb
bTyBH3ePserWdWBhs8FfAv3RX/tYdqfJBNTWDmsXynQgP/xjfD9jEI3hck9l
T07AtPCtFaWtHf/hz55ZoyFUF3EeipecgH9zHNU6pB0VbM1iUYFhtMzPvPhs
P44UJTP6nEc7xpNCWiuDR+FkcONXJvF9q6TT5eSHLQiUl9rhbjgC4dF/nhab
JnDX5+19CTahpyMlWl1VI1izquicZOQE3G6T28cozTA7bK7VUDyE5Qn/6C+O
TqC84l/I2a5GLFtyPfFfyAj65HhLzohMoMWyUaN5Yz02DGqKKFWMot5WxUDl
2Tg60hkvbGsbEJbvwGoPI+GBbssM38txTNiJOwq9bcCiUsqVdc9JuCfT8TQt
axyi68NbDC41os/lRZiqJglXEnqvFbwbh087k4PvdSvseD/3n28ahfu2xkpv
33Ec2cpuT/zRBGUTucJYKxKs7+0w23GT+P5D4ZEApRac6Ur167hOglGqzs9d
c2PofvC3Z1yhDZtn7plWDZLg/pGrvUt4HDlrIpTL+NvhYnf6/vsnJIhoXT2b
LDMOB88kfzO9VkgG9fnY55EIn7ppUJZ/HH8tc9TpD9tw1+uPTFAGCeGLjQ0p
3OP4Tv6xIXqsleBhX9W9vSQkr7kXsn/9GO4UiyYyPZvAmSzxLcCfAqVJl1Ne
11kgGWbkLnxqR2DYWos/uRRYPEp+OnKTBeX9ijOh99vh+7JrOb2UgrOf6n4H
67CQ9dPqgRFfO17FC71z46Ei3MXdvDeSBZpEroY+MddFt85MvP5EQdqUMq/Y
RRZCk99RI4m6Ol76MmJ1KgXztT4SW6hMHIy8vYbvXwf2Mtq//V5BxfjepG0u
w0zoilU8Yj/tgITCqp4/SlRcy9q/aqqbiTe+Ia6p4h14mvV65IkpFfvaiieP
TTBhzwhrNvjahkVFy3uvnlHBZfpc9dhuJoK/bzFxutaO7VpGgY9O0HD1QeSG
ICEmuH+tXvk5rR3lMlQvHksafoR57ahxZyLo3sHjuvvaoWlksdzhJxUWMqfK
Pnxl4h2PxI/uLW0YFB7PfEylwsxM6l91HhMZtuv2PVVrRZDTha8iPDRIuv6+
e1aVibancy818tqwirYqMPICDSqOr915wMSKx0NrV6cQnJSYt0WViBcrW7gd
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
     "]]}},
  Boxed->False,
  ImageSize->{361.30668406802295`, 387.91215335517575`},
  ViewPoint->{2.8242674076853254`, -1.2120210948894783`, -1.415810183403595},
  ViewVertical->{0.9331312970275945, 0.1350026476949202, 
   0.33322705115725615`}]], "Output",
 CellChangeTimes->{
  3.639751864834075*^9, 3.6397524201233673`*^9, 3.639752558292203*^9, {
   3.639752596632742*^9, 3.639752600152508*^9}, 3.639753000233259*^9, 
   3.639754479455237*^9, 3.63978110004386*^9, 3.639781266147283*^9, 
   3.639782747259777*^9, 3.6397830118571243`*^9, 3.6397831363836403`*^9, 
   3.639783218343526*^9, {3.639783307199832*^9, 3.639783311720155*^9}, 
   3.639835292929255*^9, 3.6398353334159822`*^9, 3.639863603645075*^9, {
   3.63991039446028*^9, 3.639910432189402*^9}, {3.639910530816285*^9, 
   3.639910550725093*^9}, 3.63991139121213*^9, {3.6399121264931107`*^9, 
   3.639912142370779*^9}, {3.6399127600434504`*^9, 3.639912776609046*^9}, {
   3.639913266051477*^9, 3.639913355578886*^9}, {3.639914142093863*^9, 
   3.6399142204963207`*^9}, {3.639914420700747*^9, 3.6399144459717627`*^9}, 
   3.639914889948524*^9, {3.639915906826187*^9, 3.639915919642427*^9}, {
   3.6399163337853317`*^9, 3.6399163510428247`*^9}, 3.63991640609007*^9}]
}, Open  ]],

Cell["And we see a nice random path.", "Text",
 CellChangeTimes->{{3.639751880765252*^9, 3.639751890028982*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shifting multiple particles", "Section",
 CellChangeTimes->{{3.6397522878500338`*^9, 3.639752291209585*^9}, {
  3.639780933781332*^9, 3.6397809495959883`*^9}}],

Cell["\<\
When moving multiple different particles along the same sphere, we need to \
make sure that none of them crash into each other or overlap.  We create a \
function to check, for each particle in a given list of coordinates, whether \
a desired shift is possible, shift the particle if so, and report whether the \
shift was successful.\
\>", "Text",
 CellChangeTimes->{{3.639752304041439*^9, 3.639752356279109*^9}, {
  3.639752635631185*^9, 3.6397526358622627`*^9}, {3.639752871115658*^9, 
  3.639752921485277*^9}, {3.639753466923962*^9, 3.639753490547243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkAndShift", "[", 
   RowBox[{"coords_", ",", "radii_", ",", "\[Delta]_", ",", "maxAttempts_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"newCoords", "=", "coords"}], ",", "oldCoord", ",", "nearest", 
      ",", 
      RowBox[{"success", "=", "0"}], ",", "order", ",", "currentIdx"}], "}"}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "For", " ", "each", " ", "particle", " ", "in", " ", "the", " ", 
       "list"}], ",", " ", 
      RowBox[{"selecting", " ", "in", " ", "random", " ", 
       RowBox[{"order", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", " ", "=", " ", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "coords", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "store", " ", "our", " ", "current", " ", "position", " ", 
        "and", " ", "generate", " ", "a", " ", "new", " ", 
        RowBox[{"one", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"currentIdx", " ", "=", " ", 
         RowBox[{
         "order", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"oldCoord", "=", 
         RowBox[{
         "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"shift", "[", 
          RowBox[{
           RowBox[{
           "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
            "\[RightDoubleBracket]"}], ",", "\[Delta]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Then", ",", " ", 
          RowBox[{
          "we", " ", "find", " ", "the", " ", "index", " ", "of", " ", "the", 
           " ", "nearest", " ", 
           RowBox[{"particle", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"nearest", "=", 
         RowBox[{"Last", "[", 
          RowBox[{"Nearest", "[", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[Rule]", " ", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "&"}], ",", "newCoords"}], 
             "]"}], ",", 
            RowBox[{
            "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
             "\[RightDoubleBracket]"}], ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "the", " ", "move", " ", "results", " ", "in", " ", "a", 
           " ", "collision"}], ",", " ", 
          RowBox[{"we", " ", "reject", " ", 
           RowBox[{"it", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{
               "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "newCoords", "\[LeftDoubleBracket]", "nearest", 
                "\[RightDoubleBracket]"}]}], "]"}], "<", 
             RowBox[{
              RowBox[{
              "radii", "\[LeftDoubleBracket]", "currentIdx", 
               "\[RightDoubleBracket]"}], "+", 
              RowBox[{
              "radii", "\[LeftDoubleBracket]", "nearest", 
               "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
              "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
               "\[RightDoubleBracket]"}], "=", "oldCoord"}], ";"}], " ", 
            "\[IndentingNewLine]", "\t\t", ",", "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"success", "++"}], ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\t", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "maxAttempts"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "And", " ", "we", " ", "iterate", " ", "over", " ", "the", " ", 
         "entire", " ", 
         RowBox[{"list", "."}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "coords", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"newCoords", ",", "success"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639752936975016*^9, 3.6397530978169928`*^9}, {
   3.639753286396428*^9, 3.639753286971056*^9}, {3.639753356203824*^9, 
   3.639753462781274*^9}, {3.639753622402072*^9, 3.639753632984223*^9}, {
   3.639754440860317*^9, 3.639754475853621*^9}, {3.639780071434338*^9, 
   3.639780119452783*^9}, {3.6397803092641983`*^9, 3.6397804043781567`*^9}, {
   3.6397804441444483`*^9, 3.639780445472067*^9}, {3.6397805740527077`*^9, 
   3.6397805930179577`*^9}, {3.639780705148789*^9, 3.6397807238458443`*^9}, {
   3.6397812366239862`*^9, 3.6397812379555798`*^9}, {3.639835222503232*^9, 
   3.639835261595688*^9}, 3.6398353312508097`*^9, {3.639910181428089*^9, 
   3.639910210849717*^9}, {3.639910325156575*^9, 3.639910389203711*^9}, {
   3.639912116335497*^9, 3.639912122350978*^9}, {3.639912201631672*^9, 
   3.639912204750498*^9}, {3.6399124262467947`*^9, 3.6399124373198843`*^9}, {
   3.6399127248467712`*^9, 3.639912745262801*^9}, {3.639914398467368*^9, 
   3.639914413820429*^9}, {3.63991518279452*^9, 3.6399151901878567`*^9}, {
   3.639916127846266*^9, 3.63991612831701*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s test this on a fairly small list of fairly large \
particles over a large number of iterations.\
\>", "Text",
 CellChangeTimes->{{3.6397535415462227`*^9, 3.639753550545142*^9}, {
  3.639780976979204*^9, 3.639780995842414*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testRadii", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0.4", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "x0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testx0b", " ", "=", " ", "x0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testPaths", " ", ":=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"testx0b", "=", 
        RowBox[{
         RowBox[{"checkAndShift", "[", 
          RowBox[{"testx0b", ",", "testRadii", ",", "0.1", ",", "1"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.639753644029667*^9, 3.639753660430393*^9}, {
   3.639753692822651*^9, 3.639753813993689*^9}, 3.6397539557590837`*^9, {
   3.639915199882533*^9, 3.639915200070162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{"i", "/", 
           RowBox[{"Length", "[", "testx0b", "]"}]}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"testPaths", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
           "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "testx0b", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"Boxed", "\[Rule]", " ", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639753833305854*^9, 3.6397539211424217`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {GrayLevel[0.5], SphereBox[{0, 0, 0}], 
   {Hue[
     NCache[
      Rational[1, 12], 0.08333333333333333]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmII6weyu8f+dL+6SK7c68P+/t9/dPDd0gf23/qPio
+Kj4qPio+Kj4qPio+Kg4eeIAg/3bUw==
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 6], 0.16666666666666666`]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIG7IKEz9++2ifVD9vhkMye/28/Iuc3W8f3D/qPio
+Kj4qPio+Kj4qPio+Kg4eeIAZijvow==
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 4], 0.25]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmINYt4xJc5vDKXkNfN1db+Kp9oeCvtW9e3d0/Kj4q
Pio+Kj4qPio+Kj4qPipOnjgAAJwtGw==
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 3], 0.3333333333333333]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIJ6S4hisu/Ws/YyVXE26b17sv7j+u9SspY/2j4qP
io+Kj4qPio+Kj4qPio+KkycOAOCbRT4=
     "]]}, 
   {Hue[
     NCache[
      Rational[5, 12], 0.4166666666666667]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIDb/uthJ7vj9/d39O4TT5+21b/z4SyGh/bX9qPio
+Kj4qPio+Kj4qPio+Kg4eeIAZKkfWg==
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 2], 0.5]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIJ71rTBuqcAl+88WU5RNGF/tbz6+dE9/wIP9o+Kj
4qPio+Kj4qPio+Kj4qPi5IkDAD8oG9Y=
     "]]}, 
   {Hue[
     NCache[
      Rational[7, 12], 0.5833333333333334]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIE5iKY9N2/3avi1T5vk07+X7Yz86cz84c3//qPio
+Kj4qPio+Kj4qPio+Kg4eeIA/hfyXw==
     "]]}, 
   {Hue[
     NCache[
      Rational[2, 3], 0.6666666666666666]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIH6o6mh5TPfNfs2qFd3smbf312v65oh8O2k/Kj4q
Pio+Kj4qPio+Kj4qPipOnjgAHU56cw==
     "]]}, 
   {Hue[
     NCache[
      Rational[3, 4], 0.75]], Line3DBox[CompressedData["
1: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
     "]]}, 
   {Hue[
     NCache[
      Rational[5, 6], 0.8333333333333334]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIC5t92Nf+ubpfuPrnn0PE5/tZ/lna/GX/dT+UfFR
8VHxUfFR8VHxUfFR8VFx8sQBFlo2Zg==
     "]]}, 
   {Hue[
     NCache[
      Rational[11, 12], 0.9166666666666666]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmID48W7R+2bmX+1eu6+QLZDyxv1ZhU2vvx4f2o+Kj
4qPio+Kj4qPio+Kj4qPi5IkDAP7FMho=
     "]]}, 
   {Hue[1], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIN5lOiv5YtRt+zdu35OET73YX/mqxvrU5bv7R8VH
xUfFR8VHxUfFR8VHxUfFyRMHAFVNs8o=
     "]]}},
  Boxed->False]], "Output",
 CellChangeTimes->{{3.639753838275302*^9, 3.639753986273773*^9}, 
   3.6397544806787024`*^9, 3.639754569614916*^9, 3.639780416304613*^9, {
   3.639780456418922*^9, 3.63978046860602*^9}, 3.639780601901228*^9, 
   3.639781101399301*^9, {3.6397812451082478`*^9, 3.639781267359823*^9}, 
   3.6397827484850273`*^9, 3.6397830130606127`*^9, 3.639783137602193*^9, 
   3.6397832195934687`*^9, 3.639783312965164*^9, {3.63983528687293*^9, 
   3.639835296696542*^9}, 3.639835335283477*^9, 3.6398636068404512`*^9, {
   3.6399103969241467`*^9, 3.639910434474971*^9}, {3.639910533208386*^9, 
   3.639910553242002*^9}, 3.639911393725263*^9, {3.639912128821169*^9, 
   3.639912144606348*^9}, {3.639912761912546*^9, 3.639912778336391*^9}, {
   3.639913267880929*^9, 3.639913357389975*^9}, {3.639914145009075*^9, 
   3.639914223293985*^9}, {3.639914424342779*^9, 3.63991444962705*^9}, 
   3.639915173898602*^9, {3.639915912160823*^9, 3.639915922335032*^9}, {
   3.63991633666033*^9, 3.639916353834231*^9}, 3.639916408897623*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing the particles", "Section",
 CellChangeTimes->{{3.639780804635442*^9, 3.6397808098966513`*^9}}],

Cell["\<\
Now that we can maneuver the particles around each other without collisions, \
we can pack!  We do so by writing a function that, over many iterations, does \
the following in each:
First, it calls checkAndShift on our list of particles, noting the ratio of \
successful moves to unsuccessful moves.  If the ratio is greater than zero, \
it inflates the particles by a small amount (much smaller than the distance \
we move them in checkAndShift) and proceds to the next iteration.  If the \
ratio is zero, then the particles are fully packed and the function exits.\
\>", "Text",
 CellChangeTimes->{{3.639780812512471*^9, 3.639780815320375*^9}, {
  3.639781173662292*^9, 3.639781200650814*^9}, {3.639781390397133*^9, 
  3.639781761631373*^9}}],

Cell["We set our initial shift length and pack!", "Text",
 CellChangeTimes->{{3.639782845010932*^9, 3.639782895056313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]0", " ", "=", " ", "0.06"}], ";"}]], "Input",
 CellChangeTimes->{{3.6397822214348993`*^9, 3.639782237063236*^9}, {
  3.639913328076385*^9, 3.639913328156148*^9}, {3.639914160981559*^9, 
  3.639914181897369*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pack", "[", 
   RowBox[{"r0_", ",", "x0_", ",", "\[Delta]0_", ",", "maxAttempts_"}], "]"}],
   ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rCurrent", " ", "=", " ", "r0"}], ",", " ", 
      RowBox[{"xCurrent", " ", "=", " ", "x0"}], ",", " ", 
      RowBox[{"\[Delta]Current", " ", "=", " ", "\[Delta]0"}], ",", "ratios", 
      ",", "currentRatio"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ratios", " ", "=", " ", 
      RowBox[{"Reap", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Shifts", " ", "the", " ", 
          RowBox[{"particles", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xCurrent", ",", "currentRatio"}], "}"}], "=", 
           RowBox[{"checkAndShift", "[", 
            RowBox[{
            "xCurrent", ",", "rCurrent", ",", "\[Delta]Current", ",", 
             "maxAttempts"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Logs", " ", "the", " ", "number", " ", "of", " ", "moves", " ", 
            "accepted"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", 
           RowBox[{"currentRatio", "/", 
            RowBox[{"Length", "[", "xCurrent", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Stops", " ", "if", " ", "the", " ", "acceptance", " ", "ratio", 
            " ", "hits", " ", 
            RowBox[{"zero", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"currentRatio", "\[Equal]", "0"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Inflates", " ", "the", " ", "particles", " ", 
            RowBox[{"otherwise", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"rCurrent", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "0.0005"}], "&"}], ",", "rCurrent"}], "]"}]}],
           ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2000"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"ratios", ",", "xCurrent", ",", " ", "rCurrent"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639781770975436*^9, 3.6397821720018597`*^9}, {
   3.639782476536893*^9, 3.639782498383363*^9}, {3.6397829008739*^9, 
   3.6397829013933907`*^9}, 3.639914473416383*^9, {3.639914512796277*^9, 
   3.639914528835751*^9}, {3.6399145609774942`*^9, 3.6399145738101683`*^9}, {
   3.639915211697855*^9, 3.639915227173355*^9}, {3.639916054931611*^9, 
   3.639916062709125*^9}}],

Cell["\<\
We record our table of acceptance ratios, our final particle positions, and \
their final radii.\
\>", "Text",
 CellChangeTimes->{{3.639782908863676*^9, 3.63978296752605*^9}, {
  3.639863572055628*^9, 3.639863576192834*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packResults", " ", "=", " ", 
   RowBox[{"pack", "[", 
    RowBox[{"r0", ",", "x0", ",", "\[Delta]0", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratioResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6397822776625223`*^9, 3.6397823214392643`*^9}, {
   3.63978250213691*^9, 3.639782665355134*^9}, {3.639916399211482*^9, 
   3.639916399905838*^9}, {3.63991645886604*^9, 3.639916459507036*^9}, 
   3.6399181538449163`*^9}],

Cell["We plot the acceptance ratios:", "Text",
 CellChangeTimes->{{3.639782970416979*^9, 3.639782998788715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"ratioResults", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iteration Number\>\"", ",", "\"\<Acceptance Ratio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"3", "/", "4"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639782339165208*^9, 3.639782408373151*^9}, {
  3.6397825309817877`*^9, 3.639782546853301*^9}, {3.63978267087397*^9, 
  3.63978267216873*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd1zuMFVUcx/G/VobqFhQWRq/GGDTGjOJbV/4+wfeA4AMBjyArqMgsu+zu
fe2expopbLQ6CdTkFhbYmOMjMSZoxmiChcVR4xt1GiyN3Mv/Fuc7zeazv/M/
//OfmXthr91/dMfBy0Xkv8tEJj8vXe2W/Kdo7ivgDrwRvhK+Cu7C18HXwzfA
m+Cb4JvhW+ACvhW+Dd4M3w7fAd8J3wXfDd8D3wvfB98Pz8EPwFtgze1heRA5
LA8hh+Vh5LA8ghyWR5HD8hhyWLYi36pnrn7nz+1n/rZ8W26/Tfec+OTCpj3/
WP446mF5AjksTyKH5SnksDyNHJZnkMPyLHJYytwKezjCsh31sIcjLDtQD3s4
wvIc6mEPR1h2oh72cNyJ92MX6mEPx114/55HPezhCMsLqIc9HGF5EfWwhyMs
L6Ee9nCEZTfqYQ9HWF5GPezhCMse1MMejrDszZ+n7s3fDw/Hvajfl+e6D/3h
CMsrOD/s4QiLy92FFXawh4PL70d0+XwJ6+VV9IcVdrCHAxzhBMt+9IcVdrCH
AxzhBMsB9D+A9wG5gz0c4AgnWF5Df1hhB3s4wBFOsBxEf1hhB3s4wBFOsMyj
/7xuPL31h/7G2ecZuYM9HObx/sMJ6+V19IcVdrCHAxzhBMsh9IcVdofw/YY8
wBFOsBxGf1hhB3s4HMb9R55geQP9YYUd7OEARzjB8ib6wwo72MMBjnCC5S30
hxV2sIcDHOEEyxH0hxV2sD+Sv48BeTyCzx/Wy9voDyvsYA8HOMIJlqPoDyvs
YH80ny/AEU6olyp3B+7CBaxwCTu4gj1cwwEewxFuKsyLvEUuC7k7C5gfLmBd
yN+nErnD/hXssb6GAzyGI9zACW5hOZa7A3fhAla4PJbfD4e8gj1cwwEewxFu
4AS3sCxifrgLF4v4/8Fi/jxLrHdwBfvF/H7V2D8s6sLchnMnq79sfqyPcIP9
E9zCsoT5l/L9usgLWOFyKb8fbimfp8L+Hq5RH+Ax1kf0b+CE+hb1cjx3B+4e
x/zH8fce8hJ2WF9hf4/1NRzgMRyxf4P9E9yiXpbz59OBu8t5fbGc1ytcYr2D
K6z3yGs4YP0YjnCzjO9/7Ncil5W8vrOC57+S348CuaK+XMH7j7yCPVzDAf3H
6B+xvkGekLc4n6zi379VzL+a1xfIFfUlcoe8Qu6R13CAx6v65dnJdd7mX83v
T7Oaf18m1LeYR3qYv5fnXbjo5fsr8hJ2Pbz/6OexX93D938vn3fc0xunG87m
x/4N9kvYr4Wlj89/Xy/i4m/+sPn7OjntxSPb/H19/73J9bvNj7zs5+dz2L/q
5/N4uIYDPMZ+Eedt0D/BLfaTgf67abLgN5sf7g7y+mKQz6uD/H6UA90xfcBW
7+BqoNPjn/7V5h/o5GnNbTDXA52fXr/Y/PB4oNdMD/CzzT/QTy9MDmxuBjrd
7txPNj/yFrkM8/06w3x9d6jT1+vEjzY/rEPddukB2PzIHfarhnp+evtsvUf/
GvVhqJunl513jDwO83maoZ6a8GSy+Yf2/L63+WEZ5es7cHdkz+eczQ/ryJ7v
dzb/yD7fX9n8cDXSwfQF/tbmH9l839j82D8gH6M+jux+fm3zz87f2Pyz/T63
+XEeWbP39wubf83uz1mbfy1fX6xZ/89sftSXyB3yai0/j0dez/p9ZPPP8g9t
ftRHrG/QPyFvZ/kpm389zzvrdj8/tvnX8/7Fel6vs/rTNv8s/8Dmx/4V6j3q
azjM1r9r88MR+zVwWlex638ET8im
      "]]}}, {}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Iteration Number\"", TraditionalForm], 
    FormBox["\"Acceptance Ratio\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 510.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6397823907495317`*^9, 3.6397824153105927`*^9}, {
   3.6397825061907587`*^9, 3.639782562365932*^9}, 3.639782672554204*^9, 
   3.639782749550552*^9, 3.639783014084118*^9, 3.639783138602251*^9, 
   3.639783220757448*^9, 3.639783313985736*^9, 3.639835305812935*^9, 
   3.6398353372263927`*^9, 3.639863609770486*^9, {3.6399103998125553`*^9, 
   3.639910436081218*^9}, {3.639910534801077*^9, 3.639910554904253*^9}, 
   3.639911256124442*^9, {3.639911380458515*^9, 3.639911395309794*^9}, {
   3.639912130341679*^9, 3.639912146166164*^9}, {3.639912763462192*^9, 
   3.639912780292471*^9}, {3.6399132695002813`*^9, 3.63991335888559*^9}, {
   3.639914147180958*^9, 3.639914225490265*^9}, {3.6399144271353817`*^9, 
   3.639914452202654*^9}, 3.6399159250747213`*^9, 3.639916018835371*^9, 
   3.6399162352840223`*^9, {3.639916337821686*^9, 3.639916354403542*^9}, {
   3.639916412094304*^9, 3.639916432256247*^9}, 3.639916470733061*^9, 
   3.639918170775782*^9}]
}, Open  ]],

Cell["And, finally, show off our packed particles!", "Text",
 CellChangeTimes->{{3.639782981386093*^9, 3.63978300978827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PackingFraction", "[", "rResults", "]"}]], "Input",
 CellChangeTimes->{{3.639918194060492*^9, 3.6399182042857513`*^9}}],

Cell[BoxData["0.9350281250000013`"], "Output",
 CellChangeTimes->{{3.6399182054386168`*^9, 3.6399182328857*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showParticles", "[", 
    RowBox[{"xResults", ",", "rResults"}], "]"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639782436191094*^9, 3.639782438544909*^9}, {
  3.639782691864512*^9, 3.639782711343402*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    SphereBox[{-0.23580708758812077`, -0.8428431956054059, \
-0.4837461783465331}, 0.2645000000000002], 
    SphereBox[{0.21809810249195488`, -0.9450345467526371, 
     0.24360402938672104`}, 0.2645000000000002], 
    SphereBox[{-0.960183063746914, -0.1122836058833878, 0.2558141433607878}, 
     0.2645000000000002], 
    SphereBox[{0.8413218985315724, -0.2241793192715418, 0.4918547507772784}, 
     0.2645000000000002], 
    SphereBox[{-0.5700317601018609, 0.8166302336308362, 0.09043701673109528}, 
     0.2645000000000002], 
    SphereBox[{-0.6973478576492527, 
     0.6193229626608444, -0.36075619655522434`}, 0.2645000000000002], 
    SphereBox[{0.5135846833212351, -0.6912811561115607, 0.5082923728159717}, 
     0.2645000000000002], 
    SphereBox[{-0.7181946261610576, -0.6831374912334119, 
     0.13236180349594395`}, 0.2645000000000002], 
    SphereBox[{
     0.4511877148761702, -0.25398569156610734`, -0.8555237661365731}, 
     0.2645000000000002], 
    SphereBox[{-0.6157745071232009, 0.2466975072081296, -0.7483061514610673}, 
     0.2645000000000002], 
    SphereBox[{0.3135115284168494, 0.9013813253423032, 0.2987009003566678}, 
     0.2645000000000002], 
    SphereBox[{0.9092589158675197, 0.3470642470028802, -0.22977082575415556`},
      0.2645000000000002], 
    SphereBox[{-0.791520403624649, 0.12420777819086176`, 0.5983877325637302}, 
     0.2645000000000002], 
    SphereBox[{0.9760804225384313, 0.11264256788289319`, 0.1859533829698868}, 
     0.2645000000000002], 
    SphereBox[{0.2869323109076675, 0.9356578786113714, -0.20546090418776455`},
      0.2645000000000002], 
    SphereBox[{0.5855300223756232, 0.40180626569913813`, -0.7040641432012539},
      0.2645000000000002], 
    SphereBox[{-0.36396483328350193`, -0.536449296443048, 0.7614143106605439},
      0.2645000000000002], 
    SphereBox[{-0.07771733619736008, 0.24481751030529023`, 
     0.9664493790687154}, 0.2645000000000002], 
    SphereBox[{-0.658045823828579, -0.6435388598631581, \
-0.39093916353800295`}, 0.2645000000000002], 
    SphereBox[{-0.4038312967960613, 0.48145691780125677`, 0.7778942858957927},
      0.2645000000000002], 
    SphereBox[{0.82573845908464, -0.5483831257692162, 0.1320300896012277}, 
     0.2645000000000002], 
    SphereBox[{-0.311944409929177, -0.8633971794803464, 0.3965299428533992}, 
     0.2645000000000002], 
    SphereBox[{-0.7339305721889451, -0.3290003125526571, 0.5942261434392313}, 
     0.2645000000000002], 
    SphereBox[{0.20585499490262915`, 
     0.17844041856552226`, -0.9621760431936558}, 0.2645000000000002], 
    SphereBox[{0.2457701821368788, 0.7280342069211203, -0.6399712580461256}, 
     0.2645000000000002], 
    SphereBox[{-0.1302210574707072, -0.17923688233069793`, \
-0.9751495353039873}, 0.2645000000000002], 
    SphereBox[{0.3082941891933119, 0.6334664857921544, 0.7097005736842663}, 
     0.2645000000000002], 
    SphereBox[{-0.7665279384165559, -0.22002453627639876`, \
-0.6033441166226952}, 0.2645000000000002], 
    SphereBox[{-0.931149015506478, 0.3569555083755897, 0.07445989498811514}, 
     0.2645000000000002], 
    SphereBox[{-0.9349498522306169, -0.3210083059865381, -0.1510709810042965},
      0.2645000000000002], 
    SphereBox[{0.7525749038313674, 0.465663466143773, 0.4656055738736117}, 
     0.2645000000000002], 
    SphereBox[{-0.11833612521584107`, 0.8134411532393951, 0.569482266348535}, 
     0.2645000000000002], 
    SphereBox[{0.0838311058001857, -0.7063281569142784, 0.7029031799973567}, 
     0.2645000000000002], 
    SphereBox[{0.07419961060295154, -0.5868399247312106, -0.8062960501750195},
      0.2645000000000002], 
    SphereBox[{0.037535764985226185`, -0.24355374283425352`, 
     0.9691607919733443}, 0.2645000000000002], 
    SphereBox[{-0.11651264842470575`, 0.9916017497916967, 
     0.056131742954466615`}, 0.2645000000000002], 
    SphereBox[{0.4968822127171121, -0.31591945177539127`, 0.8082715921491257},
      0.2645000000000002], 
    SphereBox[{0.48327270843218323`, -0.669157622554815, -0.5645135653475561},
      0.2645000000000002], 
    SphereBox[{-0.39453130912526757`, -0.08107762598550412, 
     0.9152985658704254}, 0.2645000000000002], 
    SphereBox[{-0.17671425580000918`, 
     0.5115775293049762, -0.8408688978118201}, 0.2645000000000002], 
    SphereBox[{-0.7171110228621931, 0.5281320376971532, 0.4547838295799358}, 
     0.2645000000000002], 
    SphereBox[{-0.2259723888778954, 0.8655783364759411, -0.4468899449398695}, 
     0.2645000000000002], 
    SphereBox[{-0.15188912665776955`, -0.9876415587519868, \
-0.03865028627430205}, 0.2645000000000002], 
    SphereBox[{0.7034999570239157, 0.7106426627709894, 0.00864964259994519}, 
     0.2645000000000002], 
    SphereBox[{0.8247872966559137, 0.009091366933359348, -0.5653700224828981},
      0.2645000000000002], 
    SphereBox[{
     0.46411858299944325`, -0.8759148111193598, -0.13178461433841757`}, 
     0.2645000000000002], 
    SphereBox[{0.43610581322939934`, 0.18554623491226133`, 
     0.8805590919281955}, 0.2645000000000002], 
    SphereBox[{0.8411701240387125, -0.4215046527364046, -0.3387722688566169}, 
     0.2645000000000002], 
    SphereBox[{-0.41443595133866373`, -0.5055205753318335, \
-0.7567640254096314}, 0.2645000000000002], 
    SphereBox[{-0.924043478682066, 0.15974976160437915`, -0.3473091751919174},
      0.2645000000000002]}, 
   {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
  Boxed->False,
  ImageSize->{361.61783334664307`, 386.9170783902855},
  ViewPoint->{2.0150468903364307`, -2.683183223121188, -0.4360204363404639},
  ViewVertical->{0.2833215088192472, -0.980094218641717, 
   0.3276949841495315}]], "Output",
 CellChangeTimes->{
  3.6397827117358913`*^9, 3.639782749603712*^9, 3.639783014119793*^9, 
   3.6397831386467743`*^9, 3.639783220790792*^9, 3.6397833140335283`*^9, 
   3.6398353058509283`*^9, 3.639835337259981*^9, 3.6398636097998037`*^9, {
   3.639910399975585*^9, 3.639910436113357*^9}, {3.6399105348389587`*^9, 
   3.639910554936866*^9}, {3.6399112317895737`*^9, 3.639911256169386*^9}, {
   3.639911380502845*^9, 3.639911395342531*^9}, {3.6399121303665524`*^9, 
   3.6399121461964607`*^9}, {3.639912763474284*^9, 3.639912780558305*^9}, {
   3.639913269600164*^9, 3.639913358916791*^9}, {3.639914147225485*^9, 
   3.639914225531005*^9}, {3.639914427173174*^9, 3.63991445224574*^9}, 
   3.63991592509191*^9, 3.639916021541853*^9, 3.639916238210299*^9, {
   3.639916338210964*^9, 3.639916354626687*^9}, {3.6399164121296883`*^9, 
   3.639916434287353*^9}, 3.639916473066495*^9, 
   3.6399181738698997`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXecZUWZPl7f2wNDMqyuu4ooI4iukTA5T0/u6enu6Tg5dA6Tp8P09ARA
QQRBUAQMYA5gAnQVMaEYVmWVIEFUzBhQDCuG9bt4fu9T9T5d76l7bs/sfn9/
rn6q6bl977nnVD3Pm+utuvahvu6d7UP9ne1TVuxr39PX3zk4ZfnuffJS1f9x
7v8MyHj1FIffM+f4w/9vO37oP/739//9/X9//9/f9fcv+v9Mztx0ERizZMyR
MU/GAhkLZSxyrpS5avfO8P7P+/+cnLlpLn5mroz5+v5qGUtkLJWxXMZK56oy
V+N/rpB/L/Nf794WLvcZ/EeuP9W5p4brzUzugddb5q+VudUy1sholtEqow23
t9ZfHv9sdP7L3hou/+l4+WflH5G3u9iF26rVy7bIWC9jk4ytMtpldMroltGj
/+2SsU3GBufeEr7nU/hPlf+eZ+cfg9+D21+l39HqPxuuj2v3yhiQsUPGLhl7
ZOyVsU//u1v/hvdtdNeFr7wtfuUzw2rYr1ykj1WvX7dRH6VHvwqXHJQxLGNU
xpiMgzIO+dU+7Nxx+D1zB2Ts19voc+7a8N2fxH8m+e9+buZm6PdyOmt1dTbo
NPXo7eMaI/pdh2VcKOMiGRfLuETGa2Vcqv/Fv18j49UyLtB72+vcNeH7w39O
xA2Er5+tICRoq/VWlnhcLPU/F6sylE/+Q5y754e5s8+wTOdtrYwtutzbzf0f
1Hu6SO/zMhlXyLhSxhtkvFHG1TLepP99g/7tcn3/hX5O3xQe5Y3+P88Mj8I7
weMQ/4tc5EDgUwASZhlcqNP/4t814ZGfFh/vn/OPR1gAhet1eXoVdUO6NBfo
klyqj/UGfZRrZbxFxttkXC/jBg+VtzsID/z7rTKu08d/vS7fqHNXh+e8KjLx
KeVEt4JjhYskBxvb/L1iBTc5J6DbrNBq8+95arzuP5cvJZ8V7++Q0e8Cu/Yr
BF+tcHu93jef8QYZ75TxbhnvlfF+/80f8M+Kf7/L4cnDe6/WuRrlYror4z39
Q7E0WKILCZg1K9RA0a16n5Q2fQ50xTz3+zvoUzhu9XNzcvyeU8u/J312QBgS
BZQ+X9fndTKuknGNrt/b9dneJ+NGGR/S+aTUnItbmeen4aPyzw/r296rH73O
X5LTcEWE4TOKJRTwXKdTsM4FtnW4KKV2uiCpcNuDHqIliCwIpyF9eY8+WYcT
eYCvPT1SiTMyW79yuYvItzMC1IOUIOcVuqJvdgHVnI2prlhF4jEWO6o8rNEy
//OD+tnrPDreEGbk8jgj/5ifkQV6GTC7SWdjqwIBoN2ltzqiCwgZdFgX8gJ/
+yX8gpk54oLoHnNhlnY4d4L/+meUPwVmxYq7dp14Oyvkx5sUI+9wJWqdIn1t
5RV1Np6Ksqre5WXWCj9JnKHXFc7QXIMXfB7UhxjoclGbDenMHHZROr9Gbx8S
+nW47cs9dF+nL+FPkHSv0hkbdO541Q/jGLILtEQfpVUXB2zcq1/LmYKgB5ve
5nSanpY3lYok3nK9br0ufqsCYKO/xia/qnhc2CTr9e+1KlJ1ysJ3nR4l4Fy9
PqYfNtEGXV0r7XHfQAuk4CUuzAvwD4nwRl1xPMu1LuD4Wv03lRree6nO3yju
Evfz9Py8zXNR6zS6IOV6dMn261JdoggL81ayNg2Fj7UwabJZJUGTDQrNmmtY
on4/jX1eheDxO/x0BCnt3GVx+v4pP324bWjUZr1tXJd2QKpALtdpe5NOFYgC
8QGp+A7Ig3d65L3dBf35Zn0r9eQYZAZu56l5A4C6ol4RgVuHKTWsK/caXYVr
XI4zRYbuUpc3QDFjNEBTeUvjcxATN+TlGW3RnR5Drw9zd2nh3FH5cu426Xrs
cEGK08igAgKUprk8PXDXwZgrYSHk6W6CGPPaBuL4PX5eowIGnQ/Ie3UOp+rl
KJSW6u0AKlsUFniig7qEr/OXmVQkmXEn1S5vTdOypXTeqZMzrMjAEx5ShBzB
E5wPyZKTzBDk0F3tQSnoXMI2oozmDRRN5S79skP+/pUyJ+ZtYeuQGQ1VBXnj
nhMeaLnOzc0uKPObXFTm1+i89Ae72d8TJSEnpEGB1KXAGdWlhVS4yumEPj8/
ocQ0VR2B2O3ywnxU1wcqDhLmYhcF+qW65NZdoCQ/XxehP0hG517r/3NK8cxa
uWRn9rBO6ouK2cRJpZeLBVqtCGnQS+Lh1ui/V+t7PuaC5fQBFwzMa/UBLGAX
uchWAhYoG9QFx4NeoXM7Ja8k6b5AwbYqXiAz+vTJBnVe6X5drF9vJX8lF+Yq
fc9l+jlcY2cQn85d4v9zWrmFsUAniEjpdIEuw3oF6/YUhRKs29/oom4EBTdj
jbbixzbv32/R19fqDGCyaYddo09fCcG8r/06M5f6WXDjXhRxY02RBhedRAo4
qxyAxte4vCd1tYteRlAS+I4bcl4UtcNVujIX0rY9sdxNtPMVbFHMB/1ezzR8
ctAu00nhMlbCLdUphmVFI3CwXBVbP5swBaxTP4aGPGYFKrffMcKBa2731xxw
Vh1n7l9d8DdAC1hRpAJkBUMKVnaTCq/nKmnkxaogrhLNaSg66+uer9e4zBX7
gO9Q9EDdvA+Ue79fKGigd+ufr1dw4eMX0YB8at4JSYFNpyHGyOjTl7AMeJ5V
4WVcbI9duxPDFa2BsFInZ7OjSaoL94/ld2ChD4o06aJtdtHzokajJTCoEzaM
y454Z25YX6ZFgI+16Pq9TR90sT7cav0K2i7QfEFHlBhBss5aKjSwdNv0yXa7
qPZALoh9WF5v0GV7qy4blgxqDFL2Jr2tjzhIXnznzV5VflRf+5C+B2v6Tl36
q/wtyjLY4GQl1lWy4lv8c5d88GJSgPg6fbne7Q5r+hpLa8p/WmtWue4iyJ+Z
X08q01oX/UaQpFNnDBO+R9fPWiYwRc73s0HPcU548bC+aVg/uE2nhv4PwAal
Rn25W98PKwoyzsonK2Csl2mXc8RFQxpyEsyH7HuzWUobjcCy3Srj4y5IjE/I
+KSM2/S/n9DXb9X3flChcH1Y1jQikS4oBY6NNNNa3qy33qFrAtD3YvZ6/OJ0
6dSvcW6nXd0TokfBSazVq+JqA7qwy+PCUvKl7i4WleTcpwt6UBeT2pyB1ODy
BnrQ373U5S2lwzr/IoWnPvfMbOppL5RxVrmkPayfS3W1Xds6vU/6xXZtL9Lv
Z6QJEgKiE1L1A7qusEA/puuHtfy0jM/I+Cwm+HMOOuvzDr+Flz+tb/u4LvP7
FS6XT+w+LtK7ZbQ/jcTTEdqhTxAi8bjmPk9iRuMH/Gd22GWeHL6J7gLF1wZH
fMhdrYhrzPdBe9I/ZzTWri/IynBGaqlZK41+Ov3zN+p7LtfPvUqxInc+9bSX
ZFOf91IZL5Px8mzq818h45Uyzs6mnn52sQ1Hix3ia7OLmjRdY4pirPG7dGE+
qIuE9QVHb9dFxIJ+QcadMr7kZ/nLPobxFYff8FrmvijjDn0/FvxWxQzEdJGK
pYJbqfPP5EeRu0ahyIBamvyAXIO1POgR4bbb5T4+PzV0LrfqSv9Tns0M7TGU
wFg0FRq+nQyeKO5+Qwi5l8AfCBb4aTb2jpWHIXKJCx7M1Oe9wp1lFvccGefK
OC9OnvW6aRnQIepygQpDjq5mJPJ1LgZIsSBwH29xQfh+yizwF3Uxvyrj32R8
XcY3PCHucnJv8nvmvqZ//5Iu9u16LQj+K13e+KZ2pElo3cftrrL7yHjgJa44
y3ShPuOQcwN2oY/LT029/0qVMs/Omy58H1ca3heDRvv0lhhve61ZZXCW8ea8
xXmcTzqcEGj0Hv3TDfr2N+pq+IV+/jnuheOLO/X0qX6UReI4eZXiva9y9N0D
7nBHMHRv1AUG+z6hCwRR/AVdtK/qwt4l45sy7pZxD9b4Xu/+3yP//JaMf3dh
vb+qH8VlbtYnmijOS8Vn47xHXAwL4JYhGF/vrAtbAh9AVJuAoyw84PrtKr8g
T2VqwCIJwxVu0RUmSQb1xmxoixrP5pSwjFjOvGHqzdISYI9Ixc0uGqiQnh/Q
dbhB1wVPIuDWtZblP32aEwU+ZXq5d1AkuG2o5hKdHLvcH9CvpsCGtgWX7zRL
/e+6pvfK+LaM+2U8IONBGQ/5R3nQueeF177tAgbwGciAL+p1bzRrznSVddUw
rSSOdajprlFEXudsahLffUNZWvJqfc5L/PVcX7L6NujS5optHRsQtis/5KIE
Zw7pjfq1tHXojnxQpxbiLW/Dgi63OZRW0I79uIuRuffrda4L15cFlzEdzJ8y
Q5Z+3KEv0oGMbzByjKm8WFF0tU6RFeNgOXQtRDjE8Zd02e5KlhxL/R0ZD8v4
rozvyfi+n/7vOcSCvqt/BwTuc0Ey/JtC6WO6dHbZaf9QK9ps9GW6fIyf0NWL
Wdpx7/y9Lnrnb9WvARkHneu1q35GvkxivSu3GRe5fAaFs8gVByCZH8OdAYRv
16+3ls+tutKYVVo/n3VBhn4eE3aHt3A/py/jz5/SjwAoN+klr/WTgTWfKXc/
dcqsSHfak1SNaaSb0p022pt1gt5v1vyT+tUQzVDZUMug7N263g/oen7Xr3Pm
fiDjh7j7H3mz7ccOv+Gl8CfA4SH9KC7zFX3497qYhoUCYlIepiStDKpHSyNO
LN3BD+qtf8RT56N+7T/iYiD7ffqIeNTLk7V/QdTocJutxct1p8e6Tm9zu4vp
C647vdW3usjym1y4DepKGkNYXLAJwu9LfoYB2a8498rw7zt15j+rn/m4i9FL
+Y6pL5glY7aMOXljiOkwm9lmnAXGD7NrAM8Neo+47i16f5/W+8KKQ7CDpffo
sj2UrDaW9ycyfirjZ5j1R71+/5m+9CN9K0ACwt+ll/6wmUasNoOk0OF0HDiV
VJWk0E36eTqIUWiWgNgSfoOSZ2T9g/rZt/gl6gmLPub/MyksMOgyx4+QF58S
Y1XAgjWKwSrrsFfK+sbsZZBI79MbuVlvmB7t58z6gw7BID7O28Ivj7bwv+ly
fEGhg0vAVHh7+DpAYOoZc/PEZ6iNeh6CFKxicAYSEGyywv4jOpfU71/S7wcE
IOTv17X8nll+rPOjMn6Oqf8lMPArr+d/6V8Lf4MkeEThc7c+Kp5hm8uX4GD9
L3bRVKLjiCkETGl2UllCQJFOn3UhMlDCrYP6FJwMC3xEL3KdIwqGbbRt4lRZ
LBvD8i8KgdgSRQfeQ0OA4WZeoyihhGe1VKTIwHO+X9fW+k54FCre1LSGAr7H
u6j3eszcra/fpe/9on7+47rGAsupZ8yTMT+ffmPyg2lliDemla1NCMy9T++R
hgFgDHFFo+AegxXw/4eKAciFX7iAjcdk/BoUfNzD5Tf6EmHzY/3o/fq4UBS0
BVKoUClYc5UxJMs2TmNgXIgvlLzIPaFc5N6mFwBkrnDdATH7bFK2UhLEVrus
UGSschrKf3EQHqv09RWaTGWd5DSXt9YZSqNzhlWBscEQizXZiJ4ixwyPDNZ9
zUWzDat0n7OWOu7xITXVX5431b+pH75T5/LW8IWA0dQzF0QtCXsDFhIkJ2xi
uheUjpe5vI15o04zxQ6mH7CF6KOdYWEEbfOogRBw81sZv8Nt/94nQP/g8FsY
v9W3/Eo/Bon1kD4/5sWmHi9ysf6A4eb36C1aBX67IoTObhTcuO1JXnhPDv+k
4GYQ46P+skTTnphPeEpxXaCFUnkuISQTSr56pSpgBH9Y4/9Q4+eCkWYaBkyy
UyNAcVUyBclyaxhYr+8bLm8c0ByM5n+Vt/9fGRSGtf6/rUsARAGan9Jphifz
woUxckIlRl0LZWFzfTAJrR2D2/2YXi9VYPfp0n9PkQTF9XNF0q8d5FCADODz
HzL+iFl8Aj/+6CXUHzzKApzwmZ/ote5VKKRBMUzldQZGtAPpRDMgdqfLU5OO
9D3eHrzXY4kMpFD/gj7jTeNY2h2x9A/FSUabxoBCgle7wVVKY2ge48ygtDr0
fYCXNTKseMJ7QCfYmanSsHbmzS5vZ1pv8m5dpwdcua35QxdcixKUA0CV+hYA
1/0GWJjcW8IiTDurWsbivHGcajpoZBhvsDzAAchTqJKP6g1jwb6oC0AthxsF
3mHdQGVBxvxKAfVbBRTA9ISMP8n4MzjxF28k/1lf/g/F1a/144/oHAAXtuby
ygI84dao4SiSvqzzaekZxXxVlPAnhNfuddETx+f/Vdes1XUGaO3MZclSaDE+
Z2HFAHuXi5sZmEEOKZSQQTkjCKA9+uc+l09ipnokNV9TPfJRvfvbXZ791md9
0BV5MCXYJiXvvpwczVbrxjyiC03nFdf+FBA57UWLxQSc9uIlMevLfGiXy9eQ
UPfBpIWdAjbQhPq8ix7Xt1xe7/3IRdOJwII0+qOC6i8y/urZ8Z9+Tv/m8Bte
C397Qt//uF7jh4oGgJlVg/RYbISX6KIJSiOCXqFlqxX83/fzVfLC/6Qo/B/U
x8JHwSHw6X06RR2uI4BtRwTbM/O1TCyJrtEZZpkCd8ww2A/9wMK7skzOmUFG
H9S/QVZZh8nGwWlqWVkG/lkDmLqmyAC2/vIjLvrKWMmf+5WA0f4rb2kVOUuY
0Xt1tuX6QNi0Fy/Npv3L0mz6vyyLcSgGcffoM4Edl+tqUu5+WFcSzKCF9e96
/Qf0HsEG6sTHFC0pyoCqv2Eq/6+P8PyXw28BcADbn/XtAOgv9VEAtDtcOWkp
XakS6UdQwkJ8MbhYrg40yvTU8B0/cfloE2MO9+tjYmlu0WXf76eqPaBte0W0
MeJTVDnHfGy6eQmPGNJKuL3X4sclnpA2p8S0QuoX0kh+lZknCgqIeqpNq4VS
I5l+OX0tmjdBIx3nfa1T8r4WEYcpe1CnXC4/HSh7yTIZy0vZ9JeugMJKywAO
6uMymMTwodWXmPmvuXKRZnUlbgcKEIrwT4qk/1RU/RdsoCfHwUagPaEfecxF
kIGHVk8WOaqUYlThuK379Mkfdnmt8FOdxEe9cf1zP3PUCgAcNcJ9+ojg1iU6
Jed7dGwzIBvfdEiQ0cQlje32q0oJ/3R3WchtAWdvdO6FsSwTKwIRwPQeK8LS
ytHXFEwX+EhRkSola0JbnP3CrOTjujS/x6z9wblXBCMIL0Es/NrlnTHMoFBc
sQaoZTMwXrZSRk024+U1wfIf0Ns+7KK+wm1DjNCHhFUNEfIlvWVQI5VuqQ4F
kijZIMqAsie95f13j7on9XWg7k8uPAtRd5/LO+GkK++HJIDEhd6kSLN2iNUM
IYxGymL+HvOe4a9c1BBEHp3Yz+t3szYUXtEB57YG6A2UFeRPlJfGHDMUB3ik
FQhXuZhvgYH8Vv/MVT7HdmZ4/LfoslirsLjYLx99pITDEoKkVKZWSaV29i9c
VFS/c9Zxwz3Rczsj/IGBgF8qDnAhkRozXrq8DG8zXrEqm/mK2mzmK1eXWwF0
DnjTUCu037DGDCXGHXLcvFACHxGZXuSinPvbOORKQJz8yMJvELj4A3D5Z8Ud
cPBDXXfrqNi8De01S116v8RcSl0bS3kcc/dbr1kxr6SrDcndq+vDzSvc5Hmp
h86WgLz+HPKKKiIYmC7aCjJRhi9WRBwHiYUFhjv0ThfNOG5zDJWSIV9Mswix
Vhi51oSDrLvDRZLe7fLxSxrgnCgiLu/ZTfKe3bPDP+nZUeY9GtZuHGsvX5nN
FKzNHMdabTbr7NUy6rJZ59TlQ68Q6yBW8BnCpJ5UHn8s2nG3FG9fhh/LPStg
0sCI/rs3PjMv4v7uItT+pE/2C31yKMrX6axZawSwJ1ehUFOuFsEsH67zyqGE
SSr5X58SXnxc36jz5S+GZeFGn3zVA9HWF9GW7Ldf5Irr1GzZ8LEmF0N1hs8t
lnyacUp4ndkiwC71VWkg4bpAbhpQoKCzHE0jVIScDSZAJvw1uHwliBHsSZjI
55OFmGkwN+uVGAFzswVzswVzs8+tl9GQzT4PY02Ud2+pUEBeaZsnTA4Gvu22
dLvVc5V/T5XH4AkBg08qDmngPa4wQLxi9tx1Ikdmz1kXDRVKO8aRishr1UVK
Xvo2T+Au/uQ3Zj6hL/1e30YfBpeCiQcz8hYXM8rMKwoQNxsgooQ93Vtka0Vs
2U2lmljuvj562tPmPaeEFwFI6x7aLRKvGV/UGDihEoPx9OVkGql1aaDQzrNg
/IujNvOuYQnrCA1S5Bv+Llxj1itWyqjJZgsQZ59dK0OAeM7qbM45daVszrn1
sihzBIdzpq7BkEvOmdboTs3mTG8Kc1tUj5PuwSYOgUGktriXFgYJzG2oCLhf
m1zcJ4T1WRX0MAKvT+oT/EWfFqL8R352cEvzNggo58xbn82WUWiGThR8pila
RO2/AJR/9aDEV//JTB4w/DNdGGbGPqVfy6T3+zyCCMreFJRpAVOji4KLRbw2
wcZQtt0Ab8sa/tXlC3nzudgzYi7WpiBo1TOd9Vr9IiCf0bFUOcNng4pJpSRj
+EVWPZYvWPbBlXxm+CeF5RNh9me/MmBxztkYtYJDweK5ddlcjPPqZTRkc6di
rMnmTmvM5k7HaHJluwcqbVrDPNe5uGmtuKnMJB91Pyn8E39CONUqaHq+0Avf
BQYXbJqUzZm/EVH/otlikJoK+SduogiPxhCfGWfNxhL/5KJOeVRXgDlB+Dif
11UGFCBSILeucW5TAQrtlkvMjt3bwiSCLUuDak5zckUVxvmiGpvinRJE250u
v0kKc5wmAPBlsAGYUaKWoaFDQqcaxuppzOmfXTTyvVR8Uv3Kk8v8yjkCP0Bv
7jm1MlYL7GScV5fNO69ePjhvaoP8mLZG0DZPcDdPhOC8GcReBaVsS4GIO6Z8
tijmYHqHliK22VCV3+NwYrBh8BJCBnDgVukzURD+GBM8d+EWEdULN8t9zFmw
GXj0YzxOZaM/kIBF0R9OWD7MOMmrkadHuv7FxfDizxV/TLyyZJzZ1k8rON6T
h99p+QINpt25zZE1XVCUTAcDDVCWtp7L7l5gWrS8jiemg0/Ppp56howzw3oU
AY8e8fUuhmyB7DSKRp1MMtOyrhTQeNIFh7IqupaTx6d07tk1ArdV2TyB3TyB
3Lzz6uQ986fWy3vmT2uQsSabPx2jMZs/A6Mpmz+zOW5qSHfqMSNkuwukGSHu
Q+N+QigA8B1eGiKgY7jNgx6B3HGBiMQ+/RjAqxJo3qKtMsFz5eez5OeWbA7H
QozN/6+RoEDZMGcnRFvABiB/rhf125Lu9lPLPC0lIxYQZsFVzm0MUAzlR88r
r/Zg+aG12Wx2nlKQ2XmmU22d0MQl+LjNe70whAATVQpMelzSgaFatri82kWf
mc4LozScXuISKtkmq2xk9y+OEQ8/qZO8lXVizvqfJ4icJ4icf25tNv+81TLq
sgVTIQQXTGtwx2cLBI0LBIl+zGzKFmLMap6UxrjSfd3wPeADcncXuwuwkc6w
gu+Qi010MO0IG6DEFnt5Twz/fJX++YiLTXUE1/MXb8vmLd4GcV29TVBZvU2E
Y/XWEpAJ7UzbhUKQQYVfuWKtEaORYYIy78D/3YeQrJtEafgQ/vyAhyDTut/S
9QEeYN+/N4HgqUEapsVGcZNp3BZg401vd1E3sjgEdkdqXsbGHSVt2lHtUC63
MMJu6qkvDFIY37upAHoUiQxNE3pFzCb0YA0yqcAZTeK7Ifhxip/Z+QK5+R5y
q7IFArsFArsFUwV20+qzhSIEF06XMWONjMZStmhmk/wg4F5Qvk+Z+yugb7n7
FpNpuzZxo6ZtZWE3aSIYgaDBlfpf/JsbNzEpr9FFAWC3Ahbzl7SLabCkXcC2
2P8I2BMfbG71lgA5+nCp8WfFXoTbJDpAtD2tUw7peZ/W9Zcw9YAkvgO4u0cX
BnLo5jzcnh+knU3kUhNaR8Cmo9PCkXQDji2WyrfeCnCGVFuBm1zpdyCwx8kS
IPCsiPZ+F6O8qQVIRXwsqLO3xd5oVcEf+LsfOrEnZAvOqZERALdQALdwqoxp
dTLqs0XTxdxbNGONoHTRzMasWkRc9SwZs5tltGinjzPKe5fYbXBQuLBo7LYZ
wg7QYY8nppMq9Xh6syvv9XSli7mGw3I7C5Z2CASXdogbNG9ph+AQo13HNqBR
xtYIQat5bdKP/CT8nlEeF/qjfhSTDkMLQjTdZ8BaAywSDLFP5VH41HyxIiAA
nrJlTZqDpTt6kxvf+W/nPY052DZnjH1B9yCEITIBIEx7wACQCD10u/z2ajrD
8Hc+5MqtQYKwktgNnCj5HiDPiLRYokPuduHZK7OFAsSFIvkWnlebLRIQLhLJ
t0iAuGh6fVY9o0HGGkEgRmO2eJYIv8WzYf8tntPCQIxOzHPy7TbYZok16Ok2
V9AN2hMykLnN1ym43ujiJkjMABRA6JyF73qn18SIQ7zTxS2vb9HPAMiX+lmU
u1y4vLMqW7CsU2zaZZ3wnpZ1BogKWEVPL20XVwwQHQ8iTKQ2xmPmJi6E9/xB
Pwt38GdOd0FMzpcPfU/XCjHyOxItfEoUiax4ogEIXyStP3mHWt9P+582kcPl
MY9bQrscXIgRsFb9QLsuEqTFxfrdzHrZuMwXufgFPTwXuLSIPpZE4zlrtK8J
JnVleH2RYLBaMFg9DW5I9fR6WejFgsHFgj8/ZjVmS2Y3yWjOlszBaMmWzG3V
ezi1uHGIBWGa6eQWI2Q67R7Nq11s25bfVYaoRhXiDyW2IENE3zaAARC5xWxM
3rtoRZfIs4UrugSNXdmCMASQ/keAZoc85/ylIi2Xbss7xBaCdOTGVTNDQmkY
dK5TzXNC0PQwMCFymXIHFmH9fzkPw5PzMtGWdMIItDLxei77MyprY8YeKjVS
tuWmfXioAW+PAfXdisD1ulL260FxUD6ErcNdPK+4DYUFn+2sAzCwJ1ez3hmA
36b/bdK/C3sWixBcPKM+WzKzQcaabIkHoAehfPfSOc3iSS2d25ItndeaD0un
ZEhByB7CdjfrRPvcbAebuM8N3tgkv0f4xLhH+EM6O+/Rj+r+4MU13eDUym4x
LVYi0LhwZbegMowFK+TlBSsEkQuWdwpu5i/vACxltBeB0fvFwRvJ9P+6FJPz
j24DoaFx+GIPS+oi6iOISqhvqO2v52F5Ur5/xkaFjE1nBOlUokVehMiiRh/s
FMA+RzYKFjsestdR+O+gvr5b169T/23dlbexvcc/TBwVTtMToag/sgSewzY/
ae3e7MB9tus9b1K8irBeOmuNjMZsqeBy6ZymbJkIxmWCyWXzMFpL7Lk33dwK
gw7cy1YEywMuKud0Qx4Urt2UVWkX8224+0/hx21+3T+pf79F38+2d9f5lRTb
YlVPVVZd0yMYxY+FQOsCQevJ8rMLAJXRKejs9AidB3TaIKs6d1VUSZVmPzXW
8rt0ar2Vrg23vDX5zTwkT8wr6y2uKGKid/GsfEiCxabH0j2ScbFYxGr7NB3x
pD/sYmuS/YrPnfqZoLhjn6hKs0FJnfY3oqTudPnGbdv9NXd4xb1dXwN/gM91
uLdlc5rciwSDzdlyweFyweHy+a0y2iq3DLINIDe6uLHaAtHuDGSKFArXtg06
1s3VJ4aYrd1c/Qn9KDeMvgmPuaS2F6iUH9WreuXf1at6skUYNT1ypYXy80QA
dBye81N4hlB2DNWThZW6hhXlLMFOkH2tCyYcN/o05GGpcpX7ZdpdVN6h+KWw
jzKL7dkxzPZPYfvNQZdvLsX+KaEF5ySoLXw726dc5GLnzTH9+Pl5PlSSz4wZ
01pg40D2obNx4yibsagjzr00L6cpozvC060QHK6Yj9GarVjQJmNtebkWkwJs
a8YN1AP6naMJFm17I270TTOj5bmpkk9OPSVkK77i8h2OKu37BtQvA5KWroa9
tGR1n6CzL1vsBwBa2yvqV2AqAO3NFgpIBZ4yuglQRPZXdIbowdPz3dBTcZAm
LNtcXi214xE68aPLYxtY2+wB5NZbSE6O2AJwwepdCoqLSYopR+/rbfu9DLp8
y1JbF4sYWb7nS2x+ldbGXqqreIHGUwrOA2F5bho7tkmMPXpLVlDj1qKgvsC5
lwXQsJ/eQRf7SA2EGV65oFVGW7Zy4dpih97GZzEt7JnHes0UlDZdzy3F3A/L
rBU79tzpYkumr/l7/ob2Yzpp4j3ogKWYA8vr+quyZXX9MpNL6/oFn/2CTow+
kZ0CVkGlgFTwmS3CADJXKTJrunX6j1E/HVsWE4+w22vxXfpan5+ydRabx8eA
2Xq9yh6/OOPdQ1NYpr1JilrSFNXMMpzBtjShbrbk/ajjg+zAS3Cwr3UMsU0q
6jRbJKyLAsxEI+6I0b4grG2/ZNzCpR6dr9W/XazvPaKflwmpWdgmY21Ws2ht
ef8oZlhsJTE3uRdtq013aacpfO7QtnsiAcCYxMI936NZrBNjJ6l0xzsQeqv/
InnvioaBqmx5/YBYJvghGBVttUSQuqSuDwDNqv1QeNZ6eB5VW9kMp7XiJspw
7vdAwd0f8Ogc1dexZNvd2gJ01umVex1jg7kqR7u91/alaXf5BqmM+rKulr1t
r3HRnoevCBUWamtLMO5LvsB2Umw1Bh10Qzk057nKG2bsfoYRl897sBkycx5X
OsptkPBqb1RQbrNh16UKKUAUHYlXVa9jLJxeDaNpaRcU7iFgp560s1na8yjd
QJ/urEQANt/uqspvrDwpxPrwEuIs6fb52/UrrpK7X7lme5Xgc7vIyOUN22UM
AKPZUj8EoBgCV5GjdSJMBaM5Q/JYE51WNNhE5xHH00KqfN/448qTm4POtVlc
HhcEEFZ5o2OQMh8BtndlQcnoL1VWUcwjbeUUAm7ByQwN0vBdH/Zyk719MD6o
73m/Su/n5OUmpTcsaljPlJmMAw67GIxmZoQN5GyXbojoKMFVhL88L8Kv0Ue5
0sXucrh+UUeu5S4ShlurcD/MutoGIfgOanOLULstn7szueOVTVtCEzbu0Kzy
DblOCr7tw/onINY25fqCXh7h5prGHTLhKxt3CF53ZCvWbPdjOUbDdpGqDQOC
i6WC3SWK2cUYdX2ubAPA/x9ZUkoM39v1Cg+F4uRoq638mRIMiA06yxDJRdFi
ygwClt0QsSIsiSxqT5QG6ADOm3WVQr1uFdRcCb8hYHmLKw4YUpqnaOUuibT9
nU2bEKWpRIe2fY+X4+/1TpKV5njfdfrZy/X58B3c5b/I5fs8Q5bCHE8bZ7BI
j5VSto1NitJ0eyf3QyGBkts/zGZiJ8fk3iP6nodc+WZiERC1TTtkolc17RRA
1jTtBHIDbmWsaNwu1xPUIjgh2F22RoQsBoDb0J+v2eY6pDnV1O6jSrNb9GxP
3qtdzKkyn8pc6ptc7MkL1I65FovYFwQfDDPe6yY+SYHNtOimHnDlR6ownMw6
thtdeciEDZVud+y4jBX4rN8m8hl9rVKYm+whare6ymfJ0QZJ8yxkEdDzATcu
8id5kf/S2JydORe8nwjG9V7t8vIVBgnjIVtcbILFbjS0ANhXwZYa2E4Cdm83
N0JCYFrEcruL7ybwU9D9Zx65P3Uh6203JrMZ2hfDd61u3pnVNu+UD9Y27xKT
pnlnCegV80Dg/HwB7o5seeN2P5b5EYB7zPlWLoEN6UKSXu7ym/re4thWOJ5S
dHz4Z7rRa9Q1J9J1uc5zj8v3TKO453ESbPplwynAKU0Alvly54PtFg1JAnwC
h591sWO0D6nc6YsiGELB1BZFGy1tLEzT1suXuHiWAM3kiQQ9BB2Fvcr5Ev7l
XhL+ztattgsh5t4KWfoTNFhttydWQltTgPvnuV+XbQi4vZkNGoq2NyetCCYh
hw2b4Bf62s9c7N8HYXuPXleWoK5lV1W2ukWQWtuyy52ZrWrZBcxmNTpWYjSJ
wJWx3I/t//O0LNfhKhcPAqAYC65KmFPMxY1OT4Y6PvybnT8hIkIarNlu05kS
7A9bjw73wdYmsU8S245ZsF7tYoNP2ycqrUknSG2YBcLka7jZr/uUVRFQoX1s
IMwC9WitMScKi0PG3+aK5PynPVhv17+Da9xPcqOLm51sjDCVrbbTF2UrKwYr
7cUv2hlNsEJmWqDqzugSioCqkCoHYrlH9RcuohY57vv1wrIG9a27q7K61t2l
bHXrbsF6betuGbsCcgHkmpadYpV54DYLcGUUHodjwWrTt7AML9JntnqNa2F3
cX3IxR7Pt/hnuRU/bvGoZcdKLNy7dPJe55osak8P6LQOb6VdFNxEStlBxE5U
ys6gIGuIGYKBS/FNf7vf0lrn5+fD59S7nCvigjvduOPy1WaeaEHbnW62R+4n
XD6NE0LoJdwhGgsAPpT13IDyOX37J11M57xHZ5J9N2wbV1YesuT/Cpff7Zo2
qEN4ym6s5nYkmAHczM+emLHPYSic/K2Xs7/zqP2tizusuSkdcDcb+xvaBLD1
bYAuflvdtluEbW3bbg/fVYCvjBqMFsGtjBxerdVq8WrTaXbHIRVcpR2H5bIj
JHcBW5vX/ZBe4zrCtp/FnwwV0SKodfHYE9uWwrYntfXGRAY7Xn3GxWihLXfH
9MXYTBUkAWR9akDbXA/zjmBOUUPnK115zjHdg8Rbyu9BCgLuq5irf/NtyxhM
/6r+6Uv6VgL34zqHoD9TYvYABm7Q426lIhlrG+rYVgppyzKCNe2DFxp42JYK
VfgF8TjujcVbdWOxx/69/jGqsoa1e6qyevyoW7tHdNvqtbsDZmWsaouYXdm6
M5/2hcddhFPrw9hUG32Yyg1hg0C4w6nAOCEsy+dczK1h2dgX9g2u0eL19Hxo
jdskWX9SpOnYRoWitWhrBkRH2oTz2y62yv+OXx0tq55SXjxAUZ+KMG4VYbe4
tK1skbi/3U3UyBKIqfIy/+X5GDszQkXZIN5akcNld7HgtmzbNm6Ht61S7Ebu
dEt8UY+9sJkb5cQllIVAyP7J5Td1/1Y/CjPhEZ35O+Up16wTvDbgR/26PaWs
bt0eWf/Va/dktUDvWiB3d1Yj6M3FlDH3qSdjNyymOTjryVDdEqUUFiEjjIn/
qq+mYlbYtqX9iF9TwnXcKuBWDmYn6HBxYxvDNWm7t7SZIODKkLdt98ZGgtbx
xbqEFv8/8N4X1ogeKS0TK+otJqzzZ+Ga7m6y4p5TRRrRMiGV7vX3WIWVRbxA
NzmNN0XG27/qYhdbrITtYUlNZNtbXWGmilrINj5Ot3nbLivccMGNjmnnvrDV
u+S3ep+cb+DA/fK/14/iMpjd+/3tyyM2rt9bytas3yvAxY/69XtFxwpys9U6
PG5lFJ7FBWcm3eJtPe9jyc792/giTMIqAK53uXzjW6wXoP6hBK5Tghq2mRrb
DI3dM6zIgH1im8ZZqBZFFTFRD7nybo8mRgPXC7dhkUpBD3Vk7Wjrg1s7+mj7
8JgwsiF5K/Af8mT/Dm7oIX+8LAPx97j8ASm3u/zZFGmAgI0d2Gnk/S4fHEh3
hVO0cgcz97AUd5gMG8OfEjeGV9ocjo/SLrjf37o8X9OGfaWsccM+kbT40bBh
n/OIzerCkMsLYlHBzSxyOvVpFtluBLfNmenCpPm6vJCY5DcwTY7547t0cu7Q
CXuHc2ts2mtK9HUg2qyIhVizW5hYr8+2eHa33NH60FG0QqzmAzUl34LuzDC3
01zeOEkLQyjCLIU4cdaYtmFO+n2UrJywNED/sBuX+lWxzee/lJ/uQuzeoStj
mzJxiz9tWHY4st3caBKku+7T3g/pBujyjeQAa9hMfmL5ZnLtRzKO19vxXM0b
BaVNGwFa/LZmI/DasHEfkJvVbwBegdpTYxPhSrllW/FArFr9j9mx23UpJu5z
tjF7KUqIybGRKiXEVxzzHwRt6Nz7wuI+9YxxMWLAReF2z6LdT5XsNNsZ8OiB
Gx+3AYjtrlNmlxqTW2G4jXtf/jvmCn0dCto0To/bC7oA9/QTH/ey28hslolY
/rI+Ol1FNu3ElNELoGlr22SB77YbW6X+RHYfsN0VZ/ajH+fLm08q7oVJEMv9
tm4ezFo2D5aylk2DAuZN8lsTfmvEb2s2yg/BsjsNSC42ySi/MOcMhKTNWul9
2/7dqe592FkzsYQHhhv2fX3pYUUN0yFf8kuqGG6PPb2WF28xYeFwum2ecQTu
XKLYY9eoj7niDvGVQjkEcD6UE2adVgyz+VYj2EapNqZBScdMPmfURkSt0V3J
ktG+1WHHWbjNn3tAP+rPmfiZi4mn7+kl8IhQh19w5a21rY92tcu3QOGGL/I+
bS1jhXHaVKF4+/XfPZDT9pq/06nG9QRMbVuGstYtQyVB9FCVQFp+a8ZvTQB3
QPOmQQEyRHO9jPEjzYoaeNgphyKGCKYss1qPgoPy7HsKhyg0gsw4KS8z7BR/
XS+NqV3v6gOgt0ZA10xc7cgwqg2QFfUKsV40O09RZdou9ezNkIKaXnRRyIcp
iNQmZvKf6pvi2Zo6sC3YIdDOsI2ZWs++KCf1S6dnCb0k7mJjlP/nLsZLubPy
bv0O9jyjSIMNRPLBw7T9VdjYJ22JTRPD9n1MuxTHXhaFPVZOiLi2TRpA3694
XJeytq1DYpYoxDlEZuNH85YhIYlgXaAeRqMfqHgD5J8d5TUjPpR0No/NRSgK
XFvJYiH+Yz+5XoqEvscnBfHCrazfd7FTNCZuWCe629UFnG+JOF9V+ZQclpgT
6yxjIL7itoWwbnystGcnH8l2mE7NQ+t+l0eL8g2/2SySanGvO/ZDB6gOKUnY
DdPinK5WUW/uF4XbtAktwhz0vU8vDQ9woyuHuJ0q9stg2iK1oo/WiinfhaS4
XYsF+OP6WIKMdYLrUrZ267DgZ+22YfwmWB92QPywiHL8aPF/bdkyDKR7tIuJ
AuALzFG8l2a9qY/SWbcmtFXjlWb90XFE4HEe81GXov2xQBL0HEshgcbtzq0O
CN8cEV5b+chpdt5q0tfopUGK0ngc02c8lhahVjpVCjDZxpYxwBSWiXa/7cts
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
JehkC5ny5oLpY5styw4rYba5nIQpeQlzSl7C4O9gU1ElUQjnj7fw4Q5Jlk2Q
KrDpfsji+ECTZwao1rvyPU90TjBp6Q4eW6Ud9/6puJ1WfpA86WGpUeuiuG11
8RDxKC6EH68UVXJ21iIcaT33vKztvMCRtdNnZutmzM7WgyOz5wk/hCNzFwg/
Fgo/qrNNCxZnm5UjWxaLKlmyQvixMtu2rEb4UZu1iyppXykcqanPOoQjHavW
ZJ21jVnn6qa45TaGwycxfZfa1LYrUK1ZV9z+VheLPYB5RJJsahuSHPHEMcza
Qe+ijOlL+12s+8D5t8KPUrYT5NjZP+jOkp9D2c6BIc8Pz5EiyrJvS9E+H1gM
lh9YZmhUmldpj3jg29YklbfdBvju8oXYiHmytvbr+h68Hxrmdr3mu1y+1zI1
8Gqdw1ZXfFaqFS+Yy1A4g+/e54FP+YLPpDn8XK3w8XlyMIH/nTw5nhEkTUMA
43juhJ57mrhOt3hG/VGiuV7JvGLAeWUyCbasFA/V6Sej5KXECzy2Ws4+O2s9
R+kxdVq2dtqMbB3oMVPoMWtOtkHpsXHeAqGGqI8F1UINoceiJdkWrz6WZ1uF
HtuUHu1Kjw6hRwfosapBqCH0WN2YddU1yWjOuupbsu6G1qx7TZumtp9V3kvI
pra5nuQESz2gIoYU8AA/5DZET0hx49qv9uv6Kpc/3nEorMbOvr3jtCiBEaIz
dgofdm4fLi8/Ic64yYGuB7eCjrniNvTc5ACLKi1ShShkx2RbBhO60GKd7gHg
xI4/NchK29H7K/ph+Csg2xUur2shG1tcPC0XN0thQgJgIiBMRvUBkHoRdsOV
O6gvjerbMOest9MCokmWC7SruLXk59xcG2rhnx6kyaYw8/5LMVss4EgjsOUF
BaX0aNpUP7BlSSUhAOD0OXtgMu0MXHsvioJazz1XdMTUbK0QYd10IcKMmaIj
ZgsJhAhz5mUb587PNnkdsUhIIERYtFhIIERYvExIsFxIIERYtlJIsEpIUCsk
ECLU1GWdq+qFBIEIXUqE7vpmIYEQYU3rcfZkWVveQVcXj2PT1uzCwlScLe1g
hgE4hHwO6WvA6AofnLlcX0PWAF4fSj3O12vINXf175MxmO0awBjKdm1Hk7Jd
24eRVueU20JFcnSdyx8NcMDFw/gATdpQ5EPRsQAsrwC0YUXf5fI9+EMc/jhf
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
\
\>"]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Data Collection", "Chapter",
 CellChangeTimes->{{3.639859884873258*^9, 3.639859902253352*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.639860162397904*^9, 3.639860170297999*^9}}],

Cell["\<\
First, we have to set up various information about how what data we will be \
collecting: the number of runs we want to try for each configuration, the \
numbers of particles we will be packing, their initial radii, the amount we \
will be inflating them by at each iteration (or the maximum amount we will be \
inflating by for adaptive inflation), and the average amount we will be \
moving them by (again, the maximum if adaptive inflation is being used).\
\>", "Text",
 CellChangeTimes->{{3.639860191091617*^9, 3.639860225775077*^9}, {
  3.639860483573707*^9, 3.6398605517212143`*^9}, {3.6398608134038773`*^9, 
  3.639860822442266*^9}, {3.6398613067732773`*^9, 3.6398613158705053`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"runsPerConfig", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"particleCounts", "=", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20", ",", "50"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ri", "=", ".01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]r0", "=", ".0005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x0", "=", ".09"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6398602319683943`*^9, 3.6398602670535917`*^9}, {
   3.6398603690695543`*^9, 3.639860476136125*^9}, {3.639860555609291*^9, 
   3.6398605588404007`*^9}, {3.639860799797985*^9, 3.6398608099635687`*^9}, {
   3.639861319546116*^9, 3.639861324209714*^9}, {3.639914866165678*^9, 
   3.63991486670931*^9}, 3.639916845231802*^9, {3.6399178564383707`*^9, 
   3.639917856755299*^9}, {3.639918487122725*^9, 3.639918487273973*^9}, {
   3.639918580814557*^9, 3.639918581653954*^9}, {3.6399189091166353`*^9, 
   3.639918909504896*^9}, {3.639919079356154*^9, 3.6399190811067142`*^9}, {
   3.639919477094693*^9, 3.639919480042556*^9}, {3.639921574206794*^9, 
   3.6399215743453617`*^9}, {3.639922464177655*^9, 3.639922480375296*^9}, {
   3.639922821919835*^9, 3.6399228222296247`*^9}}],

Cell["\<\
We also must set up our termination conditions, the number of consecutive \
iterations with a zero acceptance ratio that must occur before the algorithm \
terminates, or for adaptive inflation schemes potentially the minimum \
inflation that the algorithm will perform before it considers itself \
terminated:\
\>", "Text",
 CellChangeTimes->{{3.639860563934363*^9, 3.639860584181712*^9}, {
  3.6398606197368317`*^9, 3.6398607175549717`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxAttemptCounts", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]rmin", "=", ".00005"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6398602319683943`*^9, 3.6398602670535917`*^9}, {
  3.6398603690695543`*^9, 3.639860476136125*^9}, {3.639860555609291*^9, 
  3.6398606136794662`*^9}, {3.639860652674322*^9, 3.63986065355083*^9}, {
  3.639860733023285*^9, 3.639860734638988*^9}, {3.639915292395986*^9, 
  3.639915299128295*^9}, {3.639917859989756*^9, 3.639917860284905*^9}, {
  3.6399224750569763`*^9, 3.639922475273541*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Runs", "Section",
 CellChangeTimes->{{3.639860767044492*^9, 3.639860771074469*^9}}],

Cell[TextData[{
 "Run all the configurations and collect data for them.  The data is broken \
down as follows:\n- All data is stored within ",
 StyleBox["packOutputData\n", "Input",
  FontFamily->"Nimbus Mono L"],
 StyleBox["- Each element in ",
  FontFamily->"Nimbus Sans L"],
 StyleBox["packOutputData", "Input",
  FontFamily->"Nimbus Mono L"],
 StyleBox[" is a list corresponding to a specific run configuration\n- The \
first element in this list the name of the configuration, as a string; the \
second is a list containing lists of the output from each run.\n- The list \
corresponding to each run is the time that the run took, followed by the \
output from the packing output from that function.",
  FontFamily->"Nimbus Sans L"]
}], "Text",
 CellChangeTimes->{{3.639862264068774*^9, 3.639862307613944*^9}, {
  3.639862343431479*^9, 3.6398624109862347`*^9}, {3.639862455255577*^9, 
  3.639862544560523*^9}, {3.6398626351909447`*^9, 3.6398626450122137`*^9}, {
  3.6398626779204073`*^9, 3.639862692500224*^9}, {3.639863025439373*^9, 
  3.639863045178653*^9}, {3.639863493560472*^9, 3.6398634964808397`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "packOutputData", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"packOutputData", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Clear", "[", "configData", "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"configData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x0", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"randUnitVec", ",", 
            RowBox[{"{", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"r0", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"ri", ",", 
            RowBox[{"{", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"configData", ",", 
           RowBox[{"Timing", "[", 
            RowBox[{"pack", "[", 
             RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", "1"}], "]"}], 
            "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
        RowBox[{"{", 
         RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"packOutputData", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<StandardPack-\>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "]"}], ",", "\"\<particle\>\""}], 
           "]"}], ",", "configData"}], "}"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"particleCountIdx", ",", 
       RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Clear", "[", "configData", "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"configData", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"x0", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{"randUnitVec", ",", 
               RowBox[{"{", 
                RowBox[{
                "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
                 "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"r0", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{"ri", ",", 
               RowBox[{"{", 
                RowBox[{
                "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
                 "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"configData", ",", 
              RowBox[{"Timing", "[", 
               RowBox[{"pack", "[", 
                RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", 
                 RowBox[{
                 "maxAttemptCounts", "\[LeftDoubleBracket]", 
                  "attemptCountIdx", "\[RightDoubleBracket]"}]}], "]"}], 
               "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"packOutputData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"\"\<ConvergenceCriterionPack-\>\"", ",", 
               RowBox[{"ToString", "[", 
                RowBox[{
                "maxAttemptCounts", "\[LeftDoubleBracket]", "attemptCountIdx",
                  "\[RightDoubleBracket]"}], "]"}], ",", "\"\<attempt-\>\"", 
               ",", 
               RowBox[{"ToString", "[", 
                RowBox[{
                "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
                 "\[RightDoubleBracket]"}], "]"}], ",", "\"\<particle\>\""}], 
              "]"}], ",", "configData"}], "}"}]}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"attemptCountIdx", ",", 
         RowBox[{"Length", "[", "maxAttemptCounts", "]"}]}], "}"}]}], "]"}], 
     ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"particleCountIdx", ",", 
      RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHfPw7dVqudeOTivEn4Po7S6334Lokh6+XyA67Eg8
Qw2Qdv0kwgqia26ocoFoK5tWXhDdem+2LYiue6TiDKID4vuLQbTRrEM1YPlp
rs0gOmPSbTDdc9xyNYhetlt/DYj+ZWJ8B0Q/4L1yF0RP79N5BKLnHBJ7AqIj
XqyPnwakzez/J4LoP1d5JoHoDbzcU0D0Jf72GSCa5cOUuSC67nfdIhAt09qy
BkSf9jz4H0QXOH4A00m90sLTgfSU9FowzRuSrwyi37t9VAHRHsqffEF01DHR
YBC9xW1nG4h+ML+tHUSn7rg0F0RLiccvBNEAQF2bIQ==
  "]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Chapter",
 CellChangeTimes->{{3.6398614227267427`*^9, 3.6398614264483*^9}}],

Cell[CellGroupData[{

Cell["Analysis Functions", "Section",
 CellChangeTimes->{{3.6398614444285994`*^9, 3.63986144755168*^9}}],

Cell["\<\
First off, since our main figure of merit is the packing fraction (i.e. the \
fraction of the surface of the sphere being packed onto that is covered by \
the spheres that are being packed onto it) that each variation of the \
algorithm manages to obtain, we need to be able to find this quantity.\
\>", "Text",
 CellChangeTimes->{{3.6398614884549427`*^9, 3.639861591872579*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PackingFraction", "[", "radii_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pi", " ", 
         RowBox[{"#", "^", "2"}]}], "&"}], ",", "radii"}], "]"}], "]"}], "/", 
    
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6398616043786583`*^9, 3.639861628557209*^9}, {
  3.639863302992757*^9, 3.6398633033660517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute Run Statistics", "Section",
 CellChangeTimes->{{3.6398618970064497`*^9, 3.639861934816975*^9}, {
  3.639863389030097*^9, 3.639863394475366*^9}}],

Cell["\<\
In order to get any really meaningful data out of our runs, we have to \
compute various statistics for them.  The structure of the outputDataStats \
list is similar to that of packOutputData, above, except that instead of the \
list corresponding to each individual run containing a timing and then the \
output of the packing function, it contains the following, in order:
- The final packing fraction for the run
- The time it took for the run to complete
- The number of iterations it took for the algorithm to complete
\
\>", "Text",
 CellChangeTimes->{{3.639862748295607*^9, 3.6398627565781193`*^9}, {
  3.639863400323822*^9, 3.639863516478693*^9}, {3.639863855054834*^9, 
  3.6398638680012703`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "outputDataStats", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputDataStats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "configStats", "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"configStats", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"runStats", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PackingFraction", "[", 
            RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2", ",", "3"}],
              "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
             RowBox[{
             "confIdx", ",", "2", ",", "runIdx", ",", "2", ",", "1", ",", "2",
               ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Compute", " ", "the", " ", "packing", " ", "fraction", " ", "for", 
          " ", "the", " ", "final", " ", "packing", " ", "and", " ", "keep", 
          " ", "it", " ", "as", " ", "a", " ", "statistic", " ", "for", " ", 
          "the", " ", "run"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Keep", " ", "the", " ", "total", " ", "time", " ", "for", " ", 
          "the", " ", "run", " ", "as", " ", "a", " ", "statistic"}], " ", 
         "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Keep", " ", "the", " ", "total", " ", "number", " ", "of", " ", 
          "iterations", " ", "for", " ", "the", " ", "run", " ", "as", " ", 
          "a", " ", "statistic"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"configStats", ",", "runStats"}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", ",", 
       RowBox[{"{", 
        RowBox[{"runIdx", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
           RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"outputDataStats", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
          RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         "configStats"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"confIdx", ",", 
      RowBox[{"Length", "[", "packOutputData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.639862772187562*^9, 3.6398627786125393`*^9}, {
  3.6398629124961987`*^9, 3.639863000025601*^9}, {3.639863077458415*^9, 
  3.639863110819601*^9}, {3.639863146330462*^9, 3.639863229082322*^9}, {
  3.639863278983967*^9, 3.639863370953019*^9}, {3.639863531109191*^9, 
  3.639863538460531*^9}, {3.639863644738287*^9, 3.639863684558316*^9}, {
  3.639909761056252*^9, 3.6399097616008797`*^9}, {3.639916961863851*^9, 
  3.639917041894071*^9}, {3.639917082478064*^9, 3.6399171057687817`*^9}, {
  3.639918005274241*^9, 3.6399180539736423`*^9}, {3.639920259009507*^9, 
  3.6399202687061567`*^9}}],

Cell["", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratioVsTime", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Run Time (s)\>\"", ",", "\"\<Packing Ratio\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6399200857328033`*^9, 3.639920137632072*^9}, {
   3.639920181098249*^9, 3.639920239421824*^9}, {3.6399202780798283`*^9, 
   3.6399202893674603`*^9}, 3.6399203295175447`*^9, {3.639920360550166*^9, 
   3.639920375051646*^9}, {3.6399204328334017`*^9, 3.639920433111373*^9}, {
   3.639920488032584*^9, 3.639920572742457*^9}, {3.6399206069473658`*^9, 
   3.639920662035478*^9}, {3.6399207318510723`*^9, 3.639920765730887*^9}, {
   3.639920961272415*^9, 3.639920966152775*^9}, {3.639921020189137*^9, 
   3.639921029151434*^9}, {3.639921060623994*^9, 3.6399210694871197`*^9}, {
   3.639921166001235*^9, 3.6399212433384953`*^9}, {3.639921319753297*^9, 
   3.639921354187114*^9}, {3.639922229550703*^9, 3.6399222501500893`*^9}, {
   3.639922705141837*^9, 3.6399227368971*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratioVsIters", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "3"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Iteration Count\>\"", ",", "\"\<Packing Ratio\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639921589067615*^9, 3.6399216491558743`*^9}, {
  3.639921680740184*^9, 3.639921684822637*^9}, {3.639922182020405*^9, 
  3.63992222711578*^9}, {3.639922703567939*^9, 3.639922732277462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeVsIters", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "3"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Iteration Count\>\"", ",", "\"\<Run Time (s)\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639921589067615*^9, 3.6399216491558743`*^9}, {
  3.639921680740184*^9, 3.639921684822637*^9}, {3.639921816496051*^9, 
  3.6399218190903397`*^9}, {3.639922123702157*^9, 3.639922175200555*^9}, {
  3.6399226801341248`*^9, 3.6399227202213306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"ratioVsTime", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"ratioVsIters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"timeVsIters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1200"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639921657956008*^9, 3.6399216711393147`*^9}, {
   3.6399217082107887`*^9, 3.639921738109078*^9}, 3.639921940748625*^9, {
   3.639922319965041*^9, 3.639922339073244*^9}, {3.639922391674521*^9, 
   3.639922450511497*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.44, 0.7410270000000012}, {2.404, 0.7100467500000011}, {
         2.404, 0.7100467500000011}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{3.416, 0.729620000000001}, {3.368, 0.7106450000000011}, {
         3.368, 0.7106450000000011}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.676, 0.84907199999999}, {2.64, 0.8347687499999914}, {
         2.64, 0.8347687499999914}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.532, 0.7590269999999999}, {2.676, 0.857070749999989}, {
         2.676, 0.857070749999989}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{3.676, 0.8181012500000012}, {3.632, 0.8060112500000013}, {
         3.632, 0.8060112500000013}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{3.732, 0.8221512500000014}, {3.632, 0.7781512500000011}, {
         3.632, 0.7781512500000011}}]}, {}}}, {}}, {
    PlotRange -> {{0, 4}, {0, 1}}, AxesOrigin -> {0, 0}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {2.38325, 0.7026955500000017}, 
     PlotRange -> {{2.404, 3.732}, {0.7100467500000011, 0.857070749999989}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Run Time (s)\"", TraditionalForm], 
       FormBox["\"Packing Ratio\"", TraditionalForm]}, 
     AxesOrigin -> {2.38325, 0.7026955500000017}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{2.404, 3.732}, {0.7100467500000011, 0.857070749999989}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"ConvergenceCriterionPack-5attempt-12particle\"", 
       "\"ConvergenceCriterionPack-10attempt-12particle\"", 
       "\"ConvergenceCriterionPack-5attempt-20particle\"", 
       "\"ConvergenceCriterionPack-10attempt-20particle\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.639922746584391*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{975., 0.7410270000000012}, {954., 0.7100467500000011}, {
         954., 0.7100467500000011}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{745., 0.729620000000001}, {735., 0.7106450000000011}, {
         735., 0.7106450000000011}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1045., 0.84907199999999}, {1036., 0.8347687499999914}, {
         1036., 0.8347687499999914}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{987., 0.7590269999999999}, {1050., 0.857070749999989}, {
         1050., 0.857070749999989}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{790., 0.8181012500000012}, {784., 0.8060112500000013}, {
         784., 0.8060112500000013}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{792., 0.8221512500000014}, {770., 0.7781512500000011}, {
         770., 0.7781512500000011}}]}, {}}}, {}}, {
    PlotRange -> {{0, 1200}, {0, 1}}, AxesOrigin -> {0, 0}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {730.078125, 0.7026955500000017}, 
     PlotRange -> {{735., 1050.}, {0.7100467500000011, 0.857070749999989}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iteration Count\"", TraditionalForm], 
       FormBox["\"Packing Ratio\"", TraditionalForm]}, 
     AxesOrigin -> {730.078125, 0.7026955500000017}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{735., 1050.}, {0.7100467500000011, 0.857070749999989}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"ConvergenceCriterionPack-5attempt-12particle\"", 
       "\"ConvergenceCriterionPack-10attempt-12particle\"", 
       "\"ConvergenceCriterionPack-5attempt-20particle\"", 
       "\"ConvergenceCriterionPack-10attempt-20particle\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.639922746801343*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{975., 2.44}, {954., 2.404}, {954., 2.404}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{745., 3.416}, {735., 3.368}, {735., 3.368}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1045., 2.676}, {1036., 2.64}, {1036., 2.64}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{987., 2.532}, {1050., 2.676}, {1050., 2.676}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{790., 3.676}, {784., 3.632}, {784., 3.632}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{792., 3.732}, {770., 3.632}, {770., 3.632}}]}, {}}}, {}}, {
    PlotRange -> {{0, 1200}, {0, 4}}, AxesOrigin -> {0, 0}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {730.078125, 2.3376}, 
     PlotRange -> {{735., 1050.}, {2.404, 3.732}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Iteration Count\"", TraditionalForm], 
       FormBox["\"Run Time (s)\"", TraditionalForm]}, 
     AxesOrigin -> {730.078125, 2.3376}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{735., 1050.}, {2.404, 3.732}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"ConvergenceCriterionPack-5attempt-12particle\"", 
       "\"ConvergenceCriterionPack-10attempt-12particle\"", 
       "\"ConvergenceCriterionPack-5attempt-20particle\"", 
       "\"ConvergenceCriterionPack-10attempt-20particle\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.6399227470245*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1918, 1003},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "10.1 for Linux x86 (64-bit) (March 23, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 173, 4, 131, "Title"],
Cell[CellGroupData[{
Cell[620, 23, 106, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[751, 28, 212, 4, 65, "Section"],
Cell[966, 34, 192, 2, 33, "Text"],
Cell[1161, 38, 378, 7, 89, "Input",
 InitializationCell->True],
Cell[1542, 47, 503, 9, 55, "Text"],
Cell[2048, 58, 693, 19, 32, "Input",
 InitializationCell->True],
Cell[2744, 79, 403, 9, 32, "Input"],
Cell[3150, 90, 366, 11, 32, "Input",
 InitializationCell->True],
Cell[3519, 103, 216, 5, 33, "Text"],
Cell[3738, 110, 349, 9, 32, "Input",
 InitializationCell->True],
Cell[4090, 121, 191, 4, 33, "Text"],
Cell[4284, 127, 1117, 30, 32, "Input"],
Cell[CellGroupData[{
Cell[5426, 161, 154, 3, 32, "Input"],
Cell[5583, 166, 2369, 43, 344, "Output"]
}, Open  ]],
Cell[7967, 212, 156, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8160, 220, 157, 2, 65, "Section"],
Cell[8320, 224, 254, 5, 33, "Text"],
Cell[8577, 231, 3934, 88, 429, "Input",
 InitializationCell->True],
Cell[12514, 321, 324, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[12863, 331, 1276, 35, 77, "Input"],
Cell[14142, 368, 32022, 526, 403, "Output"]
}, Open  ]],
Cell[46179, 897, 112, 1, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46328, 903, 165, 2, 65, "Section"],
Cell[46496, 907, 570, 9, 55, "Text"],
Cell[47069, 918, 6435, 144, 649, "Input",
 InitializationCell->True],
Cell[53507, 1064, 259, 5, 33, "Text"],
Cell[53769, 1071, 1025, 26, 77, "Input"],
Cell[CellGroupData[{
Cell[54819, 1101, 1057, 29, 32, "Input"],
Cell[55879, 1132, 6506, 137, 406, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62434, 1275, 108, 1, 65, "Section"],
Cell[62545, 1278, 754, 12, 77, "Text"],
Cell[63302, 1292, 123, 1, 33, "Text"],
Cell[63428, 1295, 254, 5, 32, "Input"],
Cell[63685, 1302, 3216, 72, 451, "Input",
 InitializationCell->True],
Cell[66904, 1376, 234, 5, 33, "Text"],
Cell[67141, 1383, 935, 24, 99, "Input"],
Cell[68079, 1409, 112, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[68216, 1414, 616, 14, 32, "Input"],
Cell[68835, 1430, 3675, 72, 217, "Output"]
}, Open  ]],
Cell[72525, 1505, 125, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[72675, 1510, 143, 2, 32, "Input"],
Cell[72821, 1514, 112, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72970, 1520, 313, 7, 32, "Input"],
Cell[73286, 1529, 58057, 969, 402, 5672, 110, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[131404, 2505, 100, 1, 55, "Chapter"],
Cell[CellGroupData[{
Cell[131529, 2510, 95, 1, 65, "Section"],
Cell[131627, 2513, 700, 10, 55, "Text"],
Cell[132330, 2525, 1250, 24, 121, "Input"],
Cell[133583, 2551, 452, 8, 55, "Text"],
Cell[134038, 2561, 640, 12, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134715, 2578, 94, 1, 65, "Section"],
Cell[134812, 2581, 1112, 20, 121, "Text"],
Cell[135927, 2603, 5678, 134, 583, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141654, 2743, 93, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[141772, 2748, 104, 1, 65, "Section"],
Cell[141879, 2751, 389, 6, 55, "Text"],
Cell[142271, 2759, 497, 15, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142805, 2779, 158, 2, 65, "Section"],
Cell[142966, 2783, 716, 13, 143, "Text"],
Cell[143685, 2798, 3753, 78, 319, "Input"],
Cell[147441, 2878, 16, 0, 33, "Text"],
Cell[147460, 2880, 2642, 53, 209, "Input"],
Cell[150105, 2935, 2067, 45, 209, "Input"],
Cell[152175, 2982, 2121, 46, 209, "Input"],
Cell[CellGroupData[{
Cell[154321, 3032, 1420, 40, 77, "Input"],
Cell[155744, 3074, 28132, 584, 328, "Output"],
Cell[183879, 3660, 28132, 584, 360, "Output"],
Cell[212014, 4246, 27757, 577, 327, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

