(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    236355,       5088]
NotebookOptionsPosition[    230990,       4914]
NotebookOutlinePosition[    231528,       4933]
CellTagsIndexPosition[    231485,       4930]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Sphere Packing\n",
 StyleBox["Ben Nissan and Tom Magerlein", "Subchapter"]
}], "Title",
 CellChangeTimes->{{3.639747845072847*^9, 3.6397478810110607`*^9}}],

Cell[CellGroupData[{

Cell["Packing Algorithm", "Chapter",
 CellChangeTimes->{{3.6398603356389313`*^9, 3.6398603406721687`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Distribute particles randomly on a sphere and set initial parameters\
\>", "Section",
 CellChangeTimes->{{3.6397478867629766`*^9, 3.639747916858059*^9}, {
  3.639748551093452*^9, 3.639748555330833*^9}}],

Cell["First we declare the number of particles we plan to pack.", "Text",
 CellChangeTimes->{{3.6397483159251957`*^9, 3.6397483420043716`*^9}, {
  3.639748464125737*^9, 3.639748464381936*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"numParticles", " ", "=", " ", "12"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639747967381583*^9, 3.639747997574209*^9}, {
  3.639914884958185*^9, 3.639914886452383*^9}, {3.639915915720186*^9, 
  3.63991591584601*^9}, {3.639918131994947*^9, 3.639918132283628*^9}, {
  3.6399224950247498`*^9, 3.6399224961791077`*^9}}],

Cell["\<\
Next, we generate random coordinates (ranging from -1 to 1 on x, y, and z) \
for each particle and normalize them to fit to the unit sphere on which we \
are packing.  To do so, we generate a list of random unit vectors and set \
each one\[CloseCurlyQuote]s components as the coordinates of one of our \
points.\
\>", "Text",
 CellChangeTimes->{{3.639748345436235*^9, 3.6397483527719803`*^9}, {
  3.639748389352037*^9, 3.639748462253826*^9}, {3.6397500061817408`*^9, 
  3.639750071698794*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randUnitVec", " ", ":=", " ", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Random", "[", "]"}]}], " ", "-", " ", "1"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639749499040696*^9, 3.639749555200026*^9}, {
   3.639749621339328*^9, 3.639749627803171*^9}, {3.639749687477652*^9, 
   3.639749713172619*^9}, 3.639749745608326*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xRand", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"randUnitVec", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numParticles"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748122307863*^9, 3.6397481857582703`*^9}, {
   3.639748227832479*^9, 3.639748252639678*^9}, {3.639749719807519*^9, 
   3.639749723758436*^9}, 3.639749798823464*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x0", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "/", 
       RowBox[{"Norm", "[", "#", "]"}]}], "&"}], ",", "xRand"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748201279285*^9, 3.639748223295259*^9}, {
  3.63974825495955*^9, 3.639748280882173*^9}}],

Cell["\<\
We set the initial radius of each particle to some relatively small value\
\[LongDash]say, 0.01.\
\>", "Text",
 CellChangeTimes->{{3.6397484753738213`*^9, 3.6397485153322783`*^9}, 
   3.639748570082457*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"r0", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0.01", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numParticles"}], "}"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748291424902*^9, 3.6397483097743196`*^9}, {
  3.639752435777946*^9, 3.6397524390372066`*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s visualize the particles to verify their random \
distribution on the sphere.\
\>", "Text",
 CellChangeTimes->{{3.6397485774102373`*^9, 3.639748620248891*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"showParticles", "[", 
    RowBox[{"x_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "Green", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{
           "x", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "r", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "x", "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Sphere", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639748634738414*^9, 3.6397486975698643`*^9}, {
  3.639748841359561*^9, 3.639748849580667*^9}, {3.6397524579738283`*^9, 
  3.639752494293557*^9}, {3.639783298416368*^9, 3.6397832992996597`*^9}, {
  3.639932476724393*^9, 3.639932483988147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showParticles", "[", 
  RowBox[{"x0", ",", "r0"}], "]"}]], "Input",
 CellChangeTimes->{{3.639748851065*^9, 3.639748856379835*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    SphereBox[{0.41046248309467515`, 
     0.9108285536614971, -0.043725230778792964`}, 0.01], 
    SphereBox[{-0.5097491364403847, -0.38840917675859243`, 
     0.7676549545909246}, 0.01], 
    SphereBox[{0.41595668034126526`, -0.551893367423089, 0.7227681170845031}, 
     0.01], SphereBox[{0.8450878715958154, 
     0.13786136585461678`, -0.5165469321236493}, 0.01], 
    SphereBox[{-0.11735560719181318`, 
     0.6321383951081028, -0.7659169086074501}, 0.01], 
    SphereBox[{0.4080913532961703, -0.11490302993740337`, 0.9056813684050836},
      0.01], SphereBox[{0.23618964037935905`, 0.7208238451300562, 
     0.651634435914332}, 0.01], 
    SphereBox[{-0.924168990959116, -0.23784718772390728`, 
     0.29889863071188233`}, 0.01], 
    SphereBox[{-0.3952177030919558, 0.0516654589973386, 0.9171333858874146}, 
     0.01], SphereBox[{-0.23514140396464014`, -0.9599892618274295, 
     0.152082666065418}, 0.01], 
    SphereBox[{-0.5143368574059598, -0.5755230533315759, -0.6357914848420521},
      0.01], SphereBox[{0.2026450664546393, 0.2792124038153403, 
     0.9386029035738458}, 0.01]}, 
   {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
  Boxed->False,
  ImageSize->{342.09500292788067`, 329.1018737140185},
  ViewPoint->{0.8553048160315423, 3.273027017027304, 0.07581436198112312},
  ViewVertical->{0.09759704027112054, 0.5688219163843521, 
   0.8178786959466364}]], "Output",
 CellChangeTimes->{
  3.639748856727648*^9, 3.6397497589773912`*^9, {3.639752442965665*^9, 
   3.6397524965573587`*^9}, 3.639754479385903*^9, 3.639781099973453*^9, 
   3.639781266074111*^9, 3.639782747189704*^9, 3.6397830117888613`*^9, 
   3.639783136309001*^9, 3.639783218262486*^9, {3.639783301416277*^9, 
   3.639783311649726*^9}, 3.639835292843891*^9, 3.639835333317141*^9, 
   3.6398636035530987`*^9, {3.639910394348577*^9, 3.639910432113693*^9}, {
   3.6399105307253323`*^9, 3.6399105506577377`*^9}, 3.63991139110312*^9, {
   3.639912126412389*^9, 3.6399121423152733`*^9}, {3.639912759948937*^9, 
   3.639912776549138*^9}, {3.639913265959812*^9, 3.639913355510419*^9}, {
   3.639914141994755*^9, 3.639914220400876*^9}, {3.639914420607417*^9, 
   3.639914445873459*^9}, 3.639914889616703*^9, {3.639915906742467*^9, 
   3.6399159195098133`*^9}, {3.6399163336957083`*^9, 3.6399163509452267`*^9}, 
   3.639916405996502*^9, 3.639923295711502*^9, 3.639927331616783*^9, 
   3.6399289543058167`*^9, 3.639930331021315*^9, 3.63993583996384*^9}]
}, Open  ]],

Cell["\<\
The particles appear to be randomly distributed, which is ideal.\
\>", "Text",
 CellChangeTimes->{{3.6397518968164186`*^9, 3.639751923555985*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Moving along the sphere", "Section",
 CellChangeTimes->{{3.639749077599998*^9, 3.639749090590703*^9}, {
  3.639749174307847*^9, 3.639749180602523*^9}}],

Cell["\<\
Next, we create a function to randomly shift a particle along the surface of \
the sphere by some small amount.\
\>", "Text",
 CellChangeTimes->{{3.6397490940544777`*^9, 3.639749097006522*^9}, {
  3.6397491392212963`*^9, 3.639749165362987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"shift", "[", 
   RowBox[{"x_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dx", ",", "xNew", ",", "direction"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Generates", " ", "a", " ", "random", " ", "magnitude", " ", "and", " ", 
      "direction", " ", "for", " ", "our", " ", "initial", " ", "shift"}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"direction", "=", "randUnitVec"}], ";", "\[IndentingNewLine]", 
     RowBox[{"direction", "-=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"direction", ".", "x"}], ")"}], " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"x", ".", "x"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dx", " ", "=", " ", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Delta]"}], "]"}], "]"}], " ", "*", " ", 
       RowBox[{"Normalize", "[", "direction", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "dx", " ", "is", " ", "currently", " ", "in", " ", "a", " ", 
        "completely", " ", "random", " ", "direction"}], ",", " ", 
       RowBox[{
       "which", " ", "we", " ", "need", " ", "to", " ", "fix", " ", "so", " ",
         "that", " ", "our", " ", "particle", " ", "moves", " ", "along", " ",
         "the", " ", 
        RowBox[{"sphere", "'"}], "s", " ", 
        RowBox[{"surface", ".", "  ", "Because"}], " ", "the", " ", "local", 
        " ", "vector", " ", "normal", " ", "to", " ", "the", " ", "sphere", 
        " ", "at", " ", "point", " ", "x", " ", "is", " ", "parallel", " ", 
        "to", " ", "vector", " ", "x"}], ",", " ", 
       RowBox[{
       "we", " ", "can", " ", "subtract", " ", "from", " ", "dx", " ", "the", 
        " ", "component", " ", "parallel", " ", "to", " ", "vector", " ", "x",
         " ", "to", " ", "force", " ", "dx", " ", "tangent", " ", "to", " ", 
        "the", " ", "sphere"}], ",", " ", 
       RowBox[{"a", " ", "good", " ", "first", " ", 
        RowBox[{"start", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dx", "-=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dx", ".", "x"}], ")"}], " ", 
       RowBox[{"x", "/", 
        RowBox[{"(", 
         RowBox[{"x", ".", "x"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Now", ",", " ", 
       RowBox[{"we", " ", "shift", " ", 
        RowBox[{"x", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xNew", " ", "=", " ", 
      RowBox[{"x", " ", "+", " ", "dx"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Finally", ",", " ", 
       RowBox[{
       "we", " ", "reproject", " ", "our", " ", "new", " ", "position", " ", 
        "onto", " ", "the", " ", "surface", " ", "of", " ", "the", " ", 
        "sphere", " ", "and", " ", "return", " ", "the", " ", "corrected", 
        " ", 
        RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xNew", " ", "/=", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"xNew", " ", ".", " ", "xNew"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "xNew", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/TvD0stV7rWjbNoefxAt3VwcAaJj43qjQfTymzen
g+i/P3xmg+hPW+xWg2gHoadrQTSbqOhOEJ3ycs9hEL3jrtIJEO1n+Q9MX85K
vACifW/dfQCia2ZEPgfRTo7/WN2A9LnuG7wgWsyeVwNEHwvYZwqirebyuYNo
84vHA0D0Dq3vYNqllfsOiG7bKHIXRNucCnwLoqdVRINpu2znjyC6os8LTH9i
FVdxB9IHLqqD6WWbFthMBdLsaiZ2INqh3SkYRL8tsAsH0X0t16NB9EanM4kg
ui1Y8tw0IJ2VZg+mAZqrif8=
  "]],

Cell["\<\
We can test this by running it multiple times on a point with arbitrary \
initial position and logging its movement over many iterations.  Ideally, \
this will produce a random path.\
\>", "Text",
 CellChangeTimes->{{3.63975134417318*^9, 3.6397514217868423`*^9}, {
  3.6397514526056128`*^9, 3.639751466625752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testx0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randPath", " ", ":=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"testx0", "=", 
        RowBox[{"shift", "[", 
         RowBox[{"testx0", ",", "0.03"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Gray", ",", 
     RowBox[{"Sphere", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
     "Green", ",", 
     RowBox[{"Line", "[", 
      RowBox[{"randPath", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Boxed", "\[Rule]", " ", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639751531759243*^9, 3.639751539512549*^9}, {
  3.6397515699929943`*^9, 3.639751731278801*^9}, {3.639751854720138*^9, 
  3.639751855001371*^9}, {3.639752999431282*^9, 3.639752999843519*^9}, {
  3.6397833062296667`*^9, 3.6397833068271437`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[0.5], SphereBox[{0, 0, 0}, 1]}, 
   {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1:eJwUWXdYjv8XTiIKoUK0hERU+gql3GkgiRApaRhtikRWKqJImqIlDe29tDzt
Ukl7vrvd+1aSpCK/53dd/XVfp9N5zuc+59z31ebLDmeucXNxcQ0v5uIif7jk
LDMPb16YgM7hKbcmoQCCa3a6XjvGi9icJO4qMzeBo2VUF1cBIyxzPnmK/3QM
Ydfn+f7irwmoGvUVKux4TrQwMir1pBMI8b3r49f9m0Cz/mvLJhdT/KFzZbBP
+WI0MeT1FTKPhYsaz8vnEUT329BQByIEClfOvfrv7wT4b3ZEbP7uSRiJdx+v
s3kL7jM/wp6Tebzuvc3f7+mJ5W4dlbtlLYgTIxv+LSbj3XiOPUmcfIPiJQ3h
Ns2+xJEm3x8+8xMw8gtNPNQRhZZtvxXYry2IU3UOMxq9JG6lpsF2z8eFo315
ITohxDGCOS1KmYDiJY/c3wfy8dPCuiH7vxBiW8M5rf/SJ3AhojWjuyILgeaf
b0/5fSZCBB2YulkTqKQ24JlzNs40v4so0SshHni0UxlVE7j0i9WwVT8Pwatr
537m5BALf5YtRCRMYMTYllYv/Bm6ibNSvMvzCKvtG91Em8h4ZZnhmHOfYLg+
ekhkfxJRruTQdbV9Akvl+SNZXPmwao6tSfZNIB54hmYNdkyg44J2u7tJPloa
mpS1FmKJTKfqTdTuCVy9en5+5lQ+Zi35dsjviCLm1/fXXMmfwNyY81IpVik4
swlM431+xFzZdZGQogmcMtBfU+xSCr2L842J19yJH+dbvWtSJ7Cpz0vp6rJy
eJWtf+g+8gxzt1Qma0InoCG6VzWSrxJHVp6Q27f8AereXX3R8HgCCfyb3wQ9
rwJla+2qwJEkoksh9oGG9wQCt+jZNjpWgZdY+HLeLYzQ9lMxlCZxNYsiDYpT
FZKchV7/tA4jvq417mh6PYFWk8ngBe4q6NuoRr019COGBNK8/7hN4M7fxrrA
f1Uoimq0mf79gQhZ1Diu8mAC1e/oUzLB1dCv/3CP/1oUcVBpoGwfWadKpcsd
ge8VmM8rVP90OpgwrXzk/Ch+AgdzGmX195ej0Dq4bmRJNHFWJm/0TcwEYucO
FBiUlOPXtw8Fy/dEEYOLl0nsJ/kQVXfS0b8kG3Yx0cF/ppKI2EG9h4V1ExjX
+ChpbP4JuZbX+bqm04kcRqlDHnUCq5bs7CrMyMK/8Ez9ZOkUwiNZ2y1uYgLO
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
ATH+B6CtW4I=
     "]]}},
  Boxed->False,
  ImageSize->{361.30668406802295`, 387.91215335517575`},
  ViewPoint->{2.8242674076853254`, -1.2120210948894783`, -1.415810183403595},
  ViewVertical->{0.9331312970275945, 0.1350026476949202, 
   0.33322705115725615`}]], "Output",
 CellChangeTimes->{
  3.639751864834075*^9, 3.6397524201233673`*^9, 3.639752558292203*^9, {
   3.639752596632742*^9, 3.639752600152508*^9}, 3.639753000233259*^9, 
   3.639754479455237*^9, 3.63978110004386*^9, 3.639781266147283*^9, 
   3.639782747259777*^9, 3.6397830118571243`*^9, 3.6397831363836403`*^9, 
   3.639783218343526*^9, {3.639783307199832*^9, 3.639783311720155*^9}, 
   3.639835292929255*^9, 3.6398353334159822`*^9, 3.639863603645075*^9, {
   3.63991039446028*^9, 3.639910432189402*^9}, {3.639910530816285*^9, 
   3.639910550725093*^9}, 3.63991139121213*^9, {3.6399121264931107`*^9, 
   3.639912142370779*^9}, {3.6399127600434504`*^9, 3.639912776609046*^9}, {
   3.639913266051477*^9, 3.639913355578886*^9}, {3.639914142093863*^9, 
   3.6399142204963207`*^9}, {3.639914420700747*^9, 3.6399144459717627`*^9}, 
   3.639914889948524*^9, {3.639915906826187*^9, 3.639915919642427*^9}, {
   3.6399163337853317`*^9, 3.6399163510428247`*^9}, 3.63991640609007*^9, 
   3.639923295844475*^9, 3.639927331658593*^9, 3.639928954348193*^9, 
   3.6399303311184063`*^9, 3.639935840057419*^9}]
}, Open  ]],

Cell["And we see a nice random path.", "Text",
 CellChangeTimes->{{3.639751880765252*^9, 3.639751890028982*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shifting multiple particles", "Section",
 CellChangeTimes->{{3.6397522878500338`*^9, 3.639752291209585*^9}, {
  3.639780933781332*^9, 3.6397809495959883`*^9}}],

Cell["\<\
When moving multiple different particles along the same sphere, we need to \
make sure that none of them crash into each other or overlap.  We create a \
function to check, for each particle in a given list of coordinates, whether \
a desired shift is possible, shift the particle if so, and report whether the \
shift was successful.\
\>", "Text",
 CellChangeTimes->{{3.639752304041439*^9, 3.639752356279109*^9}, {
  3.639752635631185*^9, 3.6397526358622627`*^9}, {3.639752871115658*^9, 
  3.639752921485277*^9}, {3.639753466923962*^9, 3.639753490547243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkAndShift", "[", 
   RowBox[{"coords_", ",", "radii_", ",", "\[Delta]_", ",", "maxAttempts_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"newCoords", "=", "coords"}], ",", "oldCoord", ",", "nearest", 
      ",", 
      RowBox[{"success", "=", "0"}], ",", "order", ",", "currentIdx"}], "}"}],
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "For", " ", "each", " ", "particle", " ", "in", " ", "the", " ", 
       "list"}], ",", " ", 
      RowBox[{"selecting", " ", "in", " ", "random", " ", 
       RowBox[{"order", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", " ", "=", " ", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "coords", "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "We", " ", "store", " ", "our", " ", "current", " ", "position", " ", 
        "and", " ", "generate", " ", "a", " ", "new", " ", 
        RowBox[{"one", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"currentIdx", " ", "=", " ", 
         RowBox[{
         "order", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"oldCoord", "=", 
         RowBox[{
         "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"shift", "[", 
          RowBox[{
           RowBox[{
           "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
            "\[RightDoubleBracket]"}], ",", "\[Delta]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Then", ",", " ", 
          RowBox[{
          "we", " ", "find", " ", "the", " ", "index", " ", "of", " ", "the", 
           " ", "nearest", " ", 
           RowBox[{"particle", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        
        RowBox[{"nearest", "=", 
         RowBox[{"Last", "[", 
          RowBox[{"Nearest", "[", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "\[Rule]", " ", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "&"}], ",", "newCoords"}], 
             "]"}], ",", 
            RowBox[{
            "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
             "\[RightDoubleBracket]"}], ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "If", " ", "the", " ", "move", " ", "results", " ", "in", " ", "a", 
           " ", "collision"}], ",", " ", 
          RowBox[{"we", " ", "reject", " ", 
           RowBox[{"it", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Norm", "[", 
              RowBox[{
               RowBox[{
               "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "newCoords", "\[LeftDoubleBracket]", "nearest", 
                "\[RightDoubleBracket]"}]}], "]"}], "<", 
             RowBox[{
              RowBox[{
              "radii", "\[LeftDoubleBracket]", "currentIdx", 
               "\[RightDoubleBracket]"}], "+", 
              RowBox[{
              "radii", "\[LeftDoubleBracket]", "nearest", 
               "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
              "newCoords", "\[LeftDoubleBracket]", "currentIdx", 
               "\[RightDoubleBracket]"}], "=", "oldCoord"}], ";"}], " ", 
            "\[IndentingNewLine]", "\t\t", ",", "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"success", "++"}], ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\t", "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "maxAttempts"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "And", " ", "we", " ", "iterate", " ", "over", " ", "the", " ", 
         "entire", " ", 
         RowBox[{"list", "."}]}], " ", "*)"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "coords", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"newCoords", ",", "success"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639752936975016*^9, 3.6397530978169928`*^9}, {
   3.639753286396428*^9, 3.639753286971056*^9}, {3.639753356203824*^9, 
   3.639753462781274*^9}, {3.639753622402072*^9, 3.639753632984223*^9}, {
   3.639754440860317*^9, 3.639754475853621*^9}, {3.639780071434338*^9, 
   3.639780119452783*^9}, {3.6397803092641983`*^9, 3.6397804043781567`*^9}, {
   3.6397804441444483`*^9, 3.639780445472067*^9}, {3.6397805740527077`*^9, 
   3.6397805930179577`*^9}, {3.639780705148789*^9, 3.6397807238458443`*^9}, {
   3.6397812366239862`*^9, 3.6397812379555798`*^9}, {3.639835222503232*^9, 
   3.639835261595688*^9}, 3.6398353312508097`*^9, {3.639910181428089*^9, 
   3.639910210849717*^9}, {3.639910325156575*^9, 3.639910389203711*^9}, {
   3.639912116335497*^9, 3.639912122350978*^9}, {3.639912201631672*^9, 
   3.639912204750498*^9}, {3.6399124262467947`*^9, 3.6399124373198843`*^9}, {
   3.6399127248467712`*^9, 3.639912745262801*^9}, {3.639914398467368*^9, 
   3.639914413820429*^9}, {3.63991518279452*^9, 3.6399151901878567`*^9}, {
   3.639916127846266*^9, 3.63991612831701*^9}}],

Cell["\<\
Let\[CloseCurlyQuote]s test this on a fairly small list of fairly large \
particles over a large number of iterations.\
\>", "Text",
 CellChangeTimes->{{3.6397535415462227`*^9, 3.639753550545142*^9}, {
  3.639780976979204*^9, 3.639780995842414*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testRadii", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0.4", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "x0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testx0b", " ", "=", " ", "x0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testPaths", " ", ":=", " ", 
   RowBox[{"Reap", "[", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"Sow", "[", 
       RowBox[{"testx0b", "=", 
        RowBox[{
         RowBox[{"checkAndShift", "[", 
          RowBox[{"testx0b", ",", "testRadii", ",", "0.1", ",", "1"}], "]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "100"}], "}"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.639753644029667*^9, 3.639753660430393*^9}, {
   3.639753692822651*^9, 3.639753813993689*^9}, 3.6397539557590837`*^9, {
   3.639915199882533*^9, 3.639915200070162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Hue", "[", 
          RowBox[{"i", "/", 
           RowBox[{"Length", "[", "testx0b", "]"}]}], "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"testPaths", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], 
           "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "testx0b", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"Boxed", "\[Rule]", " ", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639753833305854*^9, 3.6397539211424217`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {GrayLevel[0.5], SphereBox[{0, 0, 0}], 
   {Hue[
     NCache[
      Rational[1, 12], 0.08333333333333333]], Line3DBox[CompressedData["
1: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
m4f+C97zAq8=
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 6], 0.16666666666666666`]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIPacfzT7rv+D/RV2LzU33b6xv23SJPmFE17Yj4qP
io+Kj4qPio+Kj4qPio+KkycOAJIjdB4=
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 4], 0.25]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIL49ZfkRjvm37AuO1LnLrHy4fxmr/qxXCs/tR8VH
xUfFR8VHxUfFR8VHxUfFyRMHANBo7z8=
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 3], 0.3333333333333333]], Line3DBox[CompressedData["
1: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
     "]]}, 
   {Hue[
     NCache[
      Rational[5, 12], 0.4166666666666667]], Line3DBox[CompressedData["
1:eJyV0+kj1IkfwHHlviKJdG13VNhqFyU+VIhf5cjVafUTOinUplQom6KDklQU
JmflaMiRj3vGFeOewYyjYnwPcuUotn/Ag33wfvJ6/l553MPmxFwRERGXX4n+
ypyO1t86U4htI0yHTXoEODwi/4dmnXhm8x1X1vxkfLxRR/7uTyEoHsgLr4ns
xt9qs5OVYhOQmBvGTPKgIFxv86blVCue04jgF+iW4N8BVWnMP0n4ci0vYCi+
HfWHTk5ZWlXjmqpqyfAKEq6VLVFar9aKG94og6xGOY6p3Yja1kvBuW+hFZLC
Bhw1EFqERpXiZdEVfm4naXDLizQ+LMPBNF+Q42aw8OqXEd0lmTTkMhLc7xtX
oZmmtttQ4SeMk6ncviGchpdBjrub6DJ0EfgLNWw4eG1YUlxEl4ZWylJZUZyN
Jiq9Z8smWvDwq+qjPt4UbPJf7+kakI8bw2wueFu04U9nlfNW0wS4l19RLvKs
wR01By+VijWiTeLUXPNXFBhMpYsxVavQ5aWzY+SxFow5W5KuG0KCgU8A216S
g9HPpQbsp1sw9LmX5sYsEogPCSxBWw2OpV7q/lLVgsPOTs3Kr0hYtKFZqiaj
FhOTFM23BLfg37Hz3pKnKbg7Yp9ypLkIuVuFArZRG27PFz8uyiDBQUlPieos
RK6kT2HA1SasyWFNJqdTEDZveEAktxR3qHRNLFJrQGXjCf8ebQoaD2k1y01z
0KPnuN6aU1xkeRYsjN9MggdPdYnfhTqMYX/LTxjgYtmaM5NSJ0hofbY7L1Oj
GkONDSoWavOQp96cOX6GhEBpxvgfzEq8zXQ0HalqwojIicStrRQE4KjGtWsF
6Hr2sVePSRte5Ft9TR4i4aAwkZhUvwHPe9c2GBW345IeVZ59BAk3rj6M/iBp
g95RT6zO3RXg/zOO5LoWE2AYURJ+xygdd62pDJTn8PHuoN2fH2VJONkkFu99
9ByO3k8t2S4QoNhCxjK6gAAFf2acUlgoLHCY06f8oANvzfsjZ5EzCb4JfrrH
84NQZVemD3lVgMamedW2LQTkGwabCsdiQO7laR4KOjBltYt8+l4ScogOqbSR
87DLOsVUPa4dh2r3K+rfJuGm89PU6vR0iFpGkJ+7uZj+cjypezkFcq9D3WpM
smf1qYaOOV2P29F138pxhiMJKUpnpiwWF0JQLT7cJ96FO8PO+61YQMBiHY/k
avIV2DkH+wS7d6GhiOoTE04/fLZ0uoj7GDDnY10gJ6QT2993u3cfJ6B0Je8f
OToAnSJuaaeadmHWWaNc0fx+uOr3fWXD3lwMKTqQnSHVhfH5qprY1g+uSz+M
Wxjl49Ld00yheje2VRbbey/uh72XBxe8S8rHb2stlQrOdWKAlKfklr8IoFUI
x0iZdDTM4DKXn+3Gcwn2BoJOITgp/ebeXlSAauRQ51y+AOWLBhXmPSUgjT+p
NmqRjUZa+4JDp7j4aebZjiJdCuq9x2VvfIlDifMXbBWy2/E4P9Fi3VMSepvN
b+jr2uF6cmZHqWwLvnKsiF72nII9jH3jQs8CUNXwX0YEtuGhpoEYXj0JM6kb
25Qz3kF3mVNExyU+xj2KTPlrhgBbxfyDD5hZaLOTf2qFsQDV+kKUWHwCbh0o
Xzr1NQXl3rhelRZpRcH5PfMlnlIgbSGZUtn9DtvFFRd5dDTgngit8CY+Bf2S
Xq+DRFl4YlGpmXhuAwo9xsckcinImdYL+WZQiaS17ftjvHr0eh/wXW6KgmGP
16ZRamwMZriGaPqxcTj0Fu0pOwA7fX8oJy4owbJ4uFK3ogRZ37vvfjxGw5HA
e9pZhRzky0WNzPMuQd+MzTqGljRUZr4bNF9QjyNDa9e2KLPwrfNSizErGuw6
wu10qDpc90R1vv8qFupl/mNgIE1Dmvx7cbeaenw4Ua14SJiGyw+r/PQ1o2FQ
ablZ0u5G9OhlW9sm5OHJnOBt1UE0nFj1dia2j4NdSQqjqx+ycUwiiA3mNPy+
/H7Zlxd1+EOA4vdYpZizpWxm7QMaXB7ptUjm1qKnjmFnk6AMuUuusPR30VDl
gXYv0jlIaJqcUE7l4KaXxm2F22jYpViTPQfLZ/V4kd3PsmY4KBk12h1wmAZd
dqdF881irNNxCknxqsMguxTZxSo0ENbce3bPqv+zdw4KpeaMNqJrxLLAvfoU
uNitM6/t+4TUWLm1HM1Bp68xWgq7adh7c6zqlFjZrK5k+Ya02lmPMn4XVgXp
0eC3ZnETEqXIrMosGnBtxtqK5s9jJRQ8Pl/xkHTIx7+DyyTcbRrRu/dO3DhB
gQkjI1xbsxSzfsSWT/zyovsvQkVJCrQyddW6NEqxx5Y6ZBLTiI2SEre1gilI
3C+rvo6qROPyy/lrGuuRH1s61P+FgI0VER9TFbko1uEkTfU1ovTOJDP+ZQKK
b1+0CDCb3YudjRx40Q0YYTRim7eQgLBUFnWS34aXW6K/H9jehPFb5OsCXxCw
epFs7H6X1lm97uf0mECmHu/ZSzSrGBCQUGk1b9y2/T/75CGx1ObP9ciW3Wq+
9yMJqoxw9Zvtjfh4IJDHIBvwdrJvWJXir+9OifZ87uLM6j+0rUdORXPxd22H
3v7TBCT5mI3sYzfiYrleVZ8OLlp/19zkfo+ATcMiK6Q+NmDWFNWm/pSLM3uy
FAYG+6Ejhn2FqdWCAwYrVXjDXHS3vmXaMyMENxlBnuUnHuY8Ohp5amUrXmeM
Qt5nIRhZJAe5tbTP6joBPqaJWTx0vrCNCmb3QeL1uyEbzvDx2KRW2nWpdhx8
N7TD4EwfPPYyP1TsOrv/C6uQPfU=
     "]]}, 
   {Hue[
     NCache[
      Rational[1, 2], 0.5]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIH7xj9tIW+6Wfc69U589svbu/7/Opi789xv7UfFR
8VHxUfFR8VHxUfFR8VFx8sQB3g1UFg==
     "]]}, 
   {Hue[
     NCache[
      Rational[7, 12], 0.5833333333333334]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIFZf3eVXZn3OvilMQfuvwHN7pqRnpQa3ntiPio+K
j4qPio+Kj4qPio+Kj4qTJw4AyB4stw==
     "]]}, 
   {Hue[
     NCache[
      Rational[2, 3], 0.6666666666666666]], Line3DBox[CompressedData["
1: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
KMR/7sFihw==
     "]]}, 
   {Hue[
     NCache[
      Rational[3, 4], 0.75]], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmID6nmGpo731zf8WrYsWnxavslWf6yWpEvrUfFR8V
HxUfFR8VHxUfFR8VHxUnTxwAH0ov1w==
     "]]}, 
   {Hue[
     NCache[
      Rational[5, 6], 0.8333333333333334]], Line3DBox[CompressedData["
1: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
8G8mAf6c
     "]]}, 
   {Hue[
     NCache[
      Rational[11, 12], 0.9166666666666666]], Line3DBox[CompressedData["
1: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
     "]]}, 
   {Hue[1], Line3DBox[CompressedData["
1:eJxTTMoPSmViYGBIAWJmIK7Q6Gdz+3DS3mfCwc1z71209/5x4wsH5zv7UfFR
8VHxUfFR8VHxUfFR8VFx8sQBeRfu2w==
     "]]}},
  Boxed->False]], "Output",
 CellChangeTimes->{{3.639753838275302*^9, 3.639753986273773*^9}, 
   3.6397544806787024`*^9, 3.639754569614916*^9, 3.639780416304613*^9, {
   3.639780456418922*^9, 3.63978046860602*^9}, 3.639780601901228*^9, 
   3.639781101399301*^9, {3.6397812451082478`*^9, 3.639781267359823*^9}, 
   3.6397827484850273`*^9, 3.6397830130606127`*^9, 3.639783137602193*^9, 
   3.6397832195934687`*^9, 3.639783312965164*^9, {3.63983528687293*^9, 
   3.639835296696542*^9}, 3.639835335283477*^9, 3.6398636068404512`*^9, {
   3.6399103969241467`*^9, 3.639910434474971*^9}, {3.639910533208386*^9, 
   3.639910553242002*^9}, 3.639911393725263*^9, {3.639912128821169*^9, 
   3.639912144606348*^9}, {3.639912761912546*^9, 3.639912778336391*^9}, {
   3.639913267880929*^9, 3.639913357389975*^9}, {3.639914145009075*^9, 
   3.639914223293985*^9}, {3.639914424342779*^9, 3.63991444962705*^9}, 
   3.639915173898602*^9, {3.639915912160823*^9, 3.639915922335032*^9}, {
   3.63991633666033*^9, 3.639916353834231*^9}, 3.639916408897623*^9, 
   3.639923297452753*^9, 3.639927333135075*^9, 3.639928955853386*^9, 
   3.639930332610242*^9, 3.6399358428171167`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Packing the particles", "Section",
 CellChangeTimes->{{3.639780804635442*^9, 3.6397808098966513`*^9}}],

Cell["\<\
Now that we can maneuver the particles around each other without collisions, \
we can pack!  We do so by writing a function that, over many iterations, does \
the following in each:
First, it calls checkAndShift on our list of particles, noting the ratio of \
successful moves to unsuccessful moves.  If the ratio is greater than zero, \
it inflates the particles by a small amount (much smaller than the distance \
we move them in checkAndShift) and proceds to the next iteration.  If the \
ratio is zero, then the particles are fully packed and the function exits.\
\>", "Text",
 CellChangeTimes->{{3.639780812512471*^9, 3.639780815320375*^9}, {
  3.639781173662292*^9, 3.639781200650814*^9}, {3.639781390397133*^9, 
  3.639781761631373*^9}}],

Cell["We set our initial shift length and pack!", "Text",
 CellChangeTimes->{{3.639782845010932*^9, 3.639782895056313*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pack", "[", 
   RowBox[{"r0_", ",", "x0_", ",", "\[Delta]0_", ",", "maxAttempts_"}], "]"}],
   ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rCurrent", " ", "=", " ", "r0"}], ",", " ", 
      RowBox[{"xCurrent", " ", "=", " ", "x0"}], ",", " ", 
      RowBox[{"\[Delta]Current", " ", "=", " ", "\[Delta]0"}], ",", "ratios", 
      ",", "currentRatio"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ratios", " ", "=", " ", 
      RowBox[{"Reap", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Shifts", " ", "the", " ", 
          RowBox[{"particles", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xCurrent", ",", "currentRatio"}], "}"}], "=", 
           RowBox[{"checkAndShift", "[", 
            RowBox[{
            "xCurrent", ",", "rCurrent", ",", "\[Delta]Current", ",", 
             "maxAttempts"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Logs", " ", "the", " ", "number", " ", "of", " ", "moves", " ", 
            "accepted"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", 
           RowBox[{"currentRatio", "/", 
            RowBox[{"Length", "[", "xCurrent", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Stops", " ", "if", " ", "the", " ", "acceptance", " ", "ratio", 
            " ", "hits", " ", 
            RowBox[{"zero", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"currentRatio", "\[Equal]", "0"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Inflates", " ", "the", " ", "particles", " ", 
            RowBox[{"otherwise", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"rCurrent", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "0.0005"}], "&"}], ",", "rCurrent"}], "]"}]}],
           ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2000"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"ratios", ",", "xCurrent", ",", " ", "rCurrent"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.639781770975436*^9, 3.6397821720018597`*^9}, {
   3.639782476536893*^9, 3.639782498383363*^9}, {3.6397829008739*^9, 
   3.6397829013933907`*^9}, 3.639914473416383*^9, {3.639914512796277*^9, 
   3.639914528835751*^9}, {3.6399145609774942`*^9, 3.6399145738101683`*^9}, {
   3.639915211697855*^9, 3.639915227173355*^9}, {3.639916054931611*^9, 
   3.639916062709125*^9}, 3.639936021919507*^9, 3.639936809248878*^9}],

Cell["\<\
We record our table of acceptance ratios, our final particle positions, and \
their final radii.\
\>", "Text",
 CellChangeTimes->{{3.639782908863676*^9, 3.63978296752605*^9}, {
  3.639863572055628*^9, 3.639863576192834*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"packResults", " ", "=", " ", 
   RowBox[{"pack", "[", 
    RowBox[{"r0", ",", "x0", ",", ".09", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratioResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rResults", " ", "=", " ", 
   RowBox[{
   "packResults", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6397822776625223`*^9, 3.6397823214392643`*^9}, {
   3.63978250213691*^9, 3.639782665355134*^9}, {3.639916399211482*^9, 
   3.639916399905838*^9}, {3.63991645886604*^9, 3.639916459507036*^9}, 
   3.6399181538449163`*^9, {3.639935811467812*^9, 3.6399358197433977`*^9}, 
   3.63993608524861*^9, {3.639936806069159*^9, 3.639936806602504*^9}, {
   3.63993689725836*^9, 3.639936901243621*^9}}],

Cell["We plot the acceptance ratios:", "Text",
 CellChangeTimes->{{3.639782970416979*^9, 3.639782998788715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"ratioResults", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iteration Number\>\"", ",", "\"\<Acceptance Ratio\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"3", "/", "4"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639782339165208*^9, 3.639782408373151*^9}, {
  3.6397825309817877`*^9, 3.639782546853301*^9}, {3.63978267087397*^9, 
  3.63978267216873*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJxd2DmMK1kVxvErSDp0QNABgUEIWQghs5t1it0DA5iBGTzDMjUrnr1m93vz
Zt59u9+qCh1WaEHiBKnDmyB16ASpRVRCQrKQkCrsEA24gvt7ydNf33e+c869
rnJ3f+qZ1x99/mMhhLOPh/DR////1z2U/x+KnI/gAfwJ+Bj+JDyEPw1/Bv4s
PII/B38e/gI8hr8Ifwn+MvwV+Kvw1+CvwxP4G/A34W/B34a/A38Xfgguco5w
+B46HL6PDocfoMPhh+hw+BE6HH6MDoefoMNhWjz2v3//OehT9Iepfzj3h5+i
w+Fn6HB4hP6PoP+cejj8Ah0Ov0SHwyznYsY86AkOv6IejnCCw6PUwxFOcPg1
9XCEExx+Qz0c4QSHx6iHI5zg8Hh+3sXj1KMnOPyW/nCEExzm1MMRTnB4gno4
wukJ5n+SejjC6Unqf0c9HOEEh99TD0c4weEP1MMRTnD4I/VwhBMcnqIejnB6
ivMrcx6W5KGX6BG9QU9wWxZ/+fNH//596P90rg/h4mn6o0e4gRPcwuEZ9n+G
/uglHPE3cIJbODzL/nABl8/SH27wJ/QWDs/R/7n8fgr0Eo5wAye4hcPz9IcL
uIQj3MAJbuHwAv3hAi7h+ALnj57gFg5/oj9cwCUc4QZOcAuHBf3hAi7hCDcL
vq/gFn94kf5wAZc97w/90ZsX6Y/ewuGl/PM+fIn+cPkSzx/1Df4Et/jDy7x/
Xqb/y7m/RI/UN3DC38LhFfq/Qn/0Eo69/3AfzSv5vAl/C4dX6f8q/eESf0Rv
4AS31IfX8vmHr/Hz2GucP3p8Lc9v0BPc4g+vs//r7A+X+CN6Ayf8ba8f9g1V
zgN4CI977uer8vwZXOKvqvw8I3oNN+Rt4UTejvoWvUMPb+Q8eIP3wRt5vzFc
4J/BZe//12F/6iNcww28JS8x/w5/C3dweJP93+TziD5GL9BncAlXcIRr8ht4
iz+9yf33+uHz2lLfUR/eyv2Dt9gfHsPFW3neDL2Eq7f4/KPX6A35W/SEviOv
hTv84e2cB2+zPzzGX8AzuIQrOL6d71OjN/AWf0LfwS3cUR/eYX94+E7uH6MX
6LN3uH+4giN5NXkNvMWf4B35Ldz1/v79/y77v8v9o4/RC3gGl9RXcIRruHmX
/eFEvx3cwh314b2cB/DwPfaHC3j2HvujV+iRfnXv73+ewr+FE/U79Ba9Qw9L
9l9y/+hjuMA/W+b7lvgr/BF/3XO/P7zt6/vvP/J35Ldwhz9cyPMHF/L8Ifq4
5/7+L/D8o5fUV+iR+vpCPm+DfwsneAe35HVwuJjz4GJeP0QfX+T+8c8u5udX
Ul/hj+TV+Bv8WzhRv6N/S16HP7yf5w3e5/nv9f7+0Yv3+fyjl+gVeRGu4Qbe
kpfot2OfFu6oD5d4/i/x/MPjS/k8BfrsEvdPfgVH6mu4gbd9//7+4R35LfN2
6OEDPv/w8APefx+wP/qM+rL39+9/9Ehejd7AW/IS+o55Wvwdevgw1wcfsj/6
GC7wz+ASf/Uh94+/hhvqt3CCd3ALd3C4zP7wEB5f5vm/zP5wib9Cj+g1egNv
mSeh7y7z/iO/g0PM84567r8PY+4/xj9EH8Fj8ibUF/CU+hn6PHK+8AKu4CV5
kX4r9Bpek9fAG3jL/if0S/hP4R31Z+gt8+3hDj6nPlzJ5zm6kvcbXMnrj/EP
r+R5I+rH6BPyCvKm6DP0OXoJL+hXoS/RI7yiX42+Jq+5kj9vG/xb+IT8hH6K
vkM/g1vm2aN38Dkcrh76/fNw/1f5eeBqnn98le+Hq/n+o97f3z88ob6Ap+TN
4Dn+kvkW6BW8ZJ4Ir+hXk79GbzivDbyFT+iX0E/hHfOf0b9F38Mdeefo4Vo+
z9E17v9a7j+Gh9SP4DE8Ib8gb4p/hn+Ov0RfoFfoSzjiX6HX6Gu4uZbfx4b5
t+Sd4E/kneLf4T8jv72WP7/7Xm8P99/r/zjcP/XhOu9/eHA99x9f5/7xj/CP
0SfX83kL/NOeD/PPrvP8k1dSv2C+Cn1J/wivyK/hdZ//98P9M++m5/7nVeY/
oV9CP2X+HfOfMU9L3h5/R/45/nAj149ucP838rzjG3n98EY+7wj/mPwJXMBT
+s/Im8MlvIAr8pfMG/Gv2K9GX6M35G/I3+I/IS/hP+31/vcZ/Gdwi3/P+XXo
5+jhJvd/k/u/mfc7hof4RzfzfcbkT9AL6qfwDJ7DJbxgvqrnw/O5RI/w6mb+
fNfMv8bf9Hw43w36lvlO0BP6KfqO8zpDb+E93JF/Tl64lfMRPLjF73+38vzh
rfzzPbqVn9cYnsBFn3e4nyn9Z/Sb069kvgX+ivwl/SP1K+pr/Gvma5hn09f3
73/yT8hP8Cnz7uh31ucdvs9b9D3zdvQ/Rw+rvP/Rivtfcf/4h+gj6scr7h+9
WOXnN8U/Q5+v8v1L8hbMV8FLODL/Cr0mf818Df4NeVv8J+gJPsW/Y/8z+rXw
nvoO/bzn/u9ft3n+b+f64HZefwwPb+f9RuSN8U/wF7d5/1M/g+dwSd6CvApe
Mk9EX8F17z88j2v0hrwN82zRT8hL6Ke38/vekXcGt9Tvqe/wn9M/3OH7/w7P
/508/xge3uH9T94Y/6TnQ/8C/xSewXO4JG8BV3fy98WS+giveu6//5l/jb+h
3wZ9y3mecF7pDs8//XbwGfkteXu4o/6cfuEuf/+BB3fz+uOeD/sO7+bnNUIf
383Pf0J+gT4lb4Y+Ry/hBf4Kfcl8EX1FfX03P+818zf4N/i38An9E3xK/q7X
d4f7p1/L/ezxd3fzz98584R7ef+je7k+gI/v8fvfvbzf6F4+3xj/BC7wT+EZ
+XPmLdEX9/L7rOAl9ZF+K/w1+hpu4A31257/erh/9MT8p+g76s/glvp9r//t
cP/wOfnhfp53dD/XB/Dx/XzfIfWj+/k8Y/wT9AJ92uv933/oP4dL+i/Ir/Av
0SO8wl+jr9Eb+m/u5+e9vZ9/3k/gBJ9yHjv6n3E+Lf4983XUn8PhQV5/9CDX
Bw/y/Y7xDx/k+47g8YN8ngn5Rc/973/oM3gOl/CC/hW8hCP7rMir2X8NN+Rt
qN+in8Cp94fwXwiLams=
      "]]}}, {}},
  AspectRatio->NCache[
    Rational[3, 4], 0.75],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Iteration Number\"", TraditionalForm], 
    FormBox["\"Acceptance Ratio\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 984.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6397823907495317`*^9, 3.6397824153105927`*^9}, {
   3.6397825061907587`*^9, 3.639782562365932*^9}, 3.639782672554204*^9, 
   3.639782749550552*^9, 3.639783014084118*^9, 3.639783138602251*^9, 
   3.639783220757448*^9, 3.639783313985736*^9, 3.639835305812935*^9, 
   3.6398353372263927`*^9, 3.639863609770486*^9, {3.6399103998125553`*^9, 
   3.639910436081218*^9}, {3.639910534801077*^9, 3.639910554904253*^9}, 
   3.639911256124442*^9, {3.639911380458515*^9, 3.639911395309794*^9}, {
   3.639912130341679*^9, 3.639912146166164*^9}, {3.639912763462192*^9, 
   3.639912780292471*^9}, {3.6399132695002813`*^9, 3.63991335888559*^9}, {
   3.639914147180958*^9, 3.639914225490265*^9}, {3.6399144271353817`*^9, 
   3.639914452202654*^9}, 3.6399159250747213`*^9, 3.639916018835371*^9, 
   3.6399162352840223`*^9, {3.639916337821686*^9, 3.639916354403542*^9}, {
   3.639916412094304*^9, 3.639916432256247*^9}, 3.639916470733061*^9, 
   3.639918170775782*^9, 3.6399232988483667`*^9, 3.639927334487143*^9, 
   3.6399289572078733`*^9, 3.639930333900127*^9, 3.6399358453901157`*^9, 
   3.6399360514184723`*^9, 3.639936094416691*^9, 3.639936830669878*^9}]
}, Open  ]],

Cell["And, finally, show off our packed particles!", "Text",
 CellChangeTimes->{{3.639782981386093*^9, 3.63978300978827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PackingFraction", "[", "rResults", "]"}]], "Input",
 CellChangeTimes->{{3.639918194060492*^9, 3.6399182042857513`*^9}}],

Cell[BoxData["0.6641107500000011`"], "Output",
 CellChangeTimes->{{3.6399182054386168`*^9, 3.6399182328857*^9}, 
   3.6399232988566313`*^9, 3.639927334491846*^9, 3.639928957213542*^9, 
   3.639930333907104*^9, {3.6399358273888893`*^9, 3.639935845417273*^9}, 
   3.639935904198328*^9, {3.639935957249498*^9, 3.639935962255293*^9}, 
   3.639936056331725*^9, 3.639936097014223*^9, {3.6399361804484787`*^9, 
   3.6399361858567657`*^9}, 3.6399368338030443`*^9, {3.639936906999358*^9, 
   3.639936930931334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showParticles", "[", 
    RowBox[{"xResults", ",", "rResults"}], "]"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.639782436191094*^9, 3.639782438544909*^9}, {
  3.639782691864512*^9, 3.639782711343402*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    SphereBox[{-0.003646854384878435, 
     0.7502015206947829, -0.6611991975194242}, 0.5015000000000002], 
    SphereBox[{-0.10727648845205012`, 0.8990971913984669, 
     0.42440074863834254`}, 0.5015000000000002], 
    SphereBox[{
     0.42002677743144035`, -0.1303348127551485, -0.8981037483635393}, 
     0.5015000000000002], 
    SphereBox[{
     0.9190745959214984, -0.3898007928985716, -0.057941599799962586`}, 
     0.5015000000000002], 
    SphereBox[{0.796841999351817, 0.6038735781132606, 0.019481522673731953`}, 
     0.5015000000000002], 
    SphereBox[{-0.5243427988757956, 0.028778750273073802`, 
     0.8510208063260363}, 0.5015000000000002], 
    SphereBox[{-0.7856915960291316, -0.6076656251543865, 0.1158930711256058}, 
     0.5015000000000002], 
    SphereBox[{-0.8723079401070754, 0.4833810924458341, -0.07363135943348555},
      0.5015000000000002], 
    SphereBox[{0.06690575458598623, -0.790565870151609, 0.6087111178175648}, 
     0.5015000000000002], 
    SphereBox[{-0.5801003963085294, -0.16122879318085886`, \
-0.7984289614312163}, 0.5015000000000002], 
    SphereBox[{
     0.022102400531885138`, -0.9211071255669462, -0.3886812924756298}, 
     0.5015000000000002], 
    SphereBox[{0.4659078831681751, 0.16497698540529573`, 0.8693172255789774}, 
     0.5015000000000002]}, 
   {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
  Boxed->False,
  ImageSize->{361.61783334664307`, 386.9170783902855},
  ViewPoint->{0.7052862786984833, 2.44714826153758, -2.2280118157526227`},
  ViewVertical->{0.4760953733453942, 
   0.28238742052952603`, -0.8397484841222214}]], "Output",
 CellChangeTimes->{
  3.6397827117358913`*^9, 3.639782749603712*^9, 3.639783014119793*^9, 
   3.6397831386467743`*^9, 3.639783220790792*^9, 3.6397833140335283`*^9, 
   3.6398353058509283`*^9, 3.639835337259981*^9, 3.6398636097998037`*^9, {
   3.639910399975585*^9, 3.639910436113357*^9}, {3.6399105348389587`*^9, 
   3.639910554936866*^9}, {3.6399112317895737`*^9, 3.639911256169386*^9}, {
   3.639911380502845*^9, 3.639911395342531*^9}, {3.6399121303665524`*^9, 
   3.6399121461964607`*^9}, {3.639912763474284*^9, 3.639912780558305*^9}, {
   3.639913269600164*^9, 3.639913358916791*^9}, {3.639914147225485*^9, 
   3.639914225531005*^9}, {3.639914427173174*^9, 3.63991445224574*^9}, 
   3.63991592509191*^9, 3.639916021541853*^9, 3.639916238210299*^9, {
   3.639916338210964*^9, 3.639916354626687*^9}, {3.6399164121296883`*^9, 
   3.639916434287353*^9}, 3.639916473066495*^9, 3.6399181738698997`*^9, 
   3.639923298870026*^9, 3.639927334509613*^9, 3.63992895724263*^9, 
   3.639930333930731*^9, 3.639935845450103*^9, 3.6399360582312813`*^9, 
   3.639936099076705*^9, 3.6399368356418743`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adaptive Particle Inflation", "Section",
 CellChangeTimes->{{3.6399335619111423`*^9, 3.639933566371357*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findNearestPair", "[", "x0_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nearest", ",", "closestPair", ",", "closestDistSqr"}], "}"}], 
    ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"nearest", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"nearest", ",", 
          RowBox[{"Last", "[", 
           RowBox[{"Nearest", "[", 
            RowBox[{
             RowBox[{"MapIndexed", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[Rule]", " ", 
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "&"}], ",", "x0"}], "]"}], ",", 
             RowBox[{
             "x0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             ",", "2"}], "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       "\t", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "x0", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"closestPair", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"closestDistSqr", "=", "100"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "x0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
              "-", 
              RowBox[{"x0", "\[LeftDoubleBracket]", 
               RowBox[{
               "nearest", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], ")"}],
             "^", "2"}], "]"}], "<", "closestDistSqr"}], ",", 
         "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"closestDistSqr", "=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "x0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{"x0", "\[LeftDoubleBracket]", 
                RowBox[{
                "nearest", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], 
              ")"}], "^", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\t\t\t", 
          RowBox[{"closestPair", "=", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
             "nearest", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}], "\[IndentingNewLine]", "\t", 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "nearest", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"closestPair", ",", 
        RowBox[{"Sqrt", "[", "closestDistSqr", "]"}]}], "}"}], "]"}], ";"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.639933696142983*^9, 3.6399337637995367`*^9}, {
  3.639933900698907*^9, 3.6399339104084*^9}, {3.639934008147876*^9, 
  3.639934014789166*^9}, {3.6399340594127903`*^9, 3.639934081516479*^9}, {
  3.639934126529914*^9, 3.639934353539378*^9}, {3.639934402151662*^9, 
  3.6399344709736443`*^9}, {3.639934540713167*^9, 3.639934543762011*^9}, {
  3.639934587980351*^9, 3.639934602815337*^9}, {3.639934864845931*^9, 
  3.6399348774029293`*^9}, {3.639935136282434*^9, 3.639935189048771*^9}, {
  3.639935230993895*^9, 3.639935235685103*^9}, {3.6399353443405647`*^9, 
  3.639935488611511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findNearestPair", "[", "x0", "]"}]], "Input",
 CellChangeTimes->{{3.639935096034749*^9, 3.639935101984249*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "11"}], "}"}], ",", "0.1286702341373585`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.639935103308861*^9, {3.639935164559998*^9, 3.639935196669363*^9}, 
   3.639935239723608*^9, 3.639935314877512*^9, 3.6399353656043787`*^9, {
   3.6399354142469473`*^9, 3.639935439459981*^9}, {3.639935472940035*^9, 
   3.6399354782985163`*^9}, 3.6399355139044857`*^9, {3.639935696798847*^9, 
   3.6399356999847*^9}, 3.639935845478544*^9, 3.639936276984066*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"adaptivePack", "[", 
   RowBox[{"r0_", ",", "x0_", ",", "\[Delta]0_", ",", "maxAttempts_"}], "]"}],
   ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rCurrent", " ", "=", " ", "r0"}], ",", " ", 
      RowBox[{"xCurrent", " ", "=", " ", "x0"}], ",", " ", 
      RowBox[{"\[Delta]Current", " ", "=", " ", "\[Delta]0"}], ",", "ratios", 
      ",", "currentRatio", ",", "nearest", ",", "inflation", ",", 
      "inflationRatio"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ratios", " ", "=", " ", 
      RowBox[{"Reap", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"nearest", "=", 
           RowBox[{"findNearestPair", "[", "xCurrent", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"inflation", "=", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nearest", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "-", 
                RowBox[{"2", 
                 RowBox[{
                 "rCurrent", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}]}], ")"}], "/", "4"}], ",", 
             ".0005"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"inflationRatio", "=", 
           RowBox[{"inflation", "/", "0.0005"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"inflation", "\[LessEqual]", "1*^-15"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Inflate", " ", "the", " ", "particles"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"rCurrent", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "+", "inflation"}], "&"}], ",", "rCurrent"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Shifts", " ", "the", " ", 
            RowBox[{"particles", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"{", 
            RowBox[{"xCurrent", ",", "currentRatio"}], "}"}], "=", 
           RowBox[{"checkAndShift", "[", 
            RowBox[{"xCurrent", ",", "rCurrent", ",", 
             RowBox[{"\[Delta]Current", "*", 
              RowBox[{"Sqrt", "[", "inflationRatio", "]"}]}], ",", 
             "maxAttempts"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Logs", " ", "the", " ", "number", " ", "of", " ", "moves", " ", 
            "accepted"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", 
           RowBox[{"currentRatio", "/", 
            RowBox[{"Length", "[", "xCurrent", "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Stops", " ", "if", " ", "the", " ", "acceptance", " ", "ratio", 
            " ", "hits", " ", 
            RowBox[{"zero", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"currentRatio", "\[Equal]", "0"}], ",", 
            RowBox[{"Break", "[", "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2000"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"ratios", ",", "xCurrent", ",", " ", "rCurrent"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.639933632610235*^9, 3.639933671088924*^9}, {
  3.639934581477866*^9, 3.639934641707614*^9}, {3.639934685411381*^9, 
  3.639934729974609*^9}, {3.639934767992784*^9, 3.639934772897438*^9}, {
  3.639934806891466*^9, 3.639934840184496*^9}, {3.639935042422908*^9, 
  3.639935044537107*^9}, {3.639936032337641*^9, 3.639936034125759*^9}, {
  3.6399362048451633`*^9, 3.63993621260266*^9}, {3.639936285253829*^9, 
  3.6399362959808273`*^9}, {3.63993633384149*^9, 3.639936420768292*^9}, {
  3.639936572486909*^9, 3.639936604316196*^9}, {3.6399366635758057`*^9, 
  3.639936667481475*^9}, {3.639936746619506*^9, 3.639936749153386*^9}, {
  3.639936813797192*^9, 3.639936816499756*^9}, {3.6399368698307247`*^9, 
  3.639936871429419*^9}, {3.6399369587427197`*^9, 3.639936963154744*^9}, {
  3.639937034046473*^9, 3.639937050814802*^9}, {3.639937096503859*^9, 
  3.639937100973267*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"adaptivePackResults", " ", "=", " ", 
   RowBox[{"adaptivePack", "[", 
    RowBox[{"r0", ",", "x0", ",", ".09", ",", "1"}], "]"}]}], ";", 
  RowBox[{"adaptiveRatioResults", " ", "=", " ", 
   RowBox[{
   "adaptivePackResults", "\[LeftDoubleBracket]", "1", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adaptiveXResults", " ", "=", " ", 
   RowBox[{
   "adaptivePackResults", "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adaptiveRResults", " ", "=", " ", 
   RowBox[{
   "adaptivePackResults", "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.639934901021225*^9, 3.639935009939801*^9}, {
   3.639935645167555*^9, 3.6399356453125267`*^9}, 3.639936038784374*^9, {
   3.639936119918648*^9, 3.6399361205655107`*^9}, {3.639936244797472*^9, 
   3.6399362448839893`*^9}, {3.639936306048818*^9, 3.6399363061921053`*^9}, {
   3.63993635173298*^9, 3.639936352099246*^9}, {3.639936428694051*^9, 
   3.639936428920022*^9}, 3.639936698037517*^9, {3.639936788455624*^9, 
   3.6399367991137323`*^9}, {3.6399369657647667`*^9, 3.6399369669083633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PackingFraction", "[", "adaptiveRResults", "]"}]], "Input",
 CellChangeTimes->{{3.6399357588479156`*^9, 3.639935783635153*^9}}],

Cell[BoxData["0.790156632698223`"], "Output",
 CellChangeTimes->{
  3.639935784869919*^9, 3.6399358495798197`*^9, {3.639935913466013*^9, 
   3.6399359478307467`*^9}, {3.6399361250337553`*^9, 
   3.6399361357402887`*^9}, {3.639936195859435*^9, 3.639936200124642*^9}, 
   3.639936435643877*^9, 3.6399365418293*^9, {3.639936709027246*^9, 
   3.639936759657913*^9}, {3.639936882597209*^9, 3.6399368905251617`*^9}, 
   3.639937046907176*^9, {3.639937110292292*^9, 3.63993713163553*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"showParticles", "[", 
    RowBox[{"adaptiveXResults", ",", "adaptiveRResults"}], "]"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6399355532721033`*^9, 3.639935558741127*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    SphereBox[{0.7147062226458588, 0.3602468491757779, -0.5995141557713316}, 
     0.5132110133587753], 
    SphereBox[{-0.6845930084822764, -0.3613985406676232, 0.633027256554169}, 
     0.5132110133587753], 
    SphereBox[{-0.8428821189136966, 0.523849266117169, 0.12301089384302773`}, 
     0.5132110133587753], 
    SphereBox[{0.12329317224495653`, 
     0.9913607683362727, -0.044750650067798006`}, 0.5132110133587753], 
    SphereBox[{0.8392837887183593, 0.3428069558847549, 0.4220025035371046}, 
     0.5132110133587753], 
    SphereBox[{-0.08592141610171057, -0.9961228891444721, 
     0.018886502522875187`}, 0.5132110133587753], 
    SphereBox[{
     0.15666918553654247`, -0.4664857166798975, -0.8705434178930762}, 
     0.5132110133587753], 
    SphereBox[{0.8327691920755216, -0.5458237677552739, -0.09258448727146244},
      0.5132110133587753], 
    SphereBox[{-0.2968547615680008, 
     0.46411002684460506`, -0.8345532538530451}, 0.5132110133587753], 
    SphereBox[{0.33638040690540294`, -0.48061531575802424`, 
     0.8098500726115732}, 0.5132110133587753], 
    SphereBox[{-0.8040091873891516, -0.3676199027593812, \
-0.46735942666112873`}, 0.5132110133587753], 
    SphereBox[{-0.1219865960418035, 0.48372678134687963`, 0.8666762206233203},
      0.5132110133587753]}, 
   {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
  Boxed->False,
  ImageSize->{360., 396.431056410422},
  ViewPoint->{2.53994131311321, 1.4552000856131788`, -1.6973776352868988`},
  ViewVertical->{0.26625264446358965`, 
   0.9707683104227852, -0.020511585249007442`}]], "Output",
 CellChangeTimes->{{3.6399361273754997`*^9, 3.639936137680064*^9}, 
   3.639936440085581*^9, 3.639936544085079*^9, 3.639936712492959*^9, 
   3.639936761822661*^9, {3.639937113573484*^9, 3.639937133583922*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  Graphics3DBox[{
    {RGBColor[0, 1, 0], 
     SphereBox[{0.08919283064059248, -0.9950050225935912, 
      0.044829052810043825`}, 0.4990000000000004], 
     SphereBox[{0.6169508915702648, 0.5489865075475757, 0.563901952400744}, 
      0.4990000000000004], 
     SphereBox[{0.6197159298544338, 
      0.6249793419574172, -0.47471358566100524`}, 0.4990000000000004], 
     SphereBox[{-0.9708990586026398, 
      0.2390040251799319, -0.015234630034832749`}, 0.4990000000000004], 
     SphereBox[{-0.36698383293424097`, 
      0.5025128452855157, -0.7828177991639872}, 0.4990000000000004], 
     SphereBox[{0.9720147730036948, -0.23467329591308367`, 
      0.010757567004952015`}, 0.4990000000000004], 
     SphereBox[{0.3585456154549939, -0.4545423280936524, -0.8153749527727733},
       0.4990000000000004], 
     SphereBox[{-0.6399303354472615, -0.5315072638072579, 0.55496774167016}, 
      0.4990000000000004], 
     SphereBox[{-0.3215777955692699, 0.3535879407949525, 0.8783867539536295}, 
      0.4990000000000004], 
     SphereBox[{0.3206917357153275, -0.4342705088258135, 0.8417635866489236}, 
      0.4990000000000004], 
     SphereBox[{-0.18794290505049266`, 0.9762536333893477, 
      0.10773257508886915`}, 0.4990000000000004], 
     SphereBox[{-0.6501917461342757, -0.5613155043685804, \
-0.5120308563107383}, 0.4990000000000004]}, 
    {GrayLevel[0.5], SphereBox[{0, 0, 0}]}},
   Boxed->False,
   ImageSize->{360., 390.2330106088501},
   ViewPoint->{0.5852592964961703, -2.058530931834438, 2.621053597037964},
   ViewVertical->{-0.32466327698007186`, -0.9390924303359905, 
    0.1337517727566986}], "."}]], "Input",
 CellChangeTimes->{{3.639935863032577*^9, 3.639935863050541*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Collection", "Chapter",
 CellChangeTimes->{{3.639859884873258*^9, 3.639859902253352*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.639860162397904*^9, 3.639860170297999*^9}}],

Cell["\<\
First, we have to set up various information about how what data we will be \
collecting: the number of runs we want to try for each configuration, the \
numbers of particles we will be packing, their initial radii, the amount we \
will be inflating them by at each iteration (or the maximum amount we will be \
inflating by for adaptive inflation), and the average amount we will be \
moving them by (again, the maximum if adaptive inflation is being used).\
\>", "Text",
 CellChangeTimes->{{3.639860191091617*^9, 3.639860225775077*^9}, {
  3.639860483573707*^9, 3.6398605517212143`*^9}, {3.6398608134038773`*^9, 
  3.639860822442266*^9}, {3.6398613067732773`*^9, 3.6398613158705053`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"runsPerConfig", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"particleCounts", "=", 
   RowBox[{"{", 
    RowBox[{"12", ",", "20"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ri", "=", ".01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]r0", "=", ".0005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]x0", "=", ".09"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6398602319683943`*^9, 3.6398602670535917`*^9}, {
   3.6398603690695543`*^9, 3.639860476136125*^9}, {3.639860555609291*^9, 
   3.6398605588404007`*^9}, {3.639860799797985*^9, 3.6398608099635687`*^9}, {
   3.639861319546116*^9, 3.639861324209714*^9}, {3.639914866165678*^9, 
   3.63991486670931*^9}, 3.639916845231802*^9, {3.6399178564383707`*^9, 
   3.639917856755299*^9}, {3.639918487122725*^9, 3.639918487273973*^9}, {
   3.639918580814557*^9, 3.639918581653954*^9}, {3.6399189091166353`*^9, 
   3.639918909504896*^9}, {3.639919079356154*^9, 3.6399190811067142`*^9}, {
   3.639919477094693*^9, 3.639919480042556*^9}, {3.639921574206794*^9, 
   3.6399215743453617`*^9}, {3.639922464177655*^9, 3.639922480375296*^9}, {
   3.639922821919835*^9, 3.6399228222296247`*^9}, {3.6399273168666697`*^9, 
   3.639927321376752*^9}, {3.639929973278376*^9, 3.639929974221549*^9}, {
   3.639930196555984*^9, 3.639930196907331*^9}, {3.6399373769468527`*^9, 
   3.639937379971464*^9}}],

Cell["\<\
We also must set up our termination conditions, the number of consecutive \
iterations with a zero acceptance ratio that must occur before the algorithm \
terminates, or for adaptive inflation schemes potentially the minimum \
inflation that the algorithm will perform before it considers itself \
terminated:\
\>", "Text",
 CellChangeTimes->{{3.639860563934363*^9, 3.639860584181712*^9}, {
  3.6398606197368317`*^9, 3.6398607175549717`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxAttemptCounts", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "10"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]rmin", "=", ".00005"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6398602319683943`*^9, 3.6398602670535917`*^9}, {
  3.6398603690695543`*^9, 3.639860476136125*^9}, {3.639860555609291*^9, 
  3.6398606136794662`*^9}, {3.639860652674322*^9, 3.63986065355083*^9}, {
  3.639860733023285*^9, 3.639860734638988*^9}, {3.639915292395986*^9, 
  3.639915299128295*^9}, {3.639917859989756*^9, 3.639917860284905*^9}, {
  3.6399224750569763`*^9, 3.639922475273541*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Runs", "Section",
 CellChangeTimes->{{3.639860767044492*^9, 3.639860771074469*^9}}],

Cell[TextData[{
 "Run all the configurations and collect data for them.  The data is broken \
down as follows:\n- All data is stored within ",
 StyleBox["packOutputData\n", "Input",
  FontFamily->"Nimbus Mono L"],
 StyleBox["- Each element in ",
  FontFamily->"Nimbus Sans L"],
 StyleBox["packOutputData", "Input",
  FontFamily->"Nimbus Mono L"],
 StyleBox[" is a list corresponding to a specific run configuration\n- The \
first element in this list the name of the configuration, as a string; the \
second is a list containing lists of the output from each run.\n- The list \
corresponding to each run is the time that the run took, followed by the \
output from the packing output from that function.",
  FontFamily->"Nimbus Sans L"]
}], "Text",
 CellChangeTimes->{{3.639862264068774*^9, 3.639862307613944*^9}, {
  3.639862343431479*^9, 3.6398624109862347`*^9}, {3.639862455255577*^9, 
  3.639862544560523*^9}, {3.6398626351909447`*^9, 3.6398626450122137`*^9}, {
  3.6398626779204073`*^9, 3.639862692500224*^9}, {3.639863025439373*^9, 
  3.639863045178653*^9}, {3.639863493560472*^9, 3.6398634964808397`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "packOutputData", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"packOutputData", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Clear", "[", "configData", "]"}], ";", "\[IndentingNewLine]", 
      "\t", 
      RowBox[{"configData", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x0", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"randUnitVec", ",", 
            RowBox[{"{", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"r0", " ", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{"ri", ",", 
            RowBox[{"{", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"configData", ",", 
           RowBox[{"Timing", "[", 
            RowBox[{"pack", "[", 
             RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", "1"}], "]"}], 
            "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
        RowBox[{"{", 
         RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"packOutputData", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringJoin", "[", 
           RowBox[{"\"\<StandardPack-\>\"", ",", 
            RowBox[{"ToString", "[", 
             RowBox[{
             "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
              "\[RightDoubleBracket]"}], "]"}], ",", "\"\<particle\>\""}], 
           "]"}], ",", "configData"}], "}"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"particleCountIdx", ",", 
       RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Clear", "[", "configData", "]"}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"configData", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"x0", "=", " ", 
               RowBox[{"Table", "[", 
                RowBox[{"randUnitVec", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "particleCounts", "\[LeftDoubleBracket]", 
                   "particleCountIdx", "\[RightDoubleBracket]"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"r0", " ", "=", " ", 
               RowBox[{"Table", "[", 
                RowBox[{"ri", ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "particleCounts", "\[LeftDoubleBracket]", 
                   "particleCountIdx", "\[RightDoubleBracket]"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"configData", ",", 
                RowBox[{"Timing", "[", 
                 RowBox[{"pack", "[", 
                  RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", 
                   RowBox[{
                   "maxAttemptCounts", "\[LeftDoubleBracket]", 
                    "attemptCountIdx", "\[RightDoubleBracket]"}]}], "]"}], 
                 "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
             RowBox[{"{", 
              RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"packOutputData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<ConvergenceCriterionPack-\>\"", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                  "maxAttemptCounts", "\[LeftDoubleBracket]", 
                   "attemptCountIdx", "\[RightDoubleBracket]"}], "]"}], ",", 
                 "\"\<attempt-\>\"", ",", 
                 RowBox[{"ToString", "[", 
                  RowBox[{
                  "particleCounts", "\[LeftDoubleBracket]", 
                   "particleCountIdx", "\[RightDoubleBracket]"}], "]"}], ",", 
                 "\"\<particle\>\""}], "]"}], ",", "configData"}], "}"}]}], 
            "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"attemptCountIdx", ",", 
           RowBox[{"Length", "[", "maxAttemptCounts", "]"}]}], "}"}]}], "]"}],
        ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"particleCountIdx", ",", 
        RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "configData", "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"configData", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"x0", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"randUnitVec", ",", 
           RowBox[{"{", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"r0", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"ri", ",", 
           RowBox[{"{", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"configData", ",", 
          RowBox[{"Timing", "[", 
           RowBox[{"adaptivePack", "[", 
            RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", "1"}], "]"}], 
           "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
       RowBox[{"{", 
        RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"packOutputData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<AdaptivePack-\>\"", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "]"}], ",", 
           "\"\<Particle-1Attempt\>\""}], "]"}], ",", "configData"}], "}"}]}],
       "]"}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"particleCountIdx", ",", 
      RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "configData", "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"configData", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"x0", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"randUnitVec", ",", 
           RowBox[{"{", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"r0", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"ri", ",", 
           RowBox[{"{", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"configData", ",", 
          RowBox[{"Timing", "[", 
           RowBox[{"adaptivePack", "[", 
            RowBox[{"r0", ",", "x0", ",", "\[Delta]x0", ",", "5"}], "]"}], 
           "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", "\t", ",", 
       RowBox[{"{", 
        RowBox[{"run", ",", "runsPerConfig"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"packOutputData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"\"\<StandardPack-\>\"", ",", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "particleCounts", "\[LeftDoubleBracket]", "particleCountIdx", 
             "\[RightDoubleBracket]"}], "]"}], ",", 
           "\"\<Particle-5Attempt\>\""}], "]"}], ",", "configData"}], "}"}]}],
       "]"}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"particleCountIdx", ",", 
      RowBox[{"Length", "[", "particleCounts", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQHfPw7dVqudeOTivEn4Po7S6334Lokh6+XyA67Eg8
Qw2Qdv0kwgqia26ocoFoK5tWXhDdem+2LYiue6TiDKID4vuLQbTRrEM1YPlp
rs0gOmPSbTDdc9xyNYhetlt/DYj+ZWJ8B0Q/4L1yF0RP79N5BKLnHBJ7AqIj
XqyPnwakzez/J4LoP1d5JoHoDbzcU0D0Jf72GSCa5cOUuSC67nfdIhAt09qy
BkSf9jz4H0QXOH4A00m90sLTgfSU9FowzRuSrwyi37t9VAHRHsqffEF01DHR
YBC9xW1nG4h+ML+tHUSn7rg0F0RLiccvBNFvH3/6swBILzmw7x+IvlAbo7wQ
SLf/+QqmBa+yaYDohAUHDUA0ABXytO4=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing multiple particles", "Section",
 CellChangeTimes->{3.639928618542079*^9}],

Cell["\<\
We want to test the effect of packing different numbers of particles on the \
total number of iterations required for a full pack.  We set up a test with \
particles ranging from 2 (the minimum) to 30.  First, we initialize our \
relevant variables and set up a list to hold our results.\
\>", "Text",
 CellChangeTimes->{{3.6399286384216223`*^9, 3.6399286439172983`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"testNumParticles", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"2", ",", "30"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testr0", "=", ".01"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"test\[Delta]0", "=", ".03"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testRuns", "=", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.639928700738626*^9, 3.639928703719425*^9}, {
  3.6399311358540173`*^9, 3.639931136333921*^9}}],

Cell["\<\
Next, we run the test, which will, for each number of particles, run the \
packing algorithm a given number of times, select the most-packed result (to \
account for randomness in the algorithm), and store the number of iterations \
it took that run to converge.\
\>", "Text",
 CellChangeTimes->{3.6399287147903643`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iterationList", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{"(*", 
    RowBox[{"Our", " ", "initial", " ", 
     RowBox[{"values", "."}]}], "*)"}], "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"x0", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"randUnitVec", ",", 
        RowBox[{"{", 
         RowBox[{
         "testNumParticles", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"r0", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"testr0", ",", 
        RowBox[{"{", 
         RowBox[{
         "testNumParticles", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "The", " ", "best", " ", "packing", " ", "fraction", " ", "and", " ", 
       "pack", " ", "that", " ", "produced", " ", "that", " ", "fraction", 
       " ", "for", " ", "the", " ", "current", " ", "number", " ", "of", " ", 
       
       RowBox[{"particles", "."}]}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"currentBestFraction", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"currentBestPack", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"(*", 
       RowBox[{"Stores", " ", "the", " ", "current", " ", 
        RowBox[{"results", "."}]}], "*)"}], "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"currentRun", "=", 
         RowBox[{"pack", "[", 
          RowBox[{"r0", ",", "x0", ",", "test\[Delta]0", ",", "1"}], "]"}]}], 
        ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "Compares", " ", "to", " ", "the", " ", "best", " ", "run", " ", 
          "so", " ", "far", " ", "and", " ", "substitutes", " ", "it", " ", 
          "if", " ", 
          RowBox[{"better", "."}]}], "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"PackingFraction", "[", 
            RowBox[{
            "currentRun", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}], "]"}], ">", "currentBestFraction"}], 
          ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"currentBestFraction", "=", 
            RowBox[{"PackingFraction", "[", 
             RowBox[{
             "currentRun", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\t\t\t", 
           RowBox[{"currentBestPack", "=", "currentRun"}]}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", ",", 
       RowBox[{"{", "testRuns", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", 
      RowBox[{
      "Appends", " ", "the", " ", "number", " ", "of", " ", "iterations", " ",
        "for", " ", "the", " ", "best", " ", 
       RowBox[{"pack", "."}]}], "*)"}], "\[IndentingNewLine]", "\t ", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"iterationList", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"currentBestPack", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
        "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "testNumParticles", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.63992872944466*^9, 3.6399287294498367`*^9}, {
  3.639928773882427*^9, 3.639928874941647*^9}, {3.639929250651786*^9, 
  3.639929254203034*^9}, {3.6399304030544977`*^9, 3.639930431998526*^9}, {
  3.639930510673365*^9, 3.639930514896174*^9}, {3.6399307721121483`*^9, 
  3.639930775311105*^9}, {3.6399311387685966`*^9, 3.639931139584402*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iterationParticlePairList", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Riffle", "[", 
     RowBox[{"testNumParticles", ",", "iterationList"}], "]"}], ",", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.639928740799851*^9, 3.639928740806967*^9}, {
  3.639930801421225*^9, 3.639930801884795*^9}, {3.6399308346375237`*^9, 
  3.639930836317602*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "1919"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1705"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1504"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1422"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1389"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1225"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1160"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1084"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1024"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "1019"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "923"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "997"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "870"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "895"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "832"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "812"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "794"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "797"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "794"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "795"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "763"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "698"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "727"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "725"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", "782"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "708"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "706"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "662"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.639930802186982*^9, 3.6399308380767193`*^9, {3.6399311162376223`*^9, 
   3.639931121253641*^9}, 3.6399315436604652`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"iterationList", ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Number of Particles\>\"", ",", "\"\<Iterations to Converge\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"500", ",", "1800"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6399338675481052`*^9, 3.639933867572933*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Chapter",
 CellChangeTimes->{{3.6398614227267427`*^9, 3.6398614264483*^9}}],

Cell[CellGroupData[{

Cell["Analysis Functions", "Section",
 CellChangeTimes->{{3.6398614444285994`*^9, 3.63986144755168*^9}}],

Cell["\<\
First off, since our main figure of merit is the packing fraction (i.e. the \
fraction of the surface of the sphere being packed onto that is covered by \
the spheres that are being packed onto it) that each variation of the \
algorithm manages to obtain, we need to be able to find this quantity.\
\>", "Text",
 CellChangeTimes->{{3.6398614884549427`*^9, 3.639861591872579*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PackingFraction", "[", "radii_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pi", " ", 
         RowBox[{"#", "^", "2"}]}], "&"}], ",", "radii"}], "]"}], "]"}], "/", 
    
    RowBox[{"(", 
     RowBox[{"4", " ", "Pi"}], ")"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6398616043786583`*^9, 3.639861628557209*^9}, {
  3.639863302992757*^9, 3.6398633033660517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compute Run Statistics", "Section",
 CellChangeTimes->{{3.6398618970064497`*^9, 3.639861934816975*^9}, {
  3.639863389030097*^9, 3.639863394475366*^9}}],

Cell["\<\
In order to get any really meaningful data out of our runs, we have to \
compute various statistics for them.  The structure of the outputDataStats \
list is similar to that of packOutputData, above, except that instead of the \
list corresponding to each individual run containing a timing and then the \
output of the packing function, it contains the following, in order:
- The final packing fraction for the run
- The time it took for the run to complete
- The number of iterations it took for the algorithm to complete\
\>", "Text",
 CellChangeTimes->{{3.639862748295607*^9, 3.6398627565781193`*^9}, {
   3.639863400323822*^9, 3.639863516478693*^9}, {3.639863855054834*^9, 
   3.6398638680012703`*^9}, 3.639932465263652*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "outputDataStats", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputDataStats", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Clear", "[", "configStats", "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"configStats", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"runStats", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PackingFraction", "[", 
            RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2", ",", "3"}],
              "\[RightDoubleBracket]"}], "]"}], ",", 
           RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"Length", "[", 
            RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
             RowBox[{
             "confIdx", ",", "2", ",", "runIdx", ",", "2", ",", "1", ",", "2",
               ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Compute", " ", "the", " ", "packing", " ", "fraction", " ", "for", 
          " ", "the", " ", "final", " ", "packing", " ", "and", " ", "keep", 
          " ", "it", " ", "as", " ", "a", " ", "statistic", " ", "for", " ", 
          "the", " ", "run"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Keep", " ", "the", " ", "total", " ", "time", " ", "for", " ", 
          "the", " ", "run", " ", "as", " ", "a", " ", "statistic"}], " ", 
         "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Keep", " ", "the", " ", "total", " ", "number", " ", "of", " ", 
          "iterations", " ", "for", " ", "the", " ", "run", " ", "as", " ", 
          "a", " ", "statistic"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"configStats", ",", "runStats"}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", ",", 
       RowBox[{"{", 
        RowBox[{"runIdx", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
           RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"outputDataStats", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"packOutputData", "\[LeftDoubleBracket]", 
          RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         "configStats"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"confIdx", ",", 
      RowBox[{"Length", "[", "packOutputData", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.639862772187562*^9, 3.6398627786125393`*^9}, {
  3.6398629124961987`*^9, 3.639863000025601*^9}, {3.639863077458415*^9, 
  3.639863110819601*^9}, {3.639863146330462*^9, 3.639863229082322*^9}, {
  3.639863278983967*^9, 3.639863370953019*^9}, {3.639863531109191*^9, 
  3.639863538460531*^9}, {3.639863644738287*^9, 3.639863684558316*^9}, {
  3.639909761056252*^9, 3.6399097616008797`*^9}, {3.639916961863851*^9, 
  3.639917041894071*^9}, {3.639917082478064*^9, 3.6399171057687817`*^9}, {
  3.639918005274241*^9, 3.6399180539736423`*^9}, {3.639920259009507*^9, 
  3.6399202687061567`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph", "Section",
 CellChangeTimes->{{3.639932388527252*^9, 3.639932389123444*^9}}],

Cell[TextData[{
 "Calculate the plot bounds, since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " seems to have trouble setting them sensibly by default."
}], "Text",
 CellChangeTimes->{{3.639933200041895*^9, 3.639933234728505*^9}, {
  3.6399332741487303`*^9, 3.639933324628695*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"timeMax", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2"}], 
         "\[RightDoubleBracket]"}], "\[IndentingNewLine]", "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"runIdx", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}],
          "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
      RowBox[{"{", 
       RowBox[{"confIdx", ",", 
        RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iterMax", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "3"}], 
         "\[RightDoubleBracket]"}], "\[IndentingNewLine]", "\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"runIdx", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], "]"}]}],
          "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
      RowBox[{"{", 
       RowBox[{"confIdx", ",", 
        RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.639933245570009*^9, 3.6399332516148977`*^9}, {
  3.63993332684151*^9, 3.639933351739298*^9}, {3.639933401232265*^9, 
  3.6399334782628813`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratioVsTime", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Run Time (s)\>\"", ",", "\"\<Packing Ratio\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6399200857328033`*^9, 3.639920137632072*^9}, {
   3.639920181098249*^9, 3.639920239421824*^9}, {3.6399202780798283`*^9, 
   3.6399202893674603`*^9}, 3.6399203295175447`*^9, {3.639920360550166*^9, 
   3.639920375051646*^9}, {3.6399204328334017`*^9, 3.639920433111373*^9}, {
   3.639920488032584*^9, 3.639920572742457*^9}, {3.6399206069473658`*^9, 
   3.639920662035478*^9}, {3.6399207318510723`*^9, 3.639920765730887*^9}, {
   3.639920961272415*^9, 3.639920966152775*^9}, {3.639921020189137*^9, 
   3.639921029151434*^9}, {3.639921060623994*^9, 3.6399210694871197`*^9}, {
   3.639921166001235*^9, 3.6399212433384953`*^9}, {3.639921319753297*^9, 
   3.639921354187114*^9}, {3.639922229550703*^9, 3.6399222501500893`*^9}, {
   3.639922705141837*^9, 3.6399227368971*^9}, 3.63993022114891*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ratioVsIters", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "3"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "1"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Iteration Count\>\"", ",", "\"\<Packing Ratio\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639921589067615*^9, 3.6399216491558743`*^9}, {
   3.639921680740184*^9, 3.639921684822637*^9}, {3.639922182020405*^9, 
   3.63992222711578*^9}, {3.639922703567939*^9, 3.639922732277462*^9}, 
   3.639930219517006*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeVsIters", "=", 
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", "\t\t", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "3"}], 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
            RowBox[{"confIdx", ",", "2", ",", "runIdx", ",", "2"}], 
            "\[RightDoubleBracket]"}]}], "}"}], "\[IndentingNewLine]", "\t\t",
          ",", 
         RowBox[{"{", 
          RowBox[{"runIdx", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
             RowBox[{"confIdx", ",", "2"}], "\[RightDoubleBracket]"}], 
            "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "\t\t", ",", 
       RowBox[{"{", 
        RowBox[{"confIdx", ",", 
         RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}], 
     ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"outputDataStats", "\[LeftDoubleBracket]", 
         RowBox[{"confIdx", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"confIdx", ",", 
          RowBox[{"Length", "[", "outputDataStats", "]"}]}], "}"}]}], "]"}]}],
      ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Iteration Count\>\"", ",", "\"\<Run Time (s)\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639921589067615*^9, 3.6399216491558743`*^9}, {
  3.639921680740184*^9, 3.639921684822637*^9}, {3.639921816496051*^9, 
  3.6399218190903397`*^9}, {3.639922123702157*^9, 3.639922175200555*^9}, {
  3.6399226801341248`*^9, 3.6399227202213306`*^9}, {3.639930212268413*^9, 
  3.639930214492709*^9}, {3.639930303165483*^9, 3.63993030791778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Show", "[", 
  RowBox[{"ratioVsTime", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "timeMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"ratioVsIters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "iterMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"timeVsIters", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "iterMax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "timeMax"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.639921657956008*^9, 3.6399216711393147`*^9}, {
   3.6399217082107887`*^9, 3.639921738109078*^9}, 3.639921940748625*^9, {
   3.639922319965041*^9, 3.639922339073244*^9}, {3.639922391674521*^9, 
   3.639922450511497*^9}, {3.639933167022595*^9, 3.639933171465551*^9}, {
   3.639933463955624*^9, 3.639933504632372*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1.196, 0.7925879999999963}, {1.14, 0.665523000000001}, {
         1.14, 0.665523000000001}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1.588, 0.7220000000000012}, {1.58, 0.7125312500000011}, {
         1.58, 0.7125312500000011}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2.248, 0.7750346933231848}, {2.164, 0.6895279876429418}, {
         2.164, 0.6895279876429418}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{7.196, 0.785026405692324}, {3.96, 0.7817172244866787}, {
         3.96, 0.7817172244866787}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{3.984, 0.8290006554551423}, {4.072, 0.8290786856550603}, {
         4.072, 0.8290786856550603}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{7.336, 0.7551356951857391}, {8.676, 0.7757809431029984}, {
         8.676, 0.7757809431029984}}]}, {}}}, {}}, {
    PlotRange -> {{0, 8.676}, {0, 1}}, AxesOrigin -> {0, 0}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.657345215717248}, 
     PlotRange -> {{0, 8.676}, {0.665523000000001, 0.8290786856550603}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Run Time (s)\"", TraditionalForm], 
       FormBox["\"Packing Ratio\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.657345215717248}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{0, 8.676}, {0.665523000000001, 0.8290786856550603}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"AdaptivePack-12Particle-1Attempt\"", 
       "\"AdaptivePack-20Particle-1Attempt\"", 
       "\"StandardPack-12Particle-5Attempt\"", 
       "\"StandardPack-20Particle-5Attempt\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.639922746584391*^9}, 3.63992356613342*^9, 3.639927962804748*^9, 
   3.6399296344074306`*^9, 3.639932879791584*^9, {3.639933506090233*^9, 
   3.639933515302641*^9}, 3.639937681395965*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1009., 0.7925879999999963}, {923., 0.665523000000001}, {
         923., 0.665523000000001}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{741., 0.7220000000000012}, {736., 0.7125312500000011}, {
         736., 0.7125312500000011}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1144., 0.7750346933231848}, {1095., 0.6895279876429418}, {
         1095., 0.6895279876429418}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 0.785026405692324}, {1077., 0.7817172244866787}, {
         1077., 0.7817172244866787}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 0.8290006554551423}, {2000., 0.8290786856550603}, {
         2000., 0.8290786856550603}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 0.7551356951857391}, {2000., 0.7757809431029984}, {
         2000., 0.7757809431029984}}]}, {}}}, {}}, {
    PlotRange -> {{0, 2000}, {0, 1}}, AxesOrigin -> {0, 0}, DisplayFunction -> 
     Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {716.2500000000001, 0.657345215717248}, 
     PlotRange -> {{736., 2000.}, {0.665523000000001, 0.8290786856550603}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Iteration Count\"", TraditionalForm], 
       FormBox["\"Packing Ratio\"", TraditionalForm]}, 
     AxesOrigin -> {716.2500000000001, 0.657345215717248}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{736., 2000.}, {0.665523000000001, 0.8290786856550603}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"AdaptivePack-12Particle-1Attempt\"", 
       "\"AdaptivePack-20Particle-1Attempt\"", 
       "\"StandardPack-12Particle-5Attempt\"", 
       "\"StandardPack-20Particle-5Attempt\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.639922746584391*^9}, 3.63992356613342*^9, 3.639927962804748*^9, 
   3.6399296344074306`*^9, 3.639932879791584*^9, {3.639933506090233*^9, 
   3.639933515302641*^9}, 3.63993768143668*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1009., 1.196}, {923., 1.14}, {923., 1.14}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{741., 1.588}, {736., 1.58}, {736., 1.58}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1144., 2.248}, {1095., 2.164}, {1095., 2.164}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 7.196}, {1077., 3.96}, {1077., 3.96}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 3.984}, {2000., 4.072}, {2000., 4.072}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{2000., 7.336}, {2000., 8.676}, {2000., 
         8.676}}]}, {}}}, {}}, {
    PlotRange -> {{0, 2000}, {0, 8.676}}, AxesOrigin -> {0, 0}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {716.2500000000001, 0}, 
     PlotRange -> {{736., 2000.}, {0, 8.676}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Iteration Count\"", TraditionalForm], 
       FormBox["\"Run Time (s)\"", TraditionalForm]}, 
     AxesOrigin -> {716.2500000000001, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, 
     PlotRange -> {{736., 2000.}, {0, 8.676}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"StandardPack-12particle\"", "\"StandardPack-20particle\"", 
       "\"AdaptivePack-12Particle-1Attempt\"", 
       "\"AdaptivePack-20Particle-1Attempt\"", 
       "\"StandardPack-12Particle-5Attempt\"", 
       "\"StandardPack-20Particle-5Attempt\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.639921672269679*^9, {3.639921710721587*^9, 3.6399217391218977`*^9}, 
   3.639921826422542*^9, 3.639921952297391*^9, 3.6399222560907383`*^9, {
   3.6399224328074703`*^9, 3.639922451209009*^9}, {3.639922712399158*^9, 
   3.639922746584391*^9}, 3.63992356613342*^9, 3.639927962804748*^9, 
   3.6399296344074306`*^9, 3.639932879791584*^9, {3.639933506090233*^9, 
   3.639933515302641*^9}, 3.639937681481311*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1918, 1003},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "10.1 for Linux x86 (64-bit) (March 23, 2015)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 173, 4, 131, "Title"],
Cell[CellGroupData[{
Cell[620, 23, 106, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[751, 28, 212, 4, 65, "Section"],
Cell[966, 34, 192, 2, 33, "Text"],
Cell[1161, 38, 378, 7, 32, "Input",
 InitializationCell->True],
Cell[1542, 47, 503, 9, 55, "Text"],
Cell[2048, 58, 693, 19, 32, "Input",
 InitializationCell->True],
Cell[2744, 79, 430, 10, 32, "Input",
 InitializationCell->True],
Cell[3177, 91, 366, 11, 32, "Input",
 InitializationCell->True],
Cell[3546, 104, 216, 5, 33, "Text"],
Cell[3765, 111, 349, 9, 32, "Input",
 InitializationCell->True],
Cell[4117, 122, 191, 4, 33, "Text"],
Cell[4311, 128, 1240, 33, 32, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[5576, 165, 154, 3, 32, "Input"],
Cell[5733, 170, 2476, 43, 344, "Output"]
}, Open  ]],
Cell[8224, 216, 156, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8417, 224, 157, 2, 65, "Section"],
Cell[8577, 228, 254, 5, 33, "Text"],
Cell[8834, 235, 3934, 88, 429, "Input",
 InitializationCell->True],
Cell[12771, 325, 324, 6, 33, "Text"],
Cell[CellGroupData[{
Cell[13120, 335, 1276, 35, 77, "Input"],
Cell[14399, 372, 32232, 530, 403, "Output"]
}, Open  ]],
Cell[46646, 905, 112, 1, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46795, 911, 165, 2, 65, "Section"],
Cell[46963, 915, 570, 9, 55, "Text"],
Cell[47536, 926, 6435, 144, 649, "Input",
 InitializationCell->True],
Cell[53974, 1072, 259, 5, 33, "Text"],
Cell[54236, 1079, 1025, 26, 77, "Input"],
Cell[CellGroupData[{
Cell[55286, 1109, 1057, 29, 32, "Input"],
Cell[56346, 1140, 19376, 349, 406, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75771, 1495, 108, 1, 65, "Section"],
Cell[75882, 1498, 754, 12, 77, "Text"],
Cell[76639, 1512, 123, 1, 33, "Text"],
Cell[76765, 1515, 3260, 72, 451, "Input",
 InitializationCell->True],
Cell[80028, 1589, 234, 5, 33, "Text"],
Cell[80265, 1596, 1097, 26, 99, "Input"],
Cell[81365, 1624, 112, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[81502, 1629, 616, 14, 32, "Input"],
Cell[82121, 1645, 5201, 96, 217, "Output"]
}, Open  ]],
Cell[87337, 1744, 125, 1, 33, "Text"],
Cell[CellGroupData[{
Cell[87487, 1749, 143, 2, 32, "Input"],
Cell[87633, 1753, 506, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88176, 1765, 313, 7, 32, "Input"],
Cell[88492, 1774, 2738, 51, 402, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91279, 1831, 114, 1, 65, "Section"],
Cell[91396, 1834, 4005, 96, 341, "Input"],
Cell[CellGroupData[{
Cell[95426, 1934, 135, 2, 32, "Input"],
Cell[95564, 1938, 527, 11, 32, "Output"]
}, Open  ]],
Cell[96106, 1952, 4875, 104, 583, "Input"],
Cell[100984, 2058, 1234, 25, 77, "Input"],
Cell[CellGroupData[{
Cell[102243, 2087, 151, 2, 32, "Input"],
Cell[102397, 2091, 481, 7, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102915, 2103, 282, 6, 32, "Input"],
Cell[103200, 2111, 1830, 36, 411, "Output"]
}, Open  ]],
Cell[105045, 2150, 1718, 34, 407, InheritFromParent]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106812, 2190, 100, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[106937, 2195, 95, 1, 65, "Section"],
Cell[107035, 2198, 700, 10, 55, "Text"],
Cell[107738, 2210, 1435, 26, 121, "Input"],
Cell[109176, 2238, 452, 8, 55, "Text"],
Cell[109631, 2248, 640, 12, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110308, 2265, 94, 1, 65, "Section"],
Cell[110405, 2268, 1112, 20, 121, "Text"],
Cell[111520, 2290, 10094, 240, 1023, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121651, 2535, 87, 1, 65, "Section"],
Cell[121741, 2538, 381, 6, 55, "Text"],
Cell[122125, 2546, 441, 12, 99, "Input"],
Cell[122569, 2560, 330, 6, 33, "Text"],
Cell[122902, 2568, 3993, 92, 429, "Input"],
Cell[CellGroupData[{
Cell[126920, 2664, 391, 9, 32, "Input"],
Cell[127314, 2675, 1999, 63, 55, "Output"]
}, Open  ]],
Cell[129328, 2741, 514, 13, 32, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129891, 2760, 93, 1, 66, "Chapter"],
Cell[CellGroupData[{
Cell[130009, 2765, 104, 1, 65, "Section"],
Cell[130116, 2768, 389, 6, 55, "Text"],
Cell[130508, 2776, 524, 16, 32, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[131069, 2797, 158, 2, 65, "Section"],
Cell[131230, 2801, 739, 12, 121, "Text"],
Cell[131972, 2815, 3753, 78, 319, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135762, 2898, 90, 1, 65, "Section"],
Cell[135855, 2901, 291, 7, 33, "Text"],
Cell[136149, 2910, 1854, 43, 187, "Input"],
Cell[138006, 2955, 2663, 53, 209, "Input"],
Cell[140672, 3010, 2095, 46, 209, "Input"],
Cell[142770, 3058, 2215, 47, 209, "Input"],
Cell[CellGroupData[{
Cell[145010, 3109, 1534, 41, 77, "Input"],
Cell[146547, 3152, 28228, 586, 328, "Output"],
Cell[174778, 3740, 28268, 586, 327, "Output"],
Cell[203049, 4328, 27889, 580, 335, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

